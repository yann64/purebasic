;
;     Node library documentation
;
;      (c) 2025 - Fantaisie Software
;

@Library Node

@Overview
  Nodes ("Knoten" oder auch "Verbindungen") sind Container, welche verwendet werden können, um Objekte wie @LibraryLink "entity" "Entities",
  @LibraryLink "sound3d" "Sound", @LibraryLink "camera" "Camera", @LibraryLink "billboard" "Billboard" und sogar
  Nodes selbst zusammen zu gruppieren. Sobald ein Objekt zu einem Node hinzugefügt wurde, ist seine Position und
  Bewegung relativ zur Node-Position. Dies erlaubt einfaches hierarchisches Objekt-Management.
@LineBreak
@LineBreak
  @@InitEngine3D muss erfolgreich aufgerufen worden sein, bevor die Node
  Funktionen verwendet werden.

@CommandList

@ExampleFile All Node.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function AttachNodeObject(#Node, ObjektID)

@Description
  Fügt ein existierendes Objekt zu einem Knoten hinzu.

@Parameter "#Node"
  Der zu verwendende Knoten.

@Parameter "ObjectID"
  Das anzufügende Objekt. Die folgenden Objekte werden unterstützt:
@FixedFont
  - Entity : verwenden Sie @@EntityID als 'ObjektID'.
  - Sound3D: verwenden Sie @@SoundID3D als 'ObjektID'.
  - Text3D : verwenden Sie @@Text3DID als 'ObjektID'.
  - Camera : verwenden Sie @@CameraID als 'ObjektID'.
  - Light  : verwenden Sie @@LightID als 'ObjektID'.
  - Node   : verwenden Sie @@NodeID als 'ObjektID'.
  - Mesh   : verwenden Sie @@MeshID als 'ObjektID' (wird nur unterstützt, wenn das #PB_Mesh_Dynamic Flag gesetzt ist).
  - BillboardGroup : verwenden Sie @@BillboardGroupID als 'ObjektID'.
  - ParticleEmitter: verwenden Sie @@ParticleEmitterID as 'ObjektID'.
@EndFixedFont

@NoReturnValue

@Remarks
  Ein Objekt kann mittels @@DetachNodeObject von einem Knoten getrennt werden.

@SeeAlso
  @@DetachNodeObject

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function DetachNodeObject(#Node, ObjektID)

@Description
  Trennt ein zuvor hinzugefügtes Objekt von einem Knoten.
  
@Parameter "#Node"
  Der zu verwendende Knoten.

@Parameter "ObjectID"
  Das abzutrennende Objekt. Die folgenden Objekte werden unterstützt:
@FixedFont
  - Entity : verwenden Sie @@EntityID als 'ObjektID'.
  - Sound3D: verwenden Sie @@SoundID3D als 'ObjektID'.
  - Camera : verwenden Sie @@CameraID als 'ObjektID'.
  - Light  : verwenden Sie @@LightID als 'ObjektID'.
  - Node   : verwenden Sie @@NodeID als 'ObjektID'.
  - Mesh   : verwenden Sie @@MeshID als 'ObjektID' (wird nur unterstützt, wenn das #PB_Mesh_Dynamic Flag gesetzt ist).
  - BillboardGroup : verwenden Sie @@BillboardGroupID als 'ObjektID'.
  - ParticleEmitter: verwenden Sie @@ParticleEmitterID as 'ObjektID'.
@EndFixedFont

@NoReturnValue

@Remarks
  Ein Objekt kann mittels @@AttachNodeObject zu einem Knoten hinzugefügt werden.

@SeeAlso
  @@AttachNodeObject

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = CreateNode(#Node [, x, y, z])

@Description
  Erstellt einen neuen Knoten an der angegebenen Position.
  
@Parameter "#Node"
  Eine Nummer zum Identifizieren des neuen Knotens (Node).
  @ReferenceLink "purebasic_objects" "#PB_Any" kann verwendet werden, um diese Nummer automatisch
  zu generieren.

@OptionalParameter "x, y, z"
  Die absolute Position des neuen Knotens in der Welt.
  Standardmäßig wird der neue Knoten an der Position "0, 0, 0" erstellt.

@ReturnValue
  Ein Wert ungleich Null, wenn der Knoten erfolgreich erstellt wurde, andernfalls Null.
  Wenn @#PB_Any als #Node Parameter verwendet wurde, dann wird im Erfolgsfall die generierte Nummer zurückgegeben.
  
@SeeAlso
  @@FreeNode

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function NodeID = NodeID(#Node)

@Description
  Gibt den einmaligen Systembezeichner für den Knoten zurück.
  
@Parameter "#Node"
  Der zu verwendende Knoten.

@ReturnValue
  Gibt den einmaligen Systembezeichner für den Knoten zurück.

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function NodeLookAt(#Node, x, y, z [, RichtungX, RichtungY, RichtungZ])

@Description
  Der Punkt (in Welt-Einheiten), auf den der Knoten ausgerichtet ist.
  Die Position des Knotens selbst wird dabei nicht geändert.

@Parameter "#Node"
  Der zu verwendende Knoten.

@Parameter "x, y, z"
  Die Position (in Welt-Einheiten), auf welche der Knoten weist.

@OptionalParameter "RichtungX, RichtungY, RichtungZ"
  Die Vektor-Richtung des Knotens (Werte zwischen -1.0 und 1.0).

@NoReturnValue

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodeX(#Node [, Modus])

@Description
  Gibt die 'x' Position des Knotens in der Welt zurück.
  
@Parameter "#Node"
  Der zu verwendende Knoten.

@OptionalParameter "Modus"
  Der Modus, um die 'x' Position zu ermitteln. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Absolute: ermittelt die absolute 'x' Position des Knotens in der Welt (Standard).
  @#PB_Relative: ermittelt die 'x' Position des Knotens relativ zu seinem übergeordneten ("parent").
@EndFixedFont  
  
@ReturnValue
  Die 'x' Position des Knotens in der Welt.

@SeeAlso
  @@NodeY, @@NodeZ
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodeY(#Node [, Modus])

@Description
  Gibt die 'y' Position des Knotens in der Welt zurück.
  
@Parameter "#Node"
  Der zu verwendende Knoten.

@OptionalParameter "Modus"
  Der Modus, um die 'y' Position zu ermitteln. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Absolute: ermittelt die absolute 'y' Position des Knotens in der Welt (Standard).
  @#PB_Relative: ermittelt die 'y' Position des Knotens relativ zu seinem übergeordneten ("parent").
@EndFixedFont  
  
@ReturnValue
  Die 'y' Position des Knotens in der Welt.

@SeeAlso
  @@NodeX, @@NodeZ
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodeZ(#Node [, Modus])

@Description
  Gibt die 'z' Position des Knotens in der Welt zurück.
  
@Parameter "#Node"
  Der zu verwendende Knoten.

@OptionalParameter "Modus"
  Der Modus, um die 'z' Position zu ermitteln. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Absolute: ermittelt die absolute 'z' Position des Knotens in der Welt (Standard).
  @#PB_Relative: ermittelt die 'z' Position des Knotens relativ zu seinem übergeordneten ("parent").
@EndFixedFont  
  
@ReturnValue
  Die 'z' Position des Knotens in der Welt.

@SeeAlso
  @@NodeX, @@NodeY
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeNode(#Node)

@Description
  Gibt den angegebenen Knoten frei, welcher zuvor mit @@CreateNode erstellt wurde.
  Sein gesamter zugehöriger Speicher wird freigegeben und dieses Objekt kann nicht mehr 
  verwendet werden. 
@LineBreak
@LineBreak
  Die hinzugefügten Objekte werden nicht automatisch freigegeben, und können daher
  wiederverwendet werden.
  
@Parameter "#Node"  
  Der freizugebende Knoten. Wenn @#PB_All angegeben wird, dann werden alle verbliebenen Knoten freigegeben.
  
@NoReturnValue

@Remarks
  Alle verbleibenden Nodes werden automatisch freigegeben, wenn das Programm endet.
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = IsNode(#Node)

@Description
  Überprüft, ob der angegebene Knoten gültig und korrekt initialisiert ist.

@Parameter "#Node"
  Der zu überprüfende Knoten.

@ReturnValue
  Ein Wert ungleich Null, wenn der Knoten gültig ist, andernfalls Null.

@Remarks
  Diese Funktion ist "kugelsicher" und kann mit jedem Wert verwendet werden. 
  Dies ist der korrekte Weg, um sicherzugehen, dass ein Knoten fertig zur Benutzung ist.

@SeeAlso
  @@CreateNode
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function MoveNode(#Node, x, y, z [, Modus])

@Description
  Bewegt den angegebenen Knoten.

@Parameter "#Node"
  Der zu bewegende Knoten.

@Parameter "x, y, z"  
  Die neue Position des Knotens.

@OptionalParameter "Modus"
  Der Bewegungsmodus. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Relative: relative Bewegung, aufgehend von der aktuellen Knoten-Position (Standard).
  @#PB_Absolute: absolute Bewegung an die angegebene Position.
@EndFixedFont
  kombiniert mit einem der folgenden Werte:
@FixedFont
  @#PB_Local : lokale Bewegung.
  @#PB_Parent: Bewegung relativ zur übergeordneten ("parent") Position.
  @#PB_World : Bewegung relativ zur Welt.
@EndFixedFont

@NoReturnValue  

@SeeAlso
  @@RotateNode

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function RotateNode(#Node, x, y, z [, Modus])

@Description
  Rotiert den Knoten entsprechend der angegebenen x,y,z Winkel-Werte.

@Parameter "#Node"
  Der zu rotierende Knoten.

@Parameter "x, y, z"
  Die neue Rotation, die auf den Knoten angewendet werden soll.
  Die Werte werden in Grad angegeben und reichen von 0 bis 360.

@OptionalParameter "Modus"
  Der Rotationsmodus. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Absolute: absolute Rotation (Standard).
  @#PB_Relative: relative Rotation, basierend auf der vorherigen "Node"-Rotation.
@EndFixedFont

@NoReturnValue

@SeeAlso
  @@MoveNode

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ScaleNode(#Node, x, y, z [, Modus])

@Description
  Skaliert den Knoten entsprechend den angegebenen x,y,z-Werten.
  @LineBreak
  Im @#PB_Relative-Modus handelt es sich um eine faktorbasierte Skalierung (Größenänderung). Das bedeutet,
  dass die Knotengröße mit dem angegebenen Wert multipliziert wird, um die neue Größe zu erhalten.

@Parameter "#Node"
  Der zu verwendende Knoten.
 
@Parameter "x, y, z"
  Die Skalierungs-Werte.

@OptionalParameter "Modus"
  Der Skalierungs-Modus. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Relative: relative Skalierung, basierend auf der vorherigen Größe (Standard). Die Verwendung
                von 1.0 als Skalierungs-Wert lässt diesen Wert unverändert.
  @#PB_Absolute: absolute Skalierung, in Welt-Einheiten.
@EndFixedFont

@NoReturnValue

@Remarks
  Die angehängten @LibraryLink "entity" "Entities" skalieren nicht automatisch mit dem Knoten - es sei denn, das Attribut
  @#PB_Entity_InheritScale wurde gesetzt.

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function NodeFixedYawAxis(#Node, Aktivieren [, VektorX, VektorY, VektorZ])

@Description
  Ändert die feste Hoch- bzw. Gierachse (englisch "fixed yaw axis") des Knotens.
  Das Standard-Verhalten eines Knotens ist es, um seine eigene Y-Achse zu gieren.

@Parameter "#Node"
  Der zu verwendende Knoten.

@Parameter "Aktivieren"
  Aktiviert oder deaktiviert die Verwendung einer benutzerdefinierten Gierachse.
  Wenn der Parameter auf @#True gesetzt wird, muss ein neuer Achsen-Vektor
  angegeben werden. Wenn er auf @#False gesetzt wird, dann wird der
  Knoten um seine eigene Y-Achse gieren.

@OptionalParameter "VektorX, VektorY, VektorZ"
  Die Vektor-Richtung der neuen Gier-Achse (Werte zwischen -1.0 und 1.0).
  Der 'Aktivieren' Parameter muss auf @#True gesetzt werden, damit dies einen Effekt hat.

@NoReturnValue

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodeRoll(#Node [, Modus])

@Description
  Ermittelt den Roll-Wert (englisch "roll") des Knotens.

@Parameter "#Node"
  Der zu verwendende Knoten.

@OptionalParameter "Modus"
  Der Modus zum Ermitteln des Roll-Wertes. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#True : Der Roll-Wert ist der ursprüngliche (Roh-) Wert, kann aber mit @@RotateNode nicht
          verwendet werden, um die gleiche Ausrichtung wiederherzustellen (Standard).
  @#False: Der Roll-Wert wurde angepasst und kann daher mit @@RotateNode zurückgesetzt werden,
          um die gleiche Ausrichtung wiederherzustellen.
@EndFixedFont  

@ReturnValue
  Der aktuelle Roll-Wert des Knotens.

@SeeAlso
  @@NodeYaw, @@NodePitch
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodePitch(#Node [, Modus])

@Description
  Ermittelt die Neigung bzw. den Nick-Wert (englisch "pitch") des Knotens.

@Parameter "#Node"
  Der zu verwendende Knoten.

@OptionalParameter "Modus"
  Der Modus zum Ermitteln des Neigungs-Wertes. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#True : Die Neigung wurde angepasst, sodass sie mit @@RotateNode zurückgesetzt werden kann,
          um die gleiche Ausrichtung wiederherzustellen (Standard).
  @#False: Die Neigung ist der Rohwert, kann aber mit @@RotateNode nicht verwendet werden,
          um die gleiche Ausrichtung wiederherzustellen.
@EndFixedFont  

@ReturnValue
  Der aktuelle Neigungs-Wert des Knotens.

@SeeAlso
  @@NodeYaw, @@NodeRoll
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodeYaw(#Node [, Modus])

@Description
  Ermittelt den Gier-Wert (englisch "yaw") des Knotens.

@Parameter "#Node"
  Der zu verwendende Knoten.

@OptionalParameter "Modus"
  Der Modus zum Ermitteln des Gier-Wertes. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#True : Der Gier-Wert ist angepasst und kann daher mit @@RotateNode zurückgesetzt werden,
          um die gleiche Ausrichtung wiederherzustellen (Standard).
  @#False: Der Gier-Wert ist der Rohwert, kann aber mit @@RotateNode nicht verwendet werden,
          um die gleiche Ausrichtung wiederherzustellen.
@EndFixedFont  

@ReturnValue
  Der aktuelle Gier-Wert des Knotens.

@SeeAlso
  @@NodePitch, @@NodeRoll
  
@SupportedOS
