;
;     Node animation library documentation
;
;      (c) 2018 - Fantaisie Software
;

@Library NodeAnimation

@Overview
  Node Animation ermöglicht die Definition einer Spur (oder auch Strecke bzw. Weg - englisch
  "track"), welcher ein Knoten (englisch "node") folgt - mit vordefiniertem Key-Frame und
  glatter Interpolation. Dann kann ein Objekt wie eine Kamera an diesem Knoten angebracht
  (englisch "attached") werden, und leicht auf dieser Strecke bewegt werden.
@LineBreak
@LineBreak
  @@InitEngine3D sollte erfolgreich aufgerufen worden sein, bevor die Funktionen der
  Bibliothek "Node Animation" verwendet werden.

@CommandList

@ExampleFile All NodeAnimation.pb
@ExampleFile All NodeAnimation2.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = CreateNodeAnimation(#NodeAnimation, NodeID, Länge, Interpolation, RotationsInterpolation)

@Description
  Erstellt eine neue Node-Animation der angegebenen Länge. Eine Node-Animation ist physikalisch
  in der 3D-Welt nicht vorhanden, es ist eine virtuelle Spur, um einen Knoten (oder auch "Node",
  und sein beigefügtes Objekt) leicht durch die Welt zu bewegen.

@Parameter "#NodeAnimation"
  Die Nummer zum Identifizieren der neuen Node-Animation. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Zahl automatisch zu generieren.

@Parameter "NodeID"
  Der automatisch zu bewegende Knoten (Node). @@NodeID kann verwendet werden, um eine gültige Node ID
  zu erhalten.

@Parameter "Länge"
  Die Länge der neuen Animation (in Millisekunden).

@Parameter "Interpolation"
  Die Art der zwischen den Punkten anzuwendenden Interpolation. Dies kann einer der folgenden
  Werte sein:
@FixedFont
  @#PB_NodeAnimation_Linear: alle Punkte werden durch eine gerade Linie miteinander verbunden,
                            was zu einer abrupten Richtungsänderung führen kann
  @#PB_NodeAnimation_Spline: alle Punkte werden durch ein Spline (auch "Polynomzug") miteinander
                            verbunden, was in einer sanfteren Richtungsänderung mündet, jedoch
                            auch langsamer ist.
@EndFixedFont

@Parameter "RotationsInterpolation"
  Die Art der Interpolation, die auf die Rotation zwischen Punkten anzuwenden ist. Dies kann einer
  der folgenden Werte sein:
@FixedFont
  @#PB_NodeAnimation_LinearRotation:    alle Punkte werden durch eine gerade Linie miteinander
                                       verbunden, was zu einer abrupten Rotation führen kann
  @#PB_NodeAnimation_SphericalRotation: alle Punkte werden durch eine Kurve miteinander
                                       verbunden, was zu einer sanfteren Rotation führt, aber
                                       auch langsamer ist.
@EndFixedFont

@ReturnValue
  Gibt null zurück, wenn die #NodeAnimation nicht erstellt werden konnte. Wenn @ReferenceLink "purebasic_objects" "#PB_Any"
  als '#NodeAnimation' Parameter verwendet wurde, dann wird die Nummer der neuen Node-Animation zurückgegeben.

@SeeAlso
  @@FreeNodeAnimation

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeNodeAnimation(#NodeAnimation)

@Description
  Gibt eine Node-Animation und all seinen verwendeten Speicher frei. Diese Node-Animation darf
  nach dem Aufrufen dieser Funktion (mittels seiner Nummer mit anderen Funktionen dieser Bibliothek)
  nicht mehr verwendet werden, außer Sie erstellen Sie erneut.

@Parameter "#NodeAnimation"
  Die frei zu gebende Node-Animation. Wenn @#PB_All angegeben wird, dann werden alle verbliebenen Node-Animationen freigegeben.

@NoReturnValue

@Remarks
  Alle verbleibenden Node-Animationen werden am Ende des Programms automatisch freigegeben.

@SeeAlso
  @@CreateNodeAnimation
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function CreateNodeAnimationKeyFrame(#NodeAnimation, Zeit, x, y, z)

@Description
  Erstellt ein neues Keyframe (auch "Schlüsselbild") für die #NodeAnimation. Ein Keyframe ist
  ein Punkt in der Welt zu einem bestimmten Zeitpunkt.
  Wenn die Node-Animation abgespielt wird, folgt sie jedem Keyframe und somit der Bewegung
  von Punkt zu Punkt. Die Bewegung wird interpoliert, um dem Zeitdruck (englisch "time constraint")
  gerecht zu werden. Zum Beispiel, wenn das erste Keyframe zum Zeitpunkt 0 definiert wird, das
  zweite zum Zeitpunkt 1000 und das dritte zum Zeitpunkt 3000, dann dauert die Bewegung vom
  ersten Keyframe zum zweiten 1000 Millisekunden, und das Bewegen vom zweiten Keyframe zum
  dritten Keyframe wird 2000 Millisekunden beanspruchen. Die gesamte Animation dauert 3000
  Millisekunden.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@Parameter "Zeit"
  Der Zeitpunkt (in Millisekunden) innerhalb der Animation, zu dem das Keyframe festgelegt
  werden soll. Dieser Wert muss zwischen Null und der bei @@CreateNodeAnimation definierten
  'Länge' liegen.

@Parameter "x"
  Die Keyframe 'x' Position in der Welt.
  
@Parameter "y"
  Die Keyframe 'y' Position in der Welt.

@Parameter "z"
  Die Keyframe 'z' Position in der Welt.

@NoReturnValue

@SeeAlso
  @@CreateNodeAnimation
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationKeyFrameTime(#NodeAnimation, KeyFrame)

@Description
  Gibt die Keyframe-Zeit der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt die Node-Animation Keyframe-Zeit (in Millisekunden) zurück, oder null wenn das
  Keyframe nicht existiert.

@SeeAlso
  @@CreateNodeAnimationKeyFrame

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetNodeAnimationKeyFramePosition(#NodeAnimation, KeyFrame, x, y, z)

@Description
  Ändert die Keyframe-Position für die #NodeAnimation.
  
@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  Wenn das Keyframe nicht existiert, dann hat diese Funktion keinen Effekt.

@Parameter "x"
  Die neue Keyframe 'x' Position in der Welt.
  
@Parameter "y"
  Die neue Keyframe 'y' Position in der Welt.

@Parameter "z"
  Die neue Keyframe 'z' Position in der Welt.

@NoReturnValue

@SeeAlso
  @@CreateNodeAnimationKeyFrame

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationKeyFrameX(#NodeAnimation, KeyFrame)

@Description
  Gibt die Keyframe 'x' Position der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt die 'x'-Position des Keyframes der Node-Animation in der Welt zurück, oder Null
  wenn das Keyframe nicht existiert.

@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFrameY, @@GetNodeAnimationKeyFrameZ

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = GetNodeAnimationKeyFrameY(#NodeAnimation, KeyFrame)

@Description
  Gibt die Keyframe 'y' Position der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt die 'y'-Position des Keyframes der Node-Animation in der Welt zurück, oder Null
  wenn das Keyframe nicht existiert.

@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFrameX, @@GetNodeAnimationKeyFrameZ

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = GetNodeAnimationKeyFrameZ(#NodeAnimation, KeyFrame)

@Description
  Gibt die Keyframe 'z' Position der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt die 'z'-Position des Keyframes der Node-Animation in der Welt zurück, oder Null
  wenn das Keyframe nicht existiert.

@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFrameX, @@GetNodeAnimationKeyFrameY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetNodeAnimationKeyFrameRotation(#NodeAnimation, KeyFrame, x, y, z [, w, Modus])

@Description
  Ändert die Keyframe-Rotation für die #NodeAnimation.
  
@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  Wenn das Keyframe nicht existiert, dann hat diese Funktion keinen Effekt.

@Parameter "x, y, z"
  Die neue Keyframe 'x, y, z'-Rotation in der Welt. Die Werte sind vom ausgewählten 'Modus' abhängig.

@OptionalParameter "w"
  Die neue Keyframe 'w'-Rotation in der Welt (wird nur bei @#PB_Orientation_Quaternion und
  @#PB_Orientation_Direction verwendet).

@OptionalParameter "Modus"
  Der Rotations-Modus. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Orientation_PitchYawRoll: 'x' ("pitch" oder auch "Nick"), 'y' ("yaw" oder auch "Gier"), 'z' ("roll" oder auch "Roll"),
                                zugewiesen in dieser Reihenfolge (Standard).
  @#PB_Orientation_Quaternion  : 'x', 'y', 'z', 'w' für Quaternion-Werte
  @#PB_Orientation_Direction   : 'x', 'y', 'z' für den Richtungsvektor und 'w' für die Rotation (Roll).
@EndFixedFont

@NoReturnValue

@Remarks
  Siehe auch den Wikipedia-Artikel zum @InternetLink "http://de.wikipedia.org/wiki/Roll-Nick-Gier-Winkel" "Roll-Nick-Gier-Winkel".
  
@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFramePitch, @@GetNodeAnimationKeyFrameYaw, @@GetNodeAnimationKeyFrameRoll

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationKeyFramePitch(#NodeAnimation, KeyFrame)

@Description
  Gibt den "Pitch"-Wert (Nick-Winkel) des Keyframes der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt den aktuellen Pitch-Wert des Keyframes in der Node-Animation zurück,
  oder null wenn der Keyframe nicht existiert.

@Remarks
  Siehe auch den Wikipedia-Artikel zum @InternetLink "http://de.wikipedia.org/wiki/Roll-Nick-Gier-Winkel" "Roll-Nick-Gier-Winkel".

@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFrameYaw, @@GetNodeAnimationKeyFrameRoll

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationKeyFrameYaw(#NodeAnimation, KeyFrame)

@Description
  Gibt den "Yaw"-Wert (Gier-Winkel) des Keyframes der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt den aktuellen Yaw-Wert des Keyframes in der Node-Animation zurück,
  oder null wenn der Keyframe nicht existiert.

@Remarks
  Siehe auch den Wikipedia-Artikel zum @InternetLink "http://de.wikipedia.org/wiki/Roll-Nick-Gier-Winkel" "Roll-Nick-Gier-Winkel".

@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFramePitch, @@GetNodeAnimationKeyFrameRoll

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationKeyFrameRoll(#NodeAnimation, KeyFrame)

@Description
  Gibt den "Roll"-Wert (Roll-Winkel) des Keyframes der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  
@ReturnValue
  Gibt den aktuellen Roll-Wert des Keyframes in der Node-Animation zurück,
  oder null wenn der Keyframe nicht existiert.

@Remarks
  Siehe auch den Wikipedia-Artikel zum @InternetLink "http://de.wikipedia.org/wiki/Roll-Nick-Gier-Winkel" "Roll-Nick-Gier-Winkel".

@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFramePitch, @@GetNodeAnimationKeyFrameYaw

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetNodeAnimationKeyFrameScale(#NodeAnimation, KeyFrame, x, y, z)

@Description
  Ändert den Keyframe Skalierungsfaktor für die #NodeAnimation. Der Skalierungsfaktor
  wird auf den Knoten (Node) angewendet, mit dem die Animation verknüpft ist.
  
@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.
  
@Parameter "#Keyframe"
  Der Node-Animation Keyframe-Index. Der erste Keyframe-Index ist null.
  Wenn das Keyframe nicht existiert, dann hat diese Funktion keinen Effekt.

@Parameter "x"
  Der neue 'x' Skalierungsfaktor des Keyframes. Ist dieser Wert gleich 1.0, dann wird
  auf die x-Achse keine Skalierung angewendet.
  
@Parameter "y"
  Der neue 'y' Skalierungsfaktor des Keyframes. Ist dieser Wert gleich 1.0, dann wird
  auf die y-Achse keine Skalierung angewendet.

@Parameter "z"
  Der neue 'z' Skalierungsfaktor des Keyframes. Ist dieser Wert gleich 1.0, dann wird
  auf die z-Achse keine Skalierung angewendet.

@NoReturnValue

@Remarks
  Der Skalierungsfaktor wird den Knoten (Node) in der Größe verändern, indem seine
  Größe mit dem angegebenen Faktor multipliziert wird: @LineBreak
  - ein Skalierungsfaktor von 1.0 wird sich nicht auf die Größe des Knotens auswirken @LineBreak
  - ein Skalierungsfaktor von 2.0 wird die Größe des Knotens verdoppeln @LineBreak
  - ein Skalierungsfaktor von 0.5 wird die Größe des Knotens halbieren @LineBreak
  
@SeeAlso
  @@CreateNodeAnimationKeyFrame, @@GetNodeAnimationKeyFramePitch, @@GetNodeAnimationKeyFrameYaw, @@GetNodeAnimationKeyFrameRoll

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function AddNodeAnimationTime(#NodeAnimation, Zeit)

@Description
  Fügt Zeit zu der angegebenen #NodeAnimation hinzu.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@Parameter "Zeit"
  Die zu der angegebenen Animation hinzu zu fügende Zeit (in Millisekunden), relativ zur
  aktuellen Animations-Zeit.

@NoReturnValue

@SeeAlso
  @@StartNodeAnimation

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function StartNodeAnimation(#NodeAnimation [, Flags])

@Description
  Startet die angegebene #NodeAnimation. Die Animation wird immer von ihrem Beginn gestartet.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@Parameter "Flag"
  Flag kann der folgende Wert sein:
@FixedFont
  @#PB_NodeAnimation_Once:   Spielt die Animation nur einmal ab. Standardmäßig wird die Animation
                            automatisch wiederholt, wenn ihr Ende erreicht wird. @@NodeAnimationStatus
                            kann verwendet werden, um das Ende der Animation festzustellen.
@EndFixedFont

@NoReturnValue

@SeeAlso
  @@StopNodeAnimation, @@NodeAnimationStatus, @@AddNodeAnimationTime

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function StopNodeAnimation(#NodeAnimation)

@Description
  Stoppt die angegebene #NodeAnimation.

@Parameter "#NodeAnimation"
  Die anzuhaltende Node-Animation.

@NoReturnValue

@SeeAlso
  @@StartNodeAnimation

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = NodeAnimationStatus(#NodeAnimation)

@Description
  Gibt den Status der angegebenen #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@ReturnValue
  Der Rückgabewert kann eine der folgenden Konstanten sein:
@FixedFont
  @#PB_NodeAnimation_Stopped: Die Animation wurde gestoppt (oder hat ihr Ende erreicht).
  @#PB_NodeAnimation_Started: Die Animation läuft.
@EndFixedFont

@SeeAlso
  @@StartNodeAnimation, @@StopNodeAnimation

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationTime(#NodeAnimation)

@Description
  Gibt die Zeit der aktuellen #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@ReturnValue
  Die Zeit (bzw. die Zeitposition, in Millisekunden) der aktuellen Node-Animation,
  oder 0 wenn die Animation nicht läuft.

@SeeAlso
  @@StartNodeAnimation, @@AddNodeAnimationTime, @@SetNodeAnimationTime

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetNodeAnimationTime(#NodeAnimation, Zeit)

@Description
  Ändert die aktuelle Zeit der #NodeAnimation. Dies ist eine absolute
  Zeit-Position. Um die Zeit relativ zur aktuellen Zeit zu verändern,
  verwenden Sie @@AddNodeAnimationTime.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@Parameter "Time"
  Die festzulegende absolute Zeit (in Millisekunden).

@NoReturnValue

@SeeAlso
  @@StartNodeAnimation, @@AddNodeAnimationTime, @@GetNodeAnimationTime

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationLength(#NodeAnimation)

@Description
  Gibt die Länge der #NodeAnimation zurück.

@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@ReturnValue
  Die Länge (in Milli-Sekunden) der Node-Animation.

@SeeAlso
  @@StartNodeAnimation, @@SetNodeAnimationLength

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetNodeAnimationLength(#NodeAnimation, Länge)

@Description
  Ändert die Länge der #NodeAnimation.
  
@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@Parameter "Länge"
  Die neue Länge (in Milli-Sekunden) der Node-Animation.

@SeeAlso
  @@StartNodeAnimation, @@GetNodeAnimationLength

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetNodeAnimationWeight(#NodeAnimation)

@Description
  Gibt das Gewicht (oder die Wertigkeit) der #NodeAnimation zurück. Das Gewicht ist nützlich
  beim Abspielen mehrerer Animationen auf einmal. Um zum Beispiel einen sanften Übergang
  von einer Animation auf die andere zu haben, ist es möglich, schrittweise das Gewicht
  der ersten Animation zu reduzieren und das Gewicht der zweiten Animation zu erhöhen.
  
@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@ReturnValue
  Das aktuelle Gewicht der Node-Animation (Wert zwischen 0.0 und 1.0). Ist das Gewicht
  gleich 0, dann hat die Animation keinen Effekt. Ist das Gewicht gleich 1, dann wird
  die Animation vollständig abgespielt.

@SeeAlso
  @@StartNodeAnimation

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetNodeAnimationWeight(#NodeAnimation, Gewicht)

@Description
  Ändert das Gewicht (bzw. die Wertigkeit) der #NodeAnimation. Das Gewicht ist nützlich
  beim Abspielen mehrerer Animationen auf einmal. Um zum Beispiel einen sanften Übergang
  von einer Animation auf die andere zu haben, ist es möglich, schrittweise das Gewicht
  der ersten Animation zu reduzieren und das Gewicht der zweiten Animation zu erhöhen.
  
@Parameter "#NodeAnimation"
  Die zu verwendende Node-Animation.

@Parameter "Gewicht"
  Das neue Gewicht der Node-Animation (Wert zwischen 0.0 und 1.0). Ist das Gewicht
  gleich 0, dann hat die Animation keinen Effekt. Ist das Gewicht gleich 1, dann wird
  die Animation vollständig abgespielt.

@NoReturnValue

@SeeAlso
  @@StartNodeAnimation

@SupportedOS
