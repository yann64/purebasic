;
;     Gadget library documentation
;
;      (c) 2025 - Fantaisie Software
;

@Library Gadget

@Overview

  Die Gadgets in PureBasic (in anderen Sprachen auch als "Controls" oder "Widgets" bezeichnet) 
  sind ein allgemeiner Begriff für alle Oberflächen-Komponenten:
  Schalter, Auswahlboxen, Häkchenboxen, Auswahlfenster, Schalttafeln,... Diese Bibliothek ist OS-unabhängig
  und verwendet die tatsächlichen OS "Graphical User Interface" (GUI) Komponenten.
@LineBreak
@LineBreak
  Vor dem Verwenden von Gadgets wird in der Regel zuerst ein @Link "Window/OpenWindow" "Fenster"
  geöffnet, darüber hinaus kommen oftmals auch @LibraryLink "Menu" "Menüs", 
  @LibraryLink "ToolBar" "Werkzeugleisten" und @LibraryLink "StatusBar" "Statusleisten" bei
  der Gestaltung grafischer Bedienoberflächen zum Einsatz.
@LineBreak
@LineBreak
  Die Befehle, welche ein neues Gadget erstellen, geben die neue Gadget-Nummer (wird in 
  dieser Bibliothek #Gadget genannt) zurück, sofern zum Erstellen @#PB_Any 
  verwendet wurde. Wenn eine feste Nummer anstelle von @#PB_Any zum 
  Identifizieren des Gadgets verwendet wurde, dann gibt der Befehl den OS-Bezeichner 
  (englisch "Identifier") für das erstellte Gadget zurück.

@OS Windows
  @LineBreak
  @LineBreak
  Diese OS-Bezeichner (auch "Handles" genannt) können für andere PureBasic-Funktionen
  genutzt werden, aber auch für WinAPI-Befehle wie SendMessage_() etc.. Schauen Sie in das
  Kapitel @ReferenceLink "handles" "Handles und Nummern" im Referenzhandbuch für weitere
  Informationen.

@OS Linux
@linebreak
@linebreak
  GTK wurde unter Linux zum Darstellen der PureBasic GUI-Komponenten ausgewählt. Diese
  Wahl erfolgte auf Grund der Tatsache, dass GTK frei erhältlich ist, professionell aussieht
  und sehr mächtig ist.

@EndOs

  Wenn Sie grafische Benutzeroberflächen (Dialoge) mit automatischer Layout-Anpassung
  erstellen möchten, werfen Sie einen Blick auf die @LibraryLink "dialog" "Dialog"-Befehlsbibliothek.
  
@FormatIf HTML
  <p>
  <center> 
  <table WIDTH="96%" BORDER=0>
  <caption> <b>Alle Gadgets im Überblick:</b> </caption>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_buttongadget.png"> <a href="../gadget/buttongadget.html"><u>ButtonGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_buttonimagegadget.png"> <a href="../gadget/buttonimagegadget.html"><u>ButtonImageGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_calendargadget.png"> <a href="../gadget/calendargadget.html"><u>CalendarGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_canvasgadget.png"> <a href="../gadget/canvasgadget.html"><u>CanvasGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_checkboxgadget.png"> <a href="../gadget/checkboxgadget.html"><u>CheckBoxGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_comboboxgadget.png"> <a href="../gadget/comboboxgadget.html"><u>ComboBoxGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_containergadget.png"> <a href="../gadget/containergadget.html"><u>ContainerGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_dategadget.png"> <a href="../gadget/dategadget.html"><u>DateGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_editorgadget.png"> <a href="../gadget/editorgadget.html"><u>EditorGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_explorercombogadget.png"> <a href="../gadget/explorercombogadget.html"><u>ExplorerComboGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_explorerlistgadget.png"> <a href="../gadget/explorerlistgadget.html"><u>ExplorerListGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_explorertreegadget.png"> <a href="../gadget/explorertreegadget.html"><u>ExplorerTreeGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_framegadget.png"> <a href="../gadget/framegadget.html"><u>FrameGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_hyperlinkgadget.png"> <a href="../gadget/hyperlinkgadget.html"><u>HyperLinkGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_imagegadget.png"> <a href="../gadget/imagegadget.html"><u>ImageGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_ipaddressgadget.png"> <a href="../gadget/ipaddressgadget.html"><u>IPAddressGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_listicongadget.png"> <a href="../gadget/listicongadget.html"><u>ListIconGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_listviewgadget.png"> <a href="../gadget/listviewgadget.html"><u>ListViewGadget</u></a></td>
  </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_mdigadget.png"> <a href="../gadget/mdigadget.html"><u>MDIGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_openglgadget.png"> <a href="../gadget/openglgadget.html"><u>OpenGLGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_optiongadget.png"> <a href="../gadget/optiongadget.html"><u>OptionGadget</u></a></td>
      </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_panelgadget.png"> <a href="../gadget/panelgadget.html"><u>PanelGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_progressbargadget.png"> <a href="../gadget/progressbargadget.html"><u>ProgressBarGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_scrollareagadget.png"> <a href="../gadget/scrollareagadget.html"><u>ScrollAreaGadget</u></a></td>   
      </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_scrollbargadget.png"> <a href="../gadget/scrollbargadget.html"><u>ScrollBarGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_shortcutgadget.png"> <a href="../gadget/shortcutgadget.html"><u>ShortcutGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_spingadget.png"> <a href="../gadget/spingadget.html"><u>SpinGadget</u></a></td>
      </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_splittergadget.png"> <a href="../gadget/splittergadget.html"><u>SplitterGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_stringgadget.png"> <a href="../gadget/stringgadget.html"><u>StringGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_textgadget.png"> <a href="../gadget/textgadget.html"><u>TextGadget</u></a></td>
     </tr>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_trackbargadget.png"> <a href="../gadget/trackbargadget.html"><u>TrackBarGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_treegadget.png"> <a href="../gadget/treegadget.html"><u>TreeGadget</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_webgadget.png"> <a href="../gadget/webgadget.html"><u>WebGadget</u></a></td>
  </tr>
  </table>
  </center>
  </center>
  <p>
  <center> 
  <table WIDTH="96%" BORDER=0>
  <caption> <b>Weitere Gadgets:</b> </caption>
  <tr>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_scintillagadget.png"> <a href="../Scintilla/index.html"><u>Scintilla</u></a></td>
    <td vAlign="center" nowrap><img src="../HelpPictures/vd_webviewgadget.png"> <a href="../WebView/index.html"><u>Webview</u></a></td>
     </tr>
  </table>
  </center> 

@FormatEndIf


@CommandList

@ExampleFile All Gadget.pb
@ExampleFile All GadgetAdvanced.pb
@ExampleFile All BindEvent.pb
@ExampleFile All BindGadgetEvent.pb
@ExampleFile All CanvasGadget.pb
@ExampleFile All GadgetSplitter.pb
@ExampleFile All GadgetSplitterAdvanced.pb
@ExampleFile All Image.pb
@ExampleFile All MDI_ImageViewer.pb
@ExampleFile All Menu.pb
@ExampleFile All OpenGLGadget.pb
@ExampleFile All PopupMenu.pb
@ExampleFile All StatusBar.pb
@ExampleFile All SysTray.pb
@ExampleFile All ToolBar.pb
@ExampleFile All WebBrowser.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function AddGadgetColumn(#Gadget, Position, Titel$, Breite)

@Description
  Fügt eine Spalte zum angegebenen Gadget hinzu.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Position"
  Der Spaltenindex, wo der neue Eintrag eingefügt werden soll.
  Ein Spaltenindex beginnt bei 0, was die am weitesten links befindliche Spalte bezeichnet,
  jede weitere Spalte nach rechts hat einen um 1 höheren Index. Wenn Sie eine Spalte 
  hinzufügen, erhalten alle bisherigen Spalten rechts von der neuen Spalte einen um eins
  höheren Spaltenindex als sie vorher hatten. 

@Parameter "Titel$"
  Der Text für die Spalten-Überschrift.

@Parameter "Breite"
  Die anfängliche Breite der neuen Spalte.

@NoReturnValue

@Remarks
  Dieser Befehl kann mit den folgenden Gadget-Typen verwendet werden:
@LineBreak
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@ExplorerListGadget
@LineBreak
@LineBreak
  Beim @@ExplorerListGadget können Sie diese Funktion benutzen, um vollständig die vom Gadget
  angezeigten Informationen anzupassen, indem Sie zuerst die Standardspalten mittels @@RemoveGadgetColumn 
  entfernen und dann neue Ihrer Wahl hinzufügen. Beachten Sie, dass die Spalte 'Name' nicht die erste im
  Gadget sein muss.
@LineBreak
  Hinweis: Um die Gadget-Inhalte nach dem Hinzufügen neuer Spalten zu aktualisieren, benutzen
  Sie @@SetGadgetText. Um eine selbsterstellte ("custom") Spalte zu füllen, verwenden
  Sie @@SetGadgetItemText für jeden Eintrag, nachdem Sie ein @#PB_EventType_Change Ereignis
  für das Gadget empfangen haben.
@LineBreak
@LineBreak
  Beim Hinzufügen einer Spalte benutzen Sie eine der folgenden Konstanten im 'Titel$' Feld, um
  eine Spalte zu erstellen, deren Inhalt durch das Gadget automatisch aktualisiert wird. Oder verwenden
  Sie einen selbst ausgewählten Text als Titel-String, wenn Sie eine leere Spalte erstellen möchten,
  welche Sie dann mit @@SetGadgetItemText füllen können.
@FixedFont
  @#PB_Explorer_Name       : zeigt den Namen der Datei/des Verzeichnisses an
  @#PB_Explorer_Size       : zeigt die Dateigröße in KB an
  @#PB_Explorer_Type       : zeigt einen String an, der den Dateityp beschreibt
  @#PB_Explorer_Attributes : zeigt die Attribute der Datei/des Verzeichnisses an
  @#PB_Explorer_Created    : zeigt die Zeit an, zu der die Datei/das Verzeichnis erstellt wurde
  @#PB_Explorer_Modified   : zeigt die Zeit an, zu der die Datei/das Verzeichnis zuletzt geändert wurde
  @#PB_Explorer_Accessed   : zeigt die Zeit an, zu der zuletzt auf die Datei/das Verzeichnis zugegriffen wurde
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 400, 150, "ListIcon - Spalten hinzufügen", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ListIconGadget(0, 10, 10, 380, 100, "Standard-Spalte", 150, #PB_ListIcon_GridLines)
    ButtonGadget(1, 10, 120, 150, 20, "Neue Spalte hinzufügen")
    index = 1     ; "Standard-Spalte" hat bereits den Index 0
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        If EventGadget() = 1
          AddGadgetColumn(0, index, "Spalte "+Str(index), 80)
          index + 1
        EndIf
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@RemoveGadgetColumn, @@ListIconGadget, @@ExplorerListGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = AddGadgetItem(#Gadget, Position, Text$ [, ImageID [, Flags]])

@Description
  Fügt einen neuen Eintrag zum angegebenen Gadget hinzu. 

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Position"
  Der Eintrag-Index, wo der neue Eintrag eingefügt werden
  soll. Um diesen Eintrag am Anfang einzufügen, benutzen Sie einen Index von 0.
  Um diesen Eintrag am Ende der aktuellen Eintrag-Liste hinzuzufügen, benutzen
  Sie einen Wert von -1. Denken Sie beim Einfügen eines Eintrags daran, dass alle
  aktuellen Einträge, die auf diesen neuen Eintrag folgen, einen um 1 höheren Positions-Index
  erhalten.
@LineBreak
@LineBreak
  Für das @@MDIGadget gibt dieser Parameter die #Window Nummer für das neue MDI-Childwindow an.
  @ReferenceLink "purebasic_objects" "#PB_Any" kann verwendet werden, in diesem Fall ist der Rückgabewert die
  neue von PB zugewiesene Window Nummer.

@Parameter "Text$"
  Der Text für den neuen Eintrag.
@LineBreak
@LineBreak
  Beim Hinzufügen eines Eintrags zu einem @@ListIconGadget kann dieser Parameter den Text für
  mehrere Spalten enthalten - jeweils getrennt von einem @Link "String/Chr" "Chr(10)" Zeichen.

@OptionalParameter "ImageID"
  Ein optionales Bild, welches für Einträge in Gadgets verwendet werden kann, die
  dies unterstützen (wie @@ListIconGadget). Das verwendete Bild sollte in der Standard
  16x16 Größe vorliegen. Verwenden Sie den @@ImageID Befehl, um die ID für diesen
  Parameter zu erhalten.

@OptionalParameter "Flags"
  Dieser Parameter hat eine Bedeutung nur bei den folgenden Gadget-Typen:
@LineBreak
@LineBreak
  @@TreeGadget
@Indent
  Dieser Parameter gibt die neue Unterebene für den Eintrag an.
  Ist der Wert für die Unterebene größer als der vom vorherigen Eintrag, wird der neue Eintrag
  dessen "Kind" (Child). Ist er niedriger, wird er nach dem "Eltern"-Eintrag (Parent) des
  vorherigen Eintrags hinzugefügt.
@EndIndent
  
  @@MDIGadget
@Indent
  Dieser Parameter kann verwendet werden, um die Flags für das neue Fenster (siehe
  @@OpenWindow) anzugeben. Die @#PB_Window_Borderless, @#PB_Window_Screencentered 
  und @#PB_Window_WindowCentered Flags werden bei MDI-Fenstern nicht unterstützt.
@EndIndent


@ReturnValue
  Der Rückgabewert ist nur gültig mit dem @@MDIGadget.
@LineBreak
@LineBreak
  Wenn @#PB_Any als Parameter 'Position' beim Hinzufügen eines Eintrags zum @@MDIGadget
  verwendet wurde, ist der Rückgabewert die Nummer, welche das neue MDI-Fenster identifiziert.

@Remarks
  Die folgenden Gadgets werden unterstützt:
@LineBreak
@LineBreak
  - @@ComboBoxGadget : unterstützt die ImageID, wenn @#PB_ComboBox_Image gesetzt wurde.
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@ListIconGadget : unterstützt die ImageID.
@LineBreak  
  - @@ListViewGadget
@LineBreak
  - @@MDIGadget : ImageID kann ein Icon für die Titelleiste des "ChildWindow"s enthalten.
    'Flags' können die neuen Window-Flags bezeichnen.
@LineBreak  
  - @@PanelGadget : unterstützt die ImageID.
@LineBreak
  - @@TreeGadget: unterstützt die ImageID. 'Flags' wird benötigt und gibt die neue Unterebene ("Sublevel") an.

@SeeAlso
  @@RemoveGadgetItem, @@ClearGadgetItems, @@CountGadgetItems, @@ComboBoxGadget, @@ListIconGadget,
  @@ListViewGadget, @@MDIGadget, @@PanelGadget, @@TreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ButtonImageGadget(#Gadget, x, y, Breite, Höhe, ImageID [, Flags]) 

@Description
  Erstellt ein Schalter-Gadget mit einem Bild innerhalb der aktuellen Gadgetliste. 

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "ImageID"
  Das für das Gadget zu verwendende Bild. Verwenden Sie die Funktion @@ImageID, um diese
  ID von einem Bild zu erhalten. Dieser Parameter kann auch Null sein, um einen Schalter ohne
  Bild zu erstellen. Die Funktion @@SetGadgetAttribute kann verwendet werden, um das Bild
  später zu ändern.

@OptionalParameter "Flags"
  Dieser Parameter kann @#PB_Button_Toggle lauten, um einen Toggle-Schalter (einen, 
  der einen Ein-/Aus-Status besitzt) zu erstellen. Ein "Push-Button" (Schalter zum Drücken) wird
  standardmäßig erstellt.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Funktionen können bei diesem Gadget verwendet werden:
@LineBreak
@LineBreak
  - @@GetGadgetState kann verwendet werden, um den Toggle-Status des Gadgets zu ermitteln.
@LineBreak
  - @@SetGadgetState kann verwendet werden, um den Toggle-Status des Gadgets festzulegen.
@LineBreak
  - @@GetGadgetAttribute mit den folgenden Werten:
@FixedFont
  @#PB_Button_Image       : Ermittelt die ImageID des dargestellten Bildes, z.B. ImageID(#MyImage).
  @#PB_Button_PressedImage: Ermittelt die ImageID des Bildes, welches beim Drücken des Schalters dargestellt wird, z.B. ImageID(#MyImagePressed).
@EndFixedFont
  - @@SetGadgetAttribute mit den folgenden Werten:
@FixedFont
  @#PB_Button_Image       : Ändert das dargestellte Bild (gültige ImageID via @@ImageID ermitteln) bzw. löscht es (ImageID = 0).
  @#PB_Button_PressedImage: Ändert das Bild, welches beim Drücken des Schalters dargestellt wird (gültige ImageID via @@ImageID ermitteln) bzw. löscht es (ImageID = 0).
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 200, 60, "ButtonImageGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    If LoadImage(0,  #PB_Compiler_Home + "/examples/sources/Data/PureBasic.bmp")    ; ändern Sie den 2. Parameter in den Pfad/Dateinamen Ihres Bildes
      ButtonImageGadget(0, 10, 10, 180, 40, ImageID(0))
    EndIf
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image buttonimagegadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute, @@ButtonGadget, @@ImageID, @@EventGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ButtonGadget(#Gadget, x, y, Breite, Höhe, Text$ [, Flags]) 

@Description
  Erstellt ein Schalter-Gadget innerhalb der aktuellen Gadget-Liste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.
  @Bold "Hinweis": Auf OS X aktiviert die Verwendung einer Höhe von 25 den Schalter-Typ mit einer festen Höhe,
  welcher häufig in OS X Applikationen genutzt wird. Außerdem macht dies die @#PB_Button_Default Flags verfügbar.

@Parameter "Text$"
  Der auf dem Schalter darzustellende Text.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Button_Right     : rechtsbündige Darstellung des Schalter-Textes (nicht unterstützt auf OSX)
  @#PB_Button_Left      : linksbündige Darstellung des Schalter-Textes (nicht unterstützt auf OSX)
  @#PB_Button_Default   : legt das definierte Aussehen des Schalters als Standard-Schalter für das Fenster fest (auf OS X muss die Höhe des Schalters 25 sein)
  @#PB_Button_MultiLine : Ist der Text zu lang, wird er über mehrere Zeilen dargestellt (nicht unterstützt auf OSX)
  @#PB_Button_Toggle    : erstellt einen 'Toggle'-Schalter: Ein Klick und der Schalter bleibt gedrückt, ein
                         weiterer Klick gibt ihn wieder frei.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Funktionen können bei diesem Gadget verwendet werden:
@LineBreak
@LineBreak
  - @@SetGadgetText: Ändert den Text des ButtonGadgets.
@LineBreak
  - @@GetGadgetText: Ermittelt den Text des ButtonGadgets.
@LineBreak
  - @@SetGadgetState: Verwendet mit @#PB_Button_Toggle Schaltern, um den aktuellen Status zu setzen (1 = gedrückt, 0 = normal).
@LineBreak
  - @@GetGadgetState:  Verwendet mit @#PB_Button_Toggle Schaltern, um den aktuellen Status des Schalters zu ermitteln (1 = gedrückt, 0 = normal).

; Such system-specific things should not be documented imho, especially when 
; they are not guaranteed to work anyway on all systems (see XP thing)
; -- freak
;
;@OS Windows
;  @LineBreak
;  @LineBreak
;  @Underline "Spezielles Windows-Feature":
;  @LineBreak
;  Im 'Text$' des Schalters können Sie das spezielle '&' Zeichen verwenden, um einen bestimmten Buchstaben zu unterstreichen:
;  "&Button" ergibt tatsächlich: @Underline "B"utton
;  @LineBreak
;  (Hinweis: unter Windows XP wird der unterstrichene Buchstabe nur angezeigt, wenn dieses Feature nicht in den Systemeinstellungen deaktiviert wurde.)
;  @LineBreak
;  @LineBreak
;  In Kombination mit dem @@AddKeyboardShortcut Befehl kann auf diesem Weg ein
;  Tastenkürzel für den Schalter realisiert werden.
;@EndOS

@Example
@Code
  ; Zeigt mögliche Flags des ButtonGadget in Aktion...
  If OpenWindow(0, 0, 0, 222, 200, "ButtonGadgets", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 10, 200, 20, "Standard Button")
    ButtonGadget(1, 10, 40, 200, 20, "Left Button", #PB_Button_Left)
    ButtonGadget(2, 10, 70, 200, 20, "Right Button", #PB_Button_Right)
    ButtonGadget(3, 10,100, 200, 60, "Multiline Button  (längerer Text wird automatisch umgebrochen)", #PB_Button_MultiLine)
    ButtonGadget(4, 10,170, 200, 20, "Toggle Button", #PB_Button_Toggle)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image buttongadget.png

@SeeAlso
  @@SetGadgetText, @@GetGadgetText, @@SetGadgetState, @@GetGadgetState, @@ButtonImageGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = CalendarGadget(#Gadget, x, y, Breite, Höhe [, Datum [, Flags]])

@Description
  Erstellt ein Kalendergadget innerhalb der aktuellen Gadgetliste. Dieses Gadget
  stellt einen Monatskalender dar und lässt den Anwender ein Datum auswählen.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@OptionalParameter "Date"
  Das anfänglich zu verwendende Datum. Der Standard ist das aktuelle Datum.

@OptionalParameter "Flags"
  Dieser Parameter kann auf @#PB_Calendar_Borderless gesetzt werden, um
  das Gadget ohne einen Rand zu erstellen (nicht unterstützt auf Linux).
  
@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Die von diesem Gadget und seinen relevanten Befehlen verwendeten Datumsangaben
  benutzen das gleiche Datumsformat wie die @LibraryLink "Date" "Date Bibliothek".
@LineBreak
@LineBreak
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Funktionen können bei diesem Gadget verwendet werden:
@LineBreak
@LineBreak
  - @@SetGadgetState: setzt das aktuell anzuzeigende Datum.
@LineBreak
  - @@GetGadgetState: ermittelt das aktuell angezeigte Datum.
@LineBreak
  - @@SetGadgetAttribute: mit den folgenden Attributen:
@FixedFont
  @#PB_Calendar_Minimum: legt das kleinste auswählbare Datum fest
  @#PB_Calendar_Maximum: legt das größte auswählbare Datum in diesem Gadget fest.
                        (Hinweis: Begrenzung des auswählbaren Datums wird auf Linux nicht unterstützt.)
@EndFixedFont
  - @@GetGadgetAttribute: mit den folgenden Attributen:
@FixedFont
  @#PB_Calendar_Minimum: ermittelt das kleinste Datum, was ausgewählt werden kann
  @#PB_Calendar_Maximum: ermittelt das größte Datum, was in diesem Gadget ausgewählt werden kann.
                        (Hinweis: Begrenzung des auswählbaren Datums wird auf Linux nicht unterstützt.)
@EndFixedFont

@LineBreak
  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_BackColor      : Hintergrundfarbe
  @#PB_Gadget_FrontColor     : Textfarbe für angezeigte Tage (nicht unterstützt auf Windows Vista+)
  @#PB_Gadget_TitleBackColor : Hintergrundfarbe für den Monatstitel (nicht unterstützt auf Windows Vista+)
  @#PB_Gadget_TitleFrontColor: Textfarbe für den Monatstitel (nicht unterstützt auf Windows Vista+)
  @#PB_Gadget_GrayTextColor  : Textfarbe für Tage, welche nicht im aktuellen Monat liegen (nicht unterstützt auf Windows Vista+)
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 250, 200, "CalendarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    CalendarGadget(0, 10, 10, 230, 180)
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image calendargadget.png

@SeeAlso
  @@SetGadgetState, @@GetGadgetState, @@SetGadgetItemState, @@GetGadgetItemState, @@SetGadgetAttribute, @@GetGadgetAttribute, 
  @@SetGadgetColor, @@GetGadgetColor,
  @@DateGadget, @@Date, @@FormatDate

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = CanvasGadget(#Gadget, x, y, Breite, Höhe [, Flags])

@Description
  Erstellt ein Canvas-Gadget (auch "Leinwand-Gadget") innerhalb der aktuellen Gadgetliste.
  Dieses Gadget bietet eine Zeichen-Oberfläche (englisch "drawing surface") ohne Alpha-Kanal
  und Ereignisse für die Maus- und Tastatur-Interaktion,
  um einfach benutzerdefinierte Ansichten ("custom views") zu erstellen.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets (in Pixel). Die maximale Breite und Höhe ist 16000 Pixel.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Canvas_Border   : Zeichnet einen Rand rund um das Gadget.
  @#PB_Canvas_ClipMouse: Begrenzt die Maus auf das Gadget während eine Maus-Taste gedrückt ist. (Nicht auf MacOS und Linux Gtk3 unterstützt)
  @#PB_Canvas_Keyboard : Ermöglicht dem Gadget den "Keyboard-Fokus" und Tastatur-Ereignisse zu erhalten.
  @#PB_Canvas_DrawFocus: Zeichnet ein Fokus-Rechteck auf das Gadget, wenn es den "Keyboard-Fokus" hat.
  @#PB_Canvas_Container: Aktiviert die "Container-Unterstützung", damit Gadgets hinzugefügt werden können. @@CloseGadgetList muss aufgerufen
                        werden, um zur vorherigen Gadgetliste zurückzukehren (wie bei jedem anderen Container-Gadget). @LineBreak
                        Unter Windows funktioniert die Transparenz der Gadgets nicht, daher wird der Text der folgenden Gadgets
                        auf einem undurchsichtigen Hintergrund angezeigt: @@CheckBoxGadget, @@FrameGadget, @@HyperlinkGadget,
                        @@OptionGadget, @@TextGadget und @@TrackBarGadget.
@EndFixedFont
  Das @#PB_Canvas_Keyboard Flag wird benötigt, um jegliche Tastatur-Ereignisse im Gadget zu empfangen. Wenn Sie dieses Flag
  verwenden, sollten Sie die @#PB_EventType_Focus und @#PB_EventType_LostFocus Ereignisse überprüfen,
  und einen sichtbaren Hinweis (Rahmen etc.) auf das Gadget zeichnen, wenn es den Fokus hat, damit dem Anwender klar ist, welches
  Gadget aktuell den Fokus hat. Alternativ kann das @#PB_Canvas_DrawFocus Flag angegeben werden, damit das Gadget
  ein standardmäßiges Fokus-Rechteck zeichnet, wann immer es den Fokus hat.
  
@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Das @@CanvasGadget hat keinen Alpha-Kanal, daher wird der @#PB_2DDrawing_AlphaChannel Modus der @@DrawingMode Funktion
  keinen Effekt haben, und der @#PB_2DDrawing_AllChannels Modus verhält sich analog zu @#PB_2DDrawing_Default.
@LineBreak
@LineBreak  
  Das erstellte Gadget startet mit einfachem weißen Hintergrund. Verwenden Sie die @@CanvasOutput oder @@CanvasVectorOutput Befehle, um auf dem Gadget
  zu zeichnen. Der gezeichnete Inhalt bleibt erhalten, bis er durch weitere Zeichen-Operationen gelöscht wird.
  Es ist nicht erforderlich, den Inhalt jedes Mal neu zu zeichnen, wenn ein @#PB_Event_Repaint Ereignis
  empfangen wird.
  
@LineBreak
@LineBreak

  Die folgenden Ereignisse werden vom Gadget gemeldet. Die Funktion @@EventType meldet den Typ des aktuellen Gadget-Ereignisses:
  @FixedFont
  @#PB_EventType_MouseEnter      : Der Maus-Cursor "betrat" das Gadget
  @#PB_EventType_MouseLeave      : Der Maus-Cursor verließ das Gadget
  @#PB_EventType_MouseMove       : Der Maus-Cursor bewegte sich
  @#PB_EventType_MouseWheel      : Das Maus-Rad wurde bewegt
  @#PB_EventType_LeftButtonDown  : Der linke Maus-Knopf wurde gedrückt
  @#PB_EventType_LeftButtonUp    : Der linke Maus-Knopf wurde los gelassen
  @#PB_EventType_LeftClick       : Ein Klick mit der linken Maus-Taste
  @#PB_EventType_LeftDoubleClick : Ein Doppelklick mit der linken Maus-Taste
  @#PB_EventType_RightButtonDown : Der rechte Maus-Knopf wurde gedrückt
  @#PB_EventType_RightButtonUp   : Der rechte Maus-Knopf wurde los gelassen
  @#PB_EventType_RightClick      : Ein Klick mit der rechten Maus-Taste
  @#PB_EventType_RightDoubleClick: Ein Doppelklick mit der rechten Maus-Taste
  @#PB_EventType_MiddleButtonDown: Der mittlere Maus-Knopf wurde gedrückt
  @#PB_EventType_MiddleButtonUp  : Der mittlere Maus-Knopf wurde los gelassen
  @#PB_EventType_Focus           : Das Gadget erhielt den Tastatur-Fokus
  @#PB_EventType_LostFocus       : Das Gadget verlor den Tastatur-Fokus
  @#PB_EventType_KeyDown         : Eine Taste wurde gedrückt
  @#PB_EventType_KeyUp           : Eine Taste wurde los gelassen
  @#PB_EventType_Input           : Text-Eingabe wurde generiert
  @#PB_EventType_Resize          : Das Gadget wurde in der Größe verändert
@EndFixedFont
  Beachten Sie bitte, dass die Ereignisse @#PB_EventType_KeyDown, @#PB_EventType_KeyUp und @#PB_EventType_Input
  nur gemeldet werden, wenn das Gadget den Tastatur-Fokus hat. Dies bedeutet, dass das @#PB_Canvas_Keyboard Flag
  bei der Erstellung des Gadgets gesetzt werden muss, um Tastatur-Ereignisse zu erlauben.
  Auf Windows wird das @#PB_EventType_MouseWheel Ereignis auch nur gemeldet, wenn das Gadget den Tastatur-Fokus
  hat. Auf den anderen OS wird dieses Ereignis dem Gadget unter dem Maus-Pfeil gemeldet, unabhängig vom Tastatur-Fokus.

@LineBreak
@LineBreak

  Weitere Informationen über das aktuelle Ereignis können mit der Funktion @@GetGadgetAttribute empfangen werden. Diese
  Information ist nur verfügbar, wenn das aktuelle Ereignis (empfangen von @@WaitWindowEvent bzw. @@WindowEvent) ein
  Ereignis für dieses Gadget ist. Die folgenden Attribute können verwendet werden:
@LineBreak
@LineBreak
  @#PB_Canvas_MouseX, @#PB_Canvas_MouseY
@Indent
  Gibt die angegebenen Maus-Koordinaten relativ zum Zeichen-Bereich des Gadgets zurück. Die Maus-Position wird zu dem
  Zeitpunkt zurückgegeben, zu dem das Ereignis generiert wurde. Dadurch kann das Ergebnis von den durch @@WindowMouseX und
  @@WindowMouseY gemeldeten Koordinaten abweichen, welche die aktuelle Maus-Position unabhängig vom Status der 
  verarbeiteten Ereignisse zurückmelden. Die mit Hilfe dieser Attribute zurückgegebenen Koordinaten sollten für dieses
  Gadget verwendet werden, um sicher zu gehen, dass die Maus-Koordinaten mit dem aktuellen Ereignis zusammenpassen.
@EndIndent

  @#PB_Canvas_Buttons
@Indent
  Gibt den Status der Maus-Knöpfe für das Ereignis zurück, Das Ergebnis ist eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten:
@FixedFont
  @#PB_Canvas_LeftButton  : Der linke Maus-Knopf ist aktuell gedrückt.
  @#PB_Canvas_RightButton : Der rechte Maus-Knopf ist aktuell gedrückt.
  @#PB_Canvas_MiddleButton: Der mittlere Maus-Knopf ist aktuell gedrückt.
@EndFixedFont
@EndIndent

  @#PB_Canvas_Modifiers
@Indent
  Gibt den Status der Tastatur-"Modifier" für das Ereignis zurück. Das Ergebnis ist eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten:
@FixedFont
  @#PB_Canvas_Shift  : Die 'Shift' (Umschalt-) Taste ist aktuell gedrückt.
  @#PB_Canvas_Alt    : Die 'Alt' Taste ist aktuell gedrückt.
  @#PB_Canvas_Control: Die 'Control' Taste ist aktuell gedrückt.
  @#PB_Canvas_Command: Die 'Command' (oder "Apple") Taste ist aktuell gedrückt. (nur auf Mac OSX)
@EndFixedFont
@EndIndent

  @#PB_Canvas_WheelDelta
@Indent
  Gibt die Bewegung des Maus-Rades für das aktuelle Ereignis in Mehrfachen von 1 bzw. -1 zurück. Ein positiver Wert sagt aus,
  dass das Rad nach oben (weg vom Anwender) bewegt wurde, und ein negativer Wert sagt aus, dass das Rad nach unten (hin zum
  Anwender) bewegt wurde. Dieses Attribut ist 0, wenn das aktuelle Ereignis kein @#PB_EventType_MouseWheel
  Ereignis ist.
  @EndIndent

  @#PB_Canvas_Key
@Indent
  Gibt die Taste zurück, die bei einem @#PB_EventType_KeyDown oder @#PB_EventType_KeyUp Ereignis
  gedrückt oder los gelassen wurde. Der zurückgegebene Wert ist einer der @#PB_Shortcut_... Werte, welche von
  der Funktion @@AddKeyboardShortcut verwendet werden. Dieses Attribut gibt "rohe" (raw) Tastendrücke zurück. Um eine Texteingabe
  für das Gadget zu erhalten, ist es besser nach dem @#PB_EventType_Input Ereignis zu schauen und das
  @#PB_Canvas_Input Attribut zu verwenden, weil dieses die Texteingabe von mehreren Tastendrücken wie
  Shift- und ähnlichen Tasten kombiniert beinhaltet.
@EndIndent

  @#PB_Canvas_Input
@Indent
  Gibt das eingegebene Zeichen (Character) zurück, welches durch ein oder mehrere Tastendrücke generiert wurde. Dieses Attribut ist nur
  verfügbar nach einem @#PB_EventType_Input Ereignis. Der zurückgebene Zeichen-Wert kann mit Hilfe der 
  @@Chr Funktion in einen String konvertiert werden.
@EndIndent

  Ergänzend zu dieser Ereignis-Information kann @@GetGadgetAttribute auch verwendet werden, um die folgenden Attribute zu lesen:
  @LineBreak
@LineBreak
  @#PB_Canvas_Image
@Indent
  Gibt einen @Link "Image/ImageID" "ImageID" Wert zurück, welcher ein Bild mit dem aktuellen Inhalt des CanvasGadgets repräsentiert.
  Dieser Wert kann verwendet werden, um den Inhalt des Gadgets mit Hilfe der Funktion @@DrawImage auf eine andere Ausgabe zu zeichnen.
@LineBreak
@LineBreak
  Hinweis: Der zurückgegebene Wert ist nur solange gültig, bis am Gadget Veränderungen durch Größenänderung oder darauf Zeichnen
  vorgenommen werden. Daher sollte er nur direkt mit einem Befehl wie @@DrawImage verwendet werden, und nicht für die spätere
  Verwendung gespeichert werden.
@EndIndent

  @#PB_Canvas_Clip
@Indent
  Gibt einen Wert ungleich Null zurück, wenn die Maus aktuell auf den Gadget-Bereich begrenzt ("clipped") ist, oder Null wenn nicht.
@EndIndent

  @#PB_Canvas_Cursor
@Indent
  Gibt den Maus-Pfeil (Cursor) zurück, welcher aktuell im Gadget verwendet wird. Schauen Sie weiter unten für eine Liste der möglichen Werte.
  Wenn das Gadget ein benutzerdefiniertes ("custom") Cursor-Handle verwendet, ist der Rückgabewert gleich -1.
@EndIndent

  @#PB_Canvas_CustomCursor
@Indent
  Gibt das benutzerdefinierte ("custom") Cursor-Handle zurück, welches mittels @@SetGadgetAttribute gesetzt wurde. Verwendet das
  Gadget einen Standard-Mauspfeil (Cursor), ist der Rückgabewert gleich 0.
@EndIndent

  Die Funktion @@SetGadgetAttribute kann verwendet werden, um die folgenden Gadget-Attribute zu verändern:
  @LineBreak
@LineBreak
  @#PB_Canvas_Image
@Indent
  Weist dem CanvasGadget die angegebene @Link "Image/ImageID" "ImageID" zu. Das Gadget macht eine Kopie des Ausgangsbildes,
  weshalb dieses nach diesem Aufruf freigegeben oder anderweitig verwendet werden kann. Das Setzen dieses Attributes 
  entspricht dem Gleichen wie die Verwendung von @@StartDrawing, @@CanvasOutput und @@DrawImage, um das Bild auf das
  CanvasGadget zu zeichnen.
@EndIndent

  @#PB_Canvas_Clip
@Indent
  Wenn dieser Wert auf einen Wert ungleich Null gesetzt wird, dann wird der Mauspfeil auf den Bereich des Canvas-Gadgets begrenzt.
  Das Setzen des Wertes auf Null entfernt die Begrenzung (das "Clipping").
@LineBreak
@LineBreak
  Hinweis: Die Maus-Begrenung (Clipping) sollte nur als direkte Folge von Anwender-Interaktion mit dem Gadget (wie z.B. einem
  Maus-Klick) erfolgen, und es muss sorgfältig darauf geachtet werden, das Clipping wieder richtig zu entfernen, da andernfalls
  des Anwenders Maus innerhalb des Gadgets gefangen bleibt. Das @#PB_Canvas_ClipMouse Gadget-Flag kann verwendet
  werden, um automatisch die Maus zu begrenzen/nicht mehr zu begrenzen (clip/unclip), wenn der Anwender eine Maustaste im Gadget
  drückt oder los lässt. 
@EndIndent

  @#PB_Canvas_Cursor
@Indent
  Ändert den Maus-Pfeil (Cursor), welcher angezeigt wird, wenn sich die Maus über dem Gadget befindet. Die 
  folgenden Werte sind möglich:
@FixedFont
  @#PB_Cursor_Default        : Standard Pfeil-Cursor
  @#PB_Cursor_Cross          : Kreuz-Cursor
  @#PB_Cursor_IBeam          : I-Cursor, verwendet für die Textauswahl
  @#PB_Cursor_Hand           : Hand-Cursor
  @#PB_Cursor_Busy           : Stundenglass oder Uhren-Cursor
  @#PB_Cursor_Denied         : durchgestrichener Kreis oder X-Cursor ("Stop" oder "Verboten"-Hinweis)
  @#PB_Cursor_Arrows         : Pfeile in alle Richtungen (nicht verfügbar auf Mac OSX)
  @#PB_Cursor_LeftRight      : links und rechts Pfeile
  @#PB_Cursor_UpDown         : hoch und runter Pfeile
  @#PB_Cursor_LeftUpRightDown: diagonale Pfeile (nur auf Windows)
  @#PB_Cursor_LeftDownRightUp: diagonale Pfeile (nur auf Windows)
  @#PB_Cursor_Invisible      : versteckt den Cursor
@EndFixedFont
@EndIndent

  @#PB_Canvas_CustomCursor
@Indent
  Ändert den Mauspfeil (Cursor), welcher dargestellt wird, wenn sich die Maus über dem Gadget befindet, in ein
  benutzerdefiniertes (custom) Cursor-Handle, welches mit der entsprechenden OS API erstellt wurde.
  Dieses Attribut erwartet die folgende Art an Eingaben:
@Indent
  Windows: ein HCURSOR Handle
@LineBreak
  Linux: ein GtkCursor Pointer (Zeiger)
@LineBreak
  Mac OSX: ein Pointer (Zeiger) auf eine Cursor Structure
@EndIndent
@EndIndent

  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.

@Example
@Code
  If OpenWindow(0, 0, 0, 220, 220, "CanvasGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    CanvasGadget(0, 10, 10, 200, 200)
    
    Repeat
      Event = WaitWindowEvent()
          
      If Event = #PB_Event_Gadget And EventGadget() = 0 
        If EventType() = #PB_EventType_LeftButtonDown Or (EventType() = #PB_EventType_MouseMove And GetGadgetAttribute(0, #PB_Canvas_Buttons) & #PB_Canvas_LeftButton)
          If StartDrawing(CanvasOutput(0))
            x = GetGadgetAttribute(0, #PB_Canvas_MouseX)
            y = GetGadgetAttribute(0, #PB_Canvas_MouseY)
            Circle(x, y, 10, RGB(Random(255), Random(255), Random(255)))
            StopDrawing()
          EndIf
        EndIf
      EndIf    
      
    Until Event = #PB_Event_CloseWindow
  EndIf

@EndCode

@Example Canvas Container 
@Code
  If OpenWindow(0, 0, 0, 220, 220, "Canvas container example", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
  
    CanvasGadget(0, 10, 10, 200, 200, #PB_Canvas_Container)
    ButtonGadget(1, 10, 10, 80, 30, "Clean up")
    CloseGadgetList()
  
    Repeat
      Event = WaitWindowEvent()
    
      If Event = #PB_Event_Gadget
        Select EventGadget() 
          Case 0
            If EventType() = #PB_EventType_LeftButtonDown Or (EventType() = #PB_EventType_MouseMove And GetGadgetAttribute(0, #PB_Canvas_Buttons) & #PB_Canvas_LeftButton)
              If StartDrawing(CanvasOutput(0))
                x = GetGadgetAttribute(0, #PB_Canvas_MouseX)
                y = GetGadgetAttribute(0, #PB_Canvas_MouseY)
                Circle(x, y, 10, RGB(Random(255), Random(255), Random(255)))
                StopDrawing()
              EndIf
            EndIf
          
          Case 1
            If StartDrawing(CanvasOutput(0))
              Box(0, 0, 200, 200, #White)
              StopDrawing()
            EndIf
        EndSelect
      EndIf
    
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@Image canvasgadget.png

@ExampleFile All CanvasGadget.pb


@SeeAlso
  @@CanvasOutput, @@GetGadgetAttribute, @@SetGadgetAttribute, @@EventType, @@StartDrawing

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function AusgabeID = CanvasOutput(#Gadget)

@Description
  Gibt die AusgabeID eines CanvasGadgets zurück, um darauf @LibraryLink "2ddrawing" "2D-Zeichenoperationen" auszuführen.
  
@Parameter "#Gadget"
  Das Gadget, auf welchem gezeichnet werden soll. Dies muss ein @@CanvasGadget sein.

@ReturnValue
  Gibt die AusgabeID zurück, oder Null, wenn Zeichnen nicht möglich ist. Dieser Wert sollte direkt an 
  die Funktion @@StartDrawing übergeben werden, um die Zeichenoperation
  zu starten. Der Rückgabewert ist nur für eine Zeichenoperation gültig und kann nicht wiederverwendet
  werden.

@Example
@Code
  ...
  StartDrawing(CanvasOutput(#Gadget))
    ; hier folgen die Zeichenoperationen...
  StopDrawing()
@EndCode

@Remarks
  Das @@CanvasGadget hat keinen Alpha-Kanal, daher wird der @#PB_2DDrawing_AlphaChannel Modus der @@DrawingMode Funktion
  keinen Effekt haben, und der @#PB_2DDrawing_AllChannels Modus verhält sich analog zu @#PB_2DDrawing_Default.
@LineBreak
@LineBreak  
  Das Zeichnen auf ein @@CanvasGadget ist doppelt gepuffert. Dies bedeutet, das Zeichenoperationen 
  nur beim Befehl @@StopDrawing sichtbar werden, um sichtbares Flackern während des Zeichnens zu vermeiden.
  
@SeeAlso
  @@StartDrawing, @@CanvasGadget, @@CanvasVectorOutput

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function VektorAusgabeID = CanvasVectorOutput(#Gadget [, Einheit])

@Description
  Gibt die AusgabeID eines CanvasGadgets zurück, um darauf Vektor-Zeichenoperationen auszuführen.

@Parameter "#Gadget"
  Das Gadget, auf welchem gezeichnet werden soll. Dies muss ein @@CanvasGadget sein.

@OptionalParameter "Einheit"
  Bestimmt die Maßeinheit zur Abstandsmessung auf der Zeichenausgabe. Die Standard-Einheit für CanvasGadget ist @#PB_Unit_Pixel.
@FixedFont
  @#PB_Unit_Pixel     : Werte werden in Pixel gemessen (oder Dots/Punkte im Fall eines Druckers)
  @#PB_Unit_Point     : Werte werden in Punkten (1/72 Zoll bzw. Inch) gemessen
  @#PB_Unit_Inch      : Werte werden in Zoll (Inch) gemessen
  @#PB_Unit_Millimeter: Werte werden in Millimeter gemessen
@EndFixedFont
  
@ReturnValue
  Gibt die AusgabeID zurück, oder Null, wenn Zeichnen nicht möglich ist. Dieser Wert sollte direkt
  an die Funktion @@StartVectorDrawing übergeben werden, um die Zeichenoperation zu starten.
  Der Rückgabewert ist nur für eine Zeichenoperation gültig und kann nicht wiederverwendet werden. 

@Example
@Code
  ...
  StartVectorDrawing(CanvasVectorOutput(#Gadget))
    ; hier folgen die Zeichenoperationen...
  StopVectorDrawing()
@EndCode

@Remarks
  Das Zeichnen auf ein @@CanvasGadget ist doppelt gepuffert. Dies bedeutet, das Zeichenoperationen nur beim Befehl @@StopVectorDrawing angezeigt werden, um sichtbares Flackern während des Zeichnens zu vermeiden.

@SeeAlso
  @@StartVectorDrawing, @@CanvasGadget, @@CanvasOutput

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = OpenGLGadget(#Gadget, x, y, Breite, Höhe [, Flags])

@Description
  Erstellt ein OpenGL Gadget in der aktuellen Gadgetliste. Dieses Gadget bietet einen
  OpenGL-Zeichenkontext ("drawing context") und Ereignisse ("events") für die Maus- und
  Tastatur-Interaktion, um einfach eine 3D-OpenGL-Ansicht zu erstellen.
@LineBreak
@LineBreak
  Die meisten der OpenGL-Befehle sind direkt in PureBasic verfügbar - unter Verwendung
  der Unterstrich-API-Schreibweise (Befehle enden mit einem Unterstrich, wie 'glBegin_()').

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets (in Pixel).
  Die maximale Breite und Höhe beträgt 16000 Pixel.

@OptionalParameter "Flags"
  Flags zum Ändern des Gadget-Verhaltens. Dies kann eine Kombination der folgenden Konstanten sein:
@FixedFont
  @#PB_OpenGL_Keyboard               : Ermöglicht dem Gadget, den Tastaturfokus und Tastaturereignisse zu empfangen.
  @#PB_OpenGL_NoFlipSynchronization  : deaktiviert die vsync-Synchronisation.
  @#PB_OpenGL_FlipSynchronization    : aktiviert die vsync-Synchronisation (Standard).
  @#PB_OpenGL_NoDepthBuffer          : deaktiviert den Tiefenpuffer.
  @#PB_OpenGL_16BitDepthBuffer       : erstellt einen 16-Bit Tiefenpuffer (Standard).
  @#PB_OpenGL_24BitDepthBuffer       : erstellt einen 24-Bit Tiefenpuffer.
  @#PB_OpenGL_NoStencilBuffer        : deaktiviert den Stencil-Puffer (Standard).
  @#PB_OpenGL_8BitStencilBuffer      : erstellt einen 8-Bit Stencil-Puffer.
  @#PB_OpenGL_NoAccumulationBuffer   : deaktiviert den Akkumulationspuffer (Standard).
  @#PB_OpenGL_32BitAccumulationBuffer: erstellt einen 32-Bit Akkumulationspuffer.
  @#PB_OpenGL_64BitAccumulationBuffer: erstellt einen 64-Bit Akkumulationspuffer.
@EndFixedFont
  Das @#PB_OpenGL_Keyboard Flag wird benötigt, um jegliche Tastatur-Ereignisse in diesem Gadget zu
  empfangen. Wenn Sie dieses Flag verwenden, sollten Sie auf @#PB_EventType_Focus und
  @#PB_EventType_LostFocus Ereignisse prüfen und einen visuellen Hinweis auf dem Gadget zeichnen,
  wenn es den Fokus hat, damit dem Anwender klar ist, welches Gadget aktuell den Fokus hat.

@ReturnValue
  Gibt im Erfolgsfall einen Wert ungleich Null zurück, und Null bei einem Fehler. Wenn @#PB_Any
  als #Gadget Parameter verwendet wurde, dann ist bei Erfolg der Rückgabewert die automatisch
  generierte Gadget-Nummer.

@Remarks
  Das erstellte Gadget beginnt nur mit einem schwarzen Hintergrund. Der aktuelle OpenGL-Kontext
  wird auf dieses neu erstellte Gadget gesetzt. Um den aktuellen OpenGL-Kontext zu ändern,
  verwenden Sie das @#PB_OpenGL_SetContext Attribut. Einmal erstellt, kann mit Hilfe des
  @#PB_OpenGL_FlipBuffers Attributs ein Rahmen angezeigt werden.

@LineBreak
@LineBreak
  Da das OpenGL-Gadget als Echtzeit-Rendering-Gadget konzipiert ist, speichert es sein aktuelles
  Rendering (aktuellen Inhalt) nicht in einem separaten Puffer:
  Es muss erneut gerendert werden, wenn die Größe des Fensters geändert, minimiert oder maximiert
  wird oder wenn das Gadget selbst in der Größe verändert oder verschoben wird.
    
@LineBreak
@LineBreak

  Die folgenden Ereignisse werden vom Gadget gemeldet. Die @@EventType Funktion meldet den Typ
  des aktuellen Gadget-Ereignisses:
@FixedFont
  @#PB_EventType_MouseEnter      : Der Maus-Cursor "betrat" das Gadget
  @#PB_EventType_MouseLeave      : Der Maus-Cursor verließ das Gadget
  @#PB_EventType_MouseMove       : Der Maus-Cursor bewegte sich
  @#PB_EventType_MouseWheel      : Das Maus-Rad wurde bewegt
  @#PB_EventType_LeftButtonDown  : Der linke Maus-Knopf wurde gedrückt
  @#PB_EventType_LeftButtonUp    : Der linke Maus-Knopf wurde los gelassen
  @#PB_EventType_LeftClick       : Ein Klick mit der linken Maus-Taste
  @#PB_EventType_LeftDoubleClick : Ein Doppelklick mit der linken Maus-Taste
  @#PB_EventType_RightButtonDown : Der rechte Maus-Knopf wurde gedrückt
  @#PB_EventType_RightButtonUp   : Der rechte Maus-Knopf wurde los gelassen
  @#PB_EventType_RightClick      : Ein Klick mit der rechten Maus-Taste
  @#PB_EventType_RightDoubleClick: Ein Doppelklick mit der rechten Maus-Taste
  @#PB_EventType_MiddleButtonDown: Der mittlere Maus-Knopf wurde gedrückt
  @#PB_EventType_MiddleButtonUp  : Der mittlere Maus-Knopf wurde los gelassen
  @#PB_EventType_Focus           : Das Gadget erhielt den Tastatur-Fokus
  @#PB_EventType_LostFocus       : Das Gadget verlor den Tastatur-Fokus
  @#PB_EventType_KeyDown         : Eine Taste wurde gedrückt
  @#PB_EventType_KeyUp           : Eine Taste wurde los gelassen
  @#PB_EventType_Input           : Text-Eingabe wurde generiert
@EndFixedFont
  Beachten Sie bitte, dass die Ereignisse @#PB_EventType_KeyDown, @#PB_EventType_KeyUp und @#PB_EventType_Input
  nur gemeldet werden, wenn das Gadget den Tastatur-Fokus hat. Dies bedeutet, dass das @#PB_OpenGL_Keyboard Flag
  bei der Erstellung des Gadgets gesetzt werden muss, um Tastatur-Ereignisse zu erlauben.
  Auf Windows wird das @#PB_EventType_MouseWheel Ereignis auch nur gemeldet, wenn das Gadget den Tastatur-Fokus
  hat. Auf den anderen OS wird dieses Ereignis dem Gadget unter dem Maus-Pfeil gemeldet, unabhängig vom Tastatur-Fokus.

@LineBreak
@LineBreak

  Weitere Informationen über das aktuelle Ereignis können mit der Funktion @@GetGadgetAttribute empfangen werden. Diese
  Information ist nur verfügbar, wenn das aktuelle Ereignis (empfangen von @@WaitWindowEvent bzw. @@WindowEvent) ein
  Ereignis für dieses Gadget ist. Die folgenden Attribute können verwendet werden:
@LineBreak
@LineBreak
  @#PB_OpenGL_MouseX, @#PB_OpenGL_MouseY
@Indent
  Gibt die angegebenen Maus-Koordinaten relativ zum Zeichen-Bereich des Gadgets zurück. Die Maus-Position wird zu dem
  Zeitpunkt zurückgegeben, zu dem das Ereignis generiert wurde. Dadurch kann das Ergebnis von den durch @@WindowMouseX und
  @@WindowMouseY gemeldeten Koordinaten abweichen, welche die aktuelle Maus-Position unabhängig vom Status der 
  verarbeiteten Ereignisse zurückmelden. Die mit Hilfe dieser Attribute zurückgegebenen Koordinaten sollten für dieses
  Gadget verwendet werden, um sicher zu gehen, dass die Maus-Koordinaten mit dem aktuellen Ereignis zusammenpassen.
@EndIndent

  @#PB_OpenGL_Buttons
@Indent
  Gibt den Status der Maus-Knöpfe für das Ereignis zurück, Das Ergebnis ist eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten:
@FixedFont
  @#PB_OpenGL_LeftButton  : Der linke Maus-Knopf ist aktuell gedrückt.
  @#PB_OpenGL_RightButton : Der rechte Maus-Knopf ist aktuell gedrückt.
  @#PB_OpenGL_MiddleButton: Der mittlere Maus-Knopf ist aktuell gedrückt.
@EndFixedFont
@EndIndent

  @#PB_OpenGL_Modifiers
@Indent
  Gibt den Status der Tastatur-"Modifier" für das Ereignis zurück. Das Ergebnis ist eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten:
@FixedFont
  @#PB_OpenGL_Shift  : Die 'Shift' (Umschalt-) Taste ist aktuell gedrückt.
  @#PB_OpenGL_Alt    : Die 'Alt' Taste ist aktuell gedrückt.
  @#PB_OpenGL_Control: Die 'Control' Taste ist aktuell gedrückt.
  @#PB_OpenGL_Command: Die 'Command' (oder "Apple") Taste ist aktuell gedrückt. (nur auf Mac OSX)
@EndFixedFont
@EndIndent

  @#PB_OpenGL_WheelDelta
@Indent
  Gibt die Bewegung des Maus-Rades für das aktuelle Ereignis in Mehrfachen von 1 bzw. -1 zurück. Ein positiver Wert sagt aus,
  dass das Rad nach oben (weg vom Anwender) bewegt wurde, und ein negativer Wert sagt aus, dass das Rad nach unten (hin zum
  Anwender) bewegt wurde. Dieses Attribut ist 0, wenn das aktuelle Ereignis kein @#PB_EventType_MouseWheel
  Ereignis ist.
@EndIndent

  @#PB_OpenGL_Key
@Indent
  Gibt die Taste zurück, die bei einem @#PB_EventType_KeyDown oder @#PB_EventType_KeyUp Ereignis
  gedrückt oder los gelassen wurde. Der zurückgegebene Wert ist einer der @#PB_Shortcut_... Werte, welche von
  der Funktion @@AddKeyboardShortcut verwendet werden. Dieses Attribut gibt "rohe" (raw) Tastendrücke zurück. Um eine Texteingabe
  für das Gadget zu erhalten, ist es besser nach dem @#PB_EventType_Input Ereignis zu schauen und das
  @#PB_OpenGL_Input Attribut zu verwenden, weil dieses die Texteingabe von mehreren Tastendrücken wie
  Shift- und ähnlichen Tasten kombiniert beinhaltet.
@EndIndent

  @#PB_OpenGL_Input
@Indent
  Gibt das eingegebene Zeichen (Character) zurück, welches durch ein oder mehrere Tastendrücke generiert wurde. Dieses Attribut ist nur
  verfügbar nach einem @#PB_EventType_Input Ereignis. Der zurückgebene Zeichen-Wert kann mit Hilfe der 
  @@Chr Funktion in einen String konvertiert werden.
@EndIndent

  Ergänzend zu dieser Ereignis-Information kann @@GetGadgetAttribute auch verwendet werden, um die folgenden Attribute zu lesen:
@LineBreak
@LineBreak

  @#PB_OpenGL_Cursor
@Indent
  Gibt den Maus-Pfeil (Cursor) zurück, welcher aktuell im Gadget verwendet wird. Schauen Sie weiter unten für eine Liste der möglichen Werte.
  Wenn das Gadget ein benutzerdefiniertes ("custom") Cursor-Handle verwendet, ist der Rückgabewert gleich -1.
@EndIndent

  @#PB_OpenGL_CustomCursor
@Indent
  Gibt das benutzerdefinierte ("custom") Cursor-Handle zurück, welches mittels @@SetGadgetAttribute gesetzt wurde. Verwendet das
  Gadget einen Standard-Mauspfeil (Cursor), ist der Rückgabewert gleich 0.
@EndIndent

  Die Funktion @@SetGadgetAttribute kann verwendet werden, um die folgenden Gadget-Attribute zu verändern:
@LineBreak
@LineBreak

  @#PB_OpenGL_SetContext
@Indent
  Ändert den aktuellen OpenGL-Kontext auf diesen Gadget-Kontext.
@FixedFont
  @#True  : verwendet den OpenGL-Kontext dieses Gadgets.
  @#False : entfernt den aktuellen OpenGL-Kontext. Es ist kein Kontext mehr verfügbar.
@EndFixedFont
@EndIndent

  @#PB_OpenGL_FlipBuffers
@Indent
  Wechselt ("flip") den hinteren und vorderen Puffer. Alle Zeichnungen werden im hinteren Puffer
  durchgeführt. Um sichtbar zu werden, müssen die Puffer gedreht ("flipped") werden, damit der
  hintere der vordere (derjenige welcher angezeigt wird) wird.
@FixedFont
  @#True  : wechselt die Puffer
  @#False : wechselt nicht die Puffer (derzeit keine Verwendung hierfür).
@EndFixedFont
@EndIndent

  @#PB_OpenGL_Cursor
@Indent
  Ändert den Maus-Pfeil (Cursor), welcher angezeigt wird, wenn sich die Maus über dem Gadget befindet. Die 
  folgenden Werte sind möglich:
@FixedFont
  @#PB_Cursor_Default        : Standard Pfeil-Cursor
  @#PB_Cursor_Cross          : Kreuz-Cursor
  @#PB_Cursor_IBeam          : I-Cursor, verwendet für die Textauswahl
  @#PB_Cursor_Hand           : Hand-Cursor
  @#PB_Cursor_Busy           : Stundenglass oder Uhren-Cursor
  @#PB_Cursor_Denied         : durchgestrichener Kreis oder X-Cursor ("Stop" oder "Verboten"-Hinweis)
  @#PB_Cursor_Arrows         : Pfeile in alle Richtungen (nicht verfügbar auf Mac OSX)
  @#PB_Cursor_LeftRight      : links und rechts Pfeile
  @#PB_Cursor_UpDown         : hoch und runter Pfeile
  @#PB_Cursor_LeftUpRightDown: diagonale Pfeile (nur auf Windows)
  @#PB_Cursor_LeftDownRightUp: diagonale Pfeile (nur auf Windows)
  @#PB_Cursor_Invisible      : versteckt den Cursor
@EndFixedFont
@EndIndent

  @#PB_OpenGL_CustomCursor
@Indent
  Ändert den Mauspfeil (Cursor), welcher dargestellt wird, wenn sich die Maus über dem Gadget befindet, in ein
  benutzerdefiniertes (custom) Cursor-Handle, welches mit der entsprechenden OS API erstellt wurde.
  Dieses Attribut erwartet die folgende Art an Eingaben:
@Indent
  Windows: ein HCURSOR Handle
@LineBreak
  Linux: ein GtkCursor Pointer (Zeiger)
@LineBreak
  Mac OSX: ein Pointer (Zeiger) auf eine Cursor Structure
@EndIndent
@EndIndent

  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.

@ExampleFile All OpenGLGadget.pb

@SeeAlso
  @@GetGadgetAttribute, @@SetGadgetAttribute, @@EventType

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = CheckBoxGadget(#Gadget, x, y, Breite, Höhe, Text$ [, Flags])  

@Description
  Erstellt ein Checkbox-Gadget (Häkchen-Schalter) innerhalb der aktuellen Gadget-Liste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Text$"
  Der neben dem Checkbox-Gadget darzustellende Text.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_CheckBox_Right     : rechtsbündige Darstellung des Textes
  @#PB_CheckBox_Center    : zentrierte Darstellung des Textes
  @#PB_CheckBox_ThreeState: Erstellt eine Checkbox, die einen dritten "dazwischen" Status haben kann.
@EndFixedFont
  Das @#PB_CheckBox_ThreeState Flag kann für eine Checkbox verwendet werden, die den
  Status mehrerer Einträge repräsentiert. Der "Dazwischen" ("inbetween") Status kann dann verwendet 
  werden, um anzuzeigen, dass die Einstellung nicht für alle Einträge die gleiche ist. Durch Anklicken
  der Checkbox kann der Anwender diesen wieder auf den "An"- oder "Aus"-Status zurückbringen, um dies
  auf alle Einträge anzuwenden. Daher kann der "Dazwischen"-Status nur durch das Programm mittels
  @@SetGadgetState gesetzt werden, und nicht durch den Anwender durch Anklicken der Checkbox.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  @@GetGadgetState kann zum Ermitteln des aktuellen Gadget-Status verwendet werden.
@LineBreak
  @@SetGadgetState kann zum Ändern des Gadget-Status verwendet werden.

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 160, "CheckBoxGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    CheckBoxGadget(0, 10,  10, 250, 20, "CheckBox standard")
    CheckBoxGadget(1, 10,  40, 250, 20, "CheckBox checked"): SetGadgetState(1, #PB_Checkbox_Checked)
    CheckBoxGadget(2, 10,  70, 250, 20, "CheckBox three state", #PB_CheckBox_ThreeState): SetGadgetState(2, #PB_Checkbox_Inbetween)
    CheckBoxGadget(3, 10, 100, 250, 20, "CheckBox right", #PB_CheckBox_Right)
    CheckBoxGadget(4, 10, 130, 250, 20, "CheckBox center", #PB_CheckBox_Center)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image checkboxgadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@OptionGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ClearGadgetItems(#Gadget) 

@Description
  Löscht alle Einträge im angegebenen #Gadget. 
  
@Parameter "#Gadget"
  Das zu löschende Gadget.

@NoReturnValue

@Remarks
  Das Gadget muss einer der folgenden Typen sein:
@LineBreak
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@MDIGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@TreeGadget

@Example
@Code
  If OpenWindow(0, 0, 0, 220, 150, "ClearGadgetItems", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ListViewGadget(0,10,10,200,100)
    For a = 1 To 10 : AddGadgetItem (0, -1, "Item "+Str(a)) : Next    ; fügt 10 Einträge hinzu
    ButtonGadget(1, 10, 120, 150, 20, "Clear Listview contents")
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        If EventGadget() = 1
          ClearGadgetItems(0)
        EndIf
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@CountGadgetItems

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function CloseGadgetList()

@Description
  Beendet die Erstellung der aktuellen Gadgetliste und geht zurück zur
  vorherigen Gadgetliste.

@NoParameters
@NoReturnValue

@Remarks
  Dies ist insbesondere nützlich für folgende Gadgets:
@LineBreak
@LineBreak
  - @@CanvasGadget
@LineBreak
  - @@ContainerGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@ScrollAreaGadget

@SeeAlso
  @@OpenGadgetList, @@ContainerGadget, @@PanelGadget, @@ScrollAreaGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ComboBoxGadget(#Gadget, x, y, Breite, Höhe [, Flags]) 

@Description
  Erstellt ein ComboBox-Gadget (Auswahl-Box) innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.
  @Bold "Hinweis": Auf OS X kann die Höhe einer Combobox nicht verändert werden und dieser Parameter wird ignoriert.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_ComboBox_Editable  : Macht die ComboBox editierbar
  @#PB_ComboBox_LowerCase : Der gesamte in der ComboBox eingegebene Text wird in Kleinbuchstaben konvertiert.
  @#PB_ComboBox_UpperCase : Der gesamte in der ComboBox eingegebene Text wird in Großbuchstaben konvertiert.
  @#PB_ComboBox_Image     : Aktiviert die Unterstützung für Bilder in Einträgen (nicht unterstützt bei editierbaren ComboBoxen auf OSX).
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können benutzt werden, um auf den Listen-Inhalt zuzugreifen:
@LineBreak
@LineBreak
  - @@AddGadgetItem: fügt einen Eintrag hinzu.
@LineBreak
  - @@GetGadgetItemText: ermittelt den Text des Gadget-Eintrags.
@LineBreak
  - @@CountGadgetItems: ermittelt die Anzahl der Einträge in der aktuellen Auswahlbox.
@LineBreak
  - @@ClearGadgetItems: entfernt alle Einträge.
@LineBreak
  - @@RemoveGadgetItem: entfernt einen Eintrag.
@LineBreak
  - @@SetGadgetItemText: ändert den Text des Gadget-Eintrags.
@LineBreak
  - @@SetGadgetItemImage: ändert das Bild des Gadget-Eintrags (muss mit dem @#PB_ComboBox_Image Flag erstellt worden sein).
@LineBreak
  - @@GetGadgetState: ermittelt die Index-Nummer (beginnend bei 0) des aktuellen Elements, -1 wenn kein Element hinzugefügt wurde oder ausgewählt ist.
@LineBreak
  - @@GetGadgetText: ermittelt den (Text-) Inhalt des aktuellen Elements.
@LineBreak
  - @@SetGadgetState: ändert das ausgewählte Element.
@LineBreak
  - @@SetGadgetText: ändert den anzuzeigenden Text. Wenn das ComboBoxGadget nicht editierbar ist, muss sich der Text in der Aufklapp-Liste befinden.
@LineBreak  
  - @@GetGadgetItemData: Gibt den Wert zurück, welcher mit dem Eintrag gespeichert wurde.
@LineBreak
  - @@SetGadgetItemData: Speichert einen Wert mit dem Eintrag.

@LineBreak
@LineBreak
  ComboBoxGadget() unterstützt die folgenden Ereignisse, welche von @@EventType gemeldet werden:
@FixedFont
  @#PB_EventType_Change   : Die aktuelle Auswahl des Textes im Eingabefeld hat sich geändert.
  @#PB_EventType_Focus    : Das Eingabefeld hat den Tastatur-Fokus erhalten (nur bei editierbarer ComboBox).
  @#PB_EventType_LostFocus: Das Eingabefeld hat den Tastatur-Fokus verloren (nur bei editierbarer ComboBox).
@EndFixedFont

@Example
@Code
  UsePNGImageDecoder()
  LoadImage(0, #PB_Compiler_Home + "examples/sources/Data/world.png")
  
  If OpenWindow(0, 0, 0, 270, 180, "ComboBoxGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ComboBoxGadget(0, 10, 10, 250, 21, #PB_ComboBox_Editable)
      AddGadgetItem(0, -1, "ComboBox editable...")

    ComboBoxGadget(1, 10, 40, 250, 21, #PB_ComboBox_Image)
      AddGadgetItem(1, -1, "ComboBox item with image", ImageID(0))

    ComboBoxGadget(2, 10, 70, 250, 21)
      For a = 1 To 5
        AddGadgetItem(2, -1,"ComboBox item " + Str(a))
      Next

    SetGadgetState(0, 0)
    SetGadgetState(1, 0)
    SetGadgetState(2, 2)    ; den dritten Eintrag (beginnend bei 0) als den aktiven Eintrag setzen
    
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image comboboxgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@CountGadgetItems, @@ClearGadgetItems, 
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetText, @@SetGadgetText
  @@GetGadgetItemText, @@SetGadgetItemText, @@SetGadgetItemImage
  @@GetGadgetItemData, @@SetGadgetItemData, @@ExplorerComboGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ContainerGadget(#Gadget, x, y, Breite, Höhe [, Flags]) 

@Description
  Erstellt ein Container Gadget in der aktuellen Gadgetliste.
  Es handelt sich dabei um ein einfaches Panel-Gadget (Schalttafel), welches andere Gadgets enthalten kann.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Container_BorderLess : Ohne jeden Rahmen (Standard)
  @#PB_Container_Flat       : Flacher Rahmen 
  @#PB_Container_Raised     : Erhabener Rahmen 
  @#PB_Container_Single     : Einfach vertiefter Rahmen 
  @#PB_Container_Double     : Doppelt vertiefter Rahmen
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Sobald dieses Gadget erstellt wurde,
  werden alle nachfolgenden Gadgets innerhalb des Containers erstellt. Wenn alle benötigten
  Gadgets erstellt wurden, muss @@CloseGadgetList aufgerufen werden, um zur vorherigen
  Gadgetliste zurückzukehren. @@OpenGadgetList kann später benutzt werden, um weitere
  Gadgets während des Programmablaufs ("on-the-fly") zum Container-Bereich hinzuzufügen.
@LineBreak
@LineBreak
  Das folgende Ereignis wird mittels @@EventType unterstützt:
@FixedFont
  @#PB_EventType_Resize: Das Gadget wurde in der Größe verändert.
@EndFixedFont  
@LineBreak
@LineBreak
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Dieses Gadget unterstützt die Befehle @@SetGadgetColor und @@GetGadgetColor 
  mit @#PB_Gadget_BackColor als Typ, um den Hintergrund des Gadgets zu ändern.

@Example
@Code
  If OpenWindow(0, 0, 0, 322, 150, "ContainerGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ContainerGadget(0, 8, 8, 306, 133, #PB_Container_Raised)
      ButtonGadget(1, 10, 15, 80, 24, "Button 1")
      ButtonGadget(2, 95, 15, 80, 24, "Button 2")
    CloseGadgetList()
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image containergadget.png

@SeeAlso
  @@OpenGadgetList, @@CloseGadgetList, @@SetGadgetColor, @@GetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = CountGadgetItems(#Gadget)

@Description
  Gibt die Anzahl der Einträge im angegebenen Gadget zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt die Anzahl der Einträge im Gadget zurück.

@Remarks
  Dies ist eine universelle Funktion, welche mit allen Gadgets arbeitet,
  die mehrere Einträge verwalten:
@LineBreak
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@ExplorerListGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@MDIGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@TreeGadget

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@ClearGadgetItems

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = DateGadget(#Gadget, x, y, Breite, Höhe [, Maske$ [, Datum [, Flags]]])

@Description
  Erstellt ein Stringgadget innerhalb der aktuellen Gadgetliste, in welchem ein Datum 
  und/oder eine Zeit eingegeben werden kann.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@OptionalParameter "Mask$"
  Das Format, in welchem das Datum eingegeben werden kann. Siehe @@FormatDate
  für das Format dieser Maske.
  @LineBreak
  Wichtiger Hinweis: Das Gadget unterstützt nicht die Anzeige von Sekunden, wenn Sie also
  "%ss" im 'Maske$' Parameter angeben, wird dies einfach ignoriert!
  @LineBreak
  Wenn Sie keine Maske oder einen leeren String angeben, wird eine Standardmaske verwendet.
  Die Maske kann mittels dem Befehl @@SetGadgetText verändert werden.

@OptionalParameter "Date"
  Das anfänglich anzuzeigende Datum für das Gadget.
  Ohne diesen Parameter oder die Angabe einer 0 wird das aktuelle Datum verwendet.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens:
@LineBreak
@LineBreak
  Standardmäßig hat das Gadget einen Schalter zum Aufrufen eines Kalenders, in welchem der
  Anwender ein Datum auswählen kann (siehe Bild weiter unten).
  @LineBreak
  Sie können dies ändern, wenn Sie @#PB_Date_UpDown als 'Flags' Parameter angeben.
  Dies versieht das Gadget mit einem Hoch/Runter-Schalter, mit welchem der Anwender den
  aktuell ausgewählten Teil des Gadgets verändern kann. Diese Option ist nur auf Windows verfügbar.
@LineBreak
@LineBreak
  Wenn Sie @#PB_Date_CheckBox als 'Flags' Parameter angeben, dann bekommt das Gadget eine
  Häkchen-Box, mit der der Anwender das Gadget auf "kein Datum" setzen kann (sofern kein Häkchen
  gesetzt). In der Zeit, in der kein Häkchen gesetzt ist, gibt @@GetGadgetState den Wert
  0 zurück. Um den Status der Häkchen-Box zu ändern, benutzen Sie @@SetGadgetState entweder
  mit 0 (= kein Häkchen gesetzt) oder jedem gültigen Datum (= Häkchen gesetzt).

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Dieses Gadget verwendet das gleiche Datumsformat für seine Funktionen wie die @LibraryLink "Date" "Date Bibliothek".
  Damit können Sie z.B. @@FormatDate verwenden, um die mittels @@GetGadgetState 
  erhaltenen Ergebnisse in einem ordentlichen Datumsformat anzuzeigen.
@LineBreak
@LineBreak
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können bei diesem Gadget verwendet werden:
@LineBreak
@LineBreak
  - @@SetGadgetState: Setzt das aktuell angezeigte Datum.
@LineBreak
  - @@SetGadgetText: Ändert die Eingabemaske des Gadgets.
@LineBreak
  - @@GetGadgetState: Ermittelt das aktuell angezeigte Datum.
@LineBreak
  - @@GetGadgetText: Ermittelt das aktuell angezeigte Datum als ein String, wie dieser im Gadget angezeigt wird.
@LineBreak
  - @@GetGadgetAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_Date_Minimum: ermittelt das kleinste Datum, welches eingegeben werden kann
  @#PB_Date_Maximum: ermittelt das größte Datum, welches eingegeben werden kann
                    (Hinweis: Begrenzung des auswählbaren Datums wird auf Linux nicht unterstützt.)
@EndFixedFont

  - @@SetGadgetAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_Date_Minimum: legt das kleinste Datum fest, welches eingegeben werden kann
  @#PB_Date_Maximum: legt das größte Datum fest, welches eingegeben werden kann
                    (Hinweis: Begrenzung des auswählbaren Datums wird auf Linux nicht unterstützt.)
@EndFixedFont

  Die folgenden Ereignisse werden mittels @@EventType unterstützt:
@FixedFont
  @#PB_EventType_Change: Das Datum wurde durch den Anwender geändert.
@EndFixedFont

@LineBreak
  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp', um den Aufklapp-Kalender einzufärben (der Eingabebereich kann nicht eingefärbt werden):
@FixedFont
  @#PB_Gadget_BackColor      : Hintergrundfarbe
  @#PB_Gadget_FrontColor     : Textfarbe für angezeigte Tage
  @#PB_Gadget_TitleBackColor : Hintergrundfarbe für den Monatstitel
  @#PB_Gadget_TitleFrontColor: Textfarbe für den Monatstitel
  @#PB_Gadget_GrayTextColor  : Textfarbe für Tage, welche nicht im aktuellen Monat liegen
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 200, 250, "DateGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    DateGadget(0, 10, 10, 180, 25, "Datum: %mm/%dd/%yyyy Time: %hh:%ii")
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image dategadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetText, @@SetGadgetText, @@GetGadgetAttribute, @@SetGadgetAttribute,
  @@GetGadgetColor, @@SetGadgetColor, @@CalendarGadget, @@Date, @@FormatDate

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function DisableGadget(#Gadget, Status)

@Description
  Deaktiviert oder aktiviert ein Gadget. 

@Parameter "#Gadget"
  Das Gadget, welches aktiviert oder deaktiviert werden soll.

@Parameter "Status"
@FixedFont
  @#False: Das Gadget wird aktiviert.
  @#True : Das Gadget wird deaktiviert.
@EndFixedFont

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 0, 0, 250, 105, "Schalter deaktivierten/aktivieren...", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 15, 230, 30, "Deaktivierter Schalter") : DisableGadget(0, #True)
    ButtonGadget(1, 10, 60, 230, 30, "Aktivierter Schalter") : DisableGadget(1, #False)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image disablegadget.png

@SeeAlso
  @@HideGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = EditorGadget(#Gadget, x, y, Breite, Höhe [, Flags])

@Description
  Erstellt ein Editor-Gadget innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination der folgenden Werte sein:
@FixedFont
  @#PB_Editor_ReadOnly     : Der Anwender kann den Text im Gadget nicht editieren (readonly = "nur lesen").
  @#PB_Editor_WordWrap     : Die Zeilen, welche zu lang zum Anzeigen sind, werden umgebrochen bis sie
                            komplett angezeigt werden.
  @#PB_Editor_TabNavigation: Bei Verwendung der TAB-Taste im Editor-Gadget wird zum nächsten Gadget
                            gewechselt, anstatt ein TAB-Zeichen einzufügen.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Ereignisse werden mittels @@EventType unterstützt:
@FixedFont
  @#PB_EventType_Change   : der Text wurde durch den Anwender geändert.
  @#PB_EventType_Focus    : der Editor hat den Fokus erhalten.
  @#PB_EventType_LostFocus: der Editor hat den Fokus verloren.
@EndFixedFont

  Die folgenden Befehle können zum Bearbeiten des Editor-Inhalts verwendet werden:
@LineBreak
@LineBreak
  - @@AddGadgetItem: Fügt eine Textzeile hinzu.
@LineBreak
  - @@CountGadgetItems: Gibt die Anzahl an Zeilen im Editor-Gadget zurück.
@LineBreak
  - @@GetGadgetItemText: Ermittelt den Textinhalt der angegebenen Zeile.
@LineBreak
  - @@GetGadgetText: Ermittelt den Textinhalt des Editor-Gadgets. Bitte dabei beachten, dass mehrere
    Textzeilen durch "Chr(13)+Chr(10)" auf Windows bzw. "Chr(10)" auf Linux und OS X voneinander getrennt werden.
@LineBreak
  - @@RemoveGadgetItem: Entfernt eine Zeile im Editor.
@LineBreak
  - @@ClearGadgetItems: Löscht den Textinhalt.
@LineBreak
  - @@SetGadgetItemText: (Über)Schreibt die angegebene Textzeile.
@LineBreak
  - @@SetGadgetText: Ändert den Textinhalt des Editor-Gadgets.
@LineBreak
  - @@SetGadgetAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_Editor_ReadOnly: Setzt den 'ReadOnly' Status. (Null bedeutet editierbar, ungleich Null bedeutet nur lesbar)
  @#PB_Editor_WordWrap: Setzt den Zeilenumbruch Status.
@EndFixedFont
  - @@GetGadgetAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_Editor_ReadOnly: Ermittelt den 'ReadOnly' Status. (Null bedeutet editierbar, ungleich Null bedeutet nur lesbar)
  @#PB_Editor_WordWrap: Ermittelt den Zeilenumbruch Status.
@EndFixedFont

@LineBreak
  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_BackColor      : Hintergrundfarbe
  @#PB_Gadget_FrontColor     : Textfarbe
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 322, 150, "EditorGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    EditorGadget(0, 8, 8, 306, 133)
    For a = 0 To 5
      AddGadgetItem(0, a, "Zeile "+Str(a))
    Next
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image editorgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@CountGadgetItems, @@ClearGadgetItems, @@GetGadgetText, @@SetGadgetText,
  @@GetGadgetItemText, @@SetGadgetItemText, @@GetGadgetAttribute, @@SetGadgetAttribute, 
  @@GetGadgetColor, @@SetGadgetColor, @@StringGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ExplorerComboGadget(#Gadget, x, y, Breite, Höhe, Verzeichnis$ [, Flags])

@Description
  Erstellt eine ComboBox (Auswahl-Gadget), welche ein Verzeichnis und seine übergeordneten
  Verzeichnisse anzeigt, damit der Anwender eines davon auswählen kann.
  Sie können solch eine ComboBox zum Beispiel beim @@OpenFileRequester finden.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Verzeichnis$"
  Das anfänglich angezeigte Verzeichnis (muss als vollständiger Pfad angegeben werden) -
  ein leerer String spezifiziert das Stammverzeichnis (Root).
@LineBreak
@LineBreak
  Wenn das @#PB_Explorer_DrivesOnly Flag gesetzt ist, darf 'Verzeichnis$'
  nur ein Laufwerksbuchstabe sein. Alles, was dem Laufwerksbuchstaben folgt, wird in diesem Fall
  ignoriert.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Explorer_DrivesOnly          : Das Gadget zeigt nur Laufwerke zur Auswahl an.
  @#PB_Explorer_Editable            : Das Gadget ist editierbar mit einem "Autocomplete" (automatisches
                                     Vervollständigen) Feature. Mit diesem Flag gesetzt, verhält sich
                                     das Gadget exakt so wie das im Windows-Explorer.
  @#PB_Explorer_NoMyDocuments       : Das 'Eigene Dateien' Verzeichnis wird nicht als separater Eintrag angezeigt.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Die folgenden Funktionen können verwendet werden, um das Gadget zu steuern:
@LineBreak
@LineBreak
  - @@GetGadgetText: Ermittelt das aktuell angezeigte Verzeichnis. Benutzen Sie dies zur Überprüfung,
    was der Anwender ausgewählt hat, nachdem Sie ein Ereignis (Event) für dieses Gadget erhalten haben.
@LineBreak
  - @@SetGadgetText: Ändert das aktuell angezeigte Verzeichnis.
@LineBreak
@LineBreak

@Example
@Code
  If OpenWindow(0, 0, 0, 400, 45, "ExplorerComboGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ExplorerComboGadget(0, 10, 10, 380, 25, GetHomeDirectory(), #PB_Explorer_Editable)
    Repeat 
      Event = WaitWindowEvent()
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode 

@Image explorercombogadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@ExplorerListGadget, @@ExplorerTreeGadget, @@ComboBoxGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ExplorerListGadget(#Gadget, x, y, Breite, Höhe, Verzeichnis$, [, Flags])

@Description
  Erstellt eine Auflistung eines Verzeichnisses, genau wie der Explorer dies tut.
  Es ermöglicht dem Anwender, eine Datei oder ein Verzeichnis auszuwählen, und
  (wenn Sie dies nicht mit einem Flag verhindern) durch den gesamten Verzeichnisbaum
  zu navigieren.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Verzeichnis$"
  Das anfänglich angezeigte Verzeichnis. Es kann einen oder
  mehrere Pattern (Datei-Typen) beinhalten, wie z.B. "C:\*.pb;*.pbi". Wird kein
  Pattern mit angegeben, muss das Verzeichnis mit einem '\' enden. Ist kein
  Verzeichnis angegeben, wird das Stammverzeichnis einschließlich der Laufwerke
  angezeigt. Ohne Angabe eines Pattern wird dieser standardmäßig auf '*.*' gesetzt.
  Wenn also 'Verzeichnis$' gleich "" ist, wird das Stammverzeichnis angezeigt und
  '*.*' (alle Dateien) als Pattern gesetzt.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Explorer_BorderLess          : Erstellt Gadget ohne Ränder.
  @#PB_Explorer_AlwaysShowSelection : Die Auswahl ist sichtbar, auch wenn das Gadget nicht aktiv ist.
  @#PB_Explorer_MultiSelect         : Schaltet die Mehrfach-Selektion von Einträgen im Gadget ein.
  @#PB_Explorer_GridLines           : Zeigt Trennlinien zwischen Zeilen und Spalten an.
  @#PB_Explorer_HeaderDragDrop      : In der Report-Ansicht können die Spaltentitel per Drag'n'Drop verändert werden.
  @#PB_Explorer_FullRowSelect       : Die Auswahl erstreckt sich jetzt über die gesamte Zeile und nicht nur über die 
                                     erste Spalte.

  @#PB_Explorer_NoFiles             : Es werden keine Dateien angezeigt.
  @#PB_Explorer_NoFolders           : Es werden keine Ordner angezeigt.
  @#PB_Explorer_NoParentFolder      : Es gibt keine Verknüpfung [..] zum übergeordneten Ordner.
  @#PB_Explorer_NoDirectoryChange   : Das Verzeichnis kann durch den Anwender nicht verändert werden.
  @#PB_Explorer_NoDriveRequester    : Es wird kein 'Legen Sie bitte einen Datenträger in Laufwerk X: ein' angezeigt.
  @#PB_Explorer_NoSort              : Der Anwender kann den Inhalt nicht durch Anklicken eines Spaltentitels sortieren.
  @#PB_Explorer_NoMyDocuments       : Das 'Eigene Dateien' Verzeichnis wird nicht als ein separater Eintrag angezeigt.
  @#PB_Explorer_AutoSort            : Der Inhalt wird automatisch nach dem Namen sortiert.
  @#PB_Explorer_HiddenFiles         : Zeigt auch versteckte Dateien (nur auf Linux und OS X unterstützt).
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Funktionen können zum Kontrollieren des Gadgets verwendet werden:
@LineBreak
@LineBreak
  - @@AddGadgetColumn: Fügt eine neue - automatisch oder manuell ausgefüllte - Spalte zum Gadget hinzu. Siehe beim @@AddGadgetColumn Befehl für mehr Details.
@LineBreak
  - @@RemoveGadgetColumn: Entfernt eine Spalte vom Gadget.
@LineBreak
  - @@GetGadgetText: Ermittelt das aktuell angezeigte Verzeichnis.
@LineBreak
  - @@SetGadgetText: Ändert das aktuell angezeigte Verzeichnis, oder den aktuellen Pattern (Datei-Typ) für Dateien.
@LineBreak
  - @@GetGadgetState: Ermittelt den ersten ausgewählten Eintrag (-1, wenn nichts ausgewählt ist).
@LineBreak
  - @@GetGadgetItemText: Ermittelt den Namen eines Eintrags (oder des Spaltentitels, wenn Eintrag = -1).
@LineBreak
  - @@SetGadgetItemText: Ändert den Text-Inhalt eines Eintrags (oder des Spaltentitels, wenn Eintrag = -1) oder füllt eine selbsterstellte Spalte mit Daten.
@LineBreak
  - @@GetGadgetItemState: Überprüft, ob ein Eintrag ein Verzeichnis oder eine Datei ist, und ob es gerade ausgewählt ist.
@LineBreak
  - @@SetGadgetItemState: Ändert den Auswahl-Status des angegebenen Eintrags.
@LineBreak
  - @@CountGadgetItems: Zählt die Einträge im aktuellen Verzeichnis.
@LineBreak
  - @@GetGadgetAttribute / @@SetGadgetAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_Explorer_DisplayMode : Ermittelt bzw. ändert den Anzeigemodus des Gadgets. Kann eine der folgenden Konstanten sein (nur auf Windows):
    @#PB_Explorer_LargeIcon: großer Icon-Modus
    @#PB_Explorer_SmallIcon: kleiner Icon-Modus
    @#PB_Explorer_List     : Listen-Icon-Modus
    @#PB_Explorer_Report   : Report-Modus (Spalten, Standardmodus)
@EndFixedFont
@LineBreak
  - @@GetGadgetItemAttribute / @@SetGadgetItemAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_Explorer_ColumnWidth : Gibt die Breite der angegebenen 'Spalte' zurück bzw. ändert diese. Der 'Eintrag'
                                     Parameter wird ignoriert.
@EndFixedFont

@LineBreak
  Dieses Gadget unterstützt die Befehle @@SetGadgetColor und @@GetGadgetColor 
  mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
  @#PB_Gadget_LineColor : Farbe der Gitterlinien, wenn der @#PB_Explorer_GridLines Flag verwendet wird.
@EndFixedFont

  ExplorerListGadget() unterstützt folgende Ereignisse, die von @@EventType mitgeteilt werden:
@FixedFont
  @#PB_EventType_Change           : Die Auswahl oder das aktuell angezeigte Verzeichnis wurde verändert.
  @#PB_EventType_LeftClick        : Der Anwender hat einen Eintrag mit der linken Maustaste angeklickt.
  @#PB_EventType_RightClick       : Der Anwender hat einen Eintrag mit der rechten Maustaste angeklickt.
  @#PB_EventType_LeftDoubleClick  : Der Anwender hat einen Eintrag mit der linken Maustaste doppelt angeklickt.
  @#PB_EventType_RightDoubleClick : Der Anwender hat einen Eintrag mit der rechten Maustaste doppelt angeklickt.
  @#PB_EventType_DragStart        : Der Anwender versucht, eine Drag & Drop Operation zu starten. @@ExamineDraggedItems
                                   kann verwendet werden, um Informationen zu den gezogenen Elementen abzurufen.
  @#PB_EventType_Refresh          : Der Gadget-Inhalt wurde aufgrund einer Dateisystemänderung im angezeigten Verzeichnis aktualisiert (nur Windows).
@EndFixedFont
  Nach einem @#PB_EventType_DragStart Ereignis kann die @LibraryLink "dragdrop" "Drag & Drop Bibliothek" verwendet
  werden, um eine Drag & Drop Operation zu starten. Unter MacOS X muss das Ereignis @#PB_EventType_DragStart mit
  @@BindEvent oder @@BindGadgetEvent behandelt werden.

@Example
@Code
  If OpenWindow(0, 0, 0, 400, 200, "ExplorerListGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ExplorerListGadget(0, 10, 10, 380, 180, "*.*", #PB_Explorer_MultiSelect)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@Image explorerlistgadget.png

@SeeAlso
  @@AddGadgetColumn, @@RemoveGadgetColumn, @@GetGadgetText, @@SetGadgetText, @@GetGadgetState, @@GetGadgetItemState,
  @@GetGadgetItemText, @@SetGadgetItemText, @@CountGadgetItems, @@GetGadgetAttribute, @@SetGadgetAttribute,
  @@GetGadgetItemAttribute, @@SetGadgetItemAttribute,@@SetGadgetColor, @@SetGadgetItemState, @@GetGadgetColor, 
  @@ExplorerComboGadget, @@ExplorerTreeGadget, @@ListIconGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ExplorerTreeGadget(#Gadget, x, y, Breite, Höhe, Verzeichnis$, [, Flags])

@Description
  Erstellt eine Baum-Ansicht (englisch: "Tree") eines Verzeichnis-Baums, genau wie der Explorer dies tut.
  Es ermöglicht dem Anwender, durch sein Dateisystem zu navigieren und eine Datei oder
  ein Verzeichnis auszuwählen.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Verzeichnis$"
  Das zu Beginn ausgewählte Verzeichnis. Es kann einen oder
  mehrere Pattern (Datei-Typen) beinhalten, wie z.B. "C:\*.pb;*.pbi". Wird kein
  Pattern mit angegeben, muss das Verzeichnis mit einem '\' enden. Ist kein
  Verzeichnis angegeben, wird das Stammverzeichnis einschließlich der Laufwerke
  angezeigt. Ohne Angabe eines Pattern wird dieser standardmäßig auf '*.*' gesetzt.
  Wenn also 'Verzeichnis$' gleich "" ist, wird das Stammverzeichnis angezeigt und
  '*.*' (alle Dateien) als Pattern gesetzt.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Explorer_BorderLess          : Erstellt Gadget ohne Ränder.
  @#PB_Explorer_AlwaysShowSelection : Die Auswahl ist sichtbar, auch wenn das Gadget nicht aktiv ist.
  @#PB_Explorer_NoLines             : Versteckt die kleinen Linien zwischen den Knoten.
  @#PB_Explorer_NoButtons           : Versteckt die '+' Knoten-Schalter.

  @#PB_Explorer_NoFiles             : Es werden keine Dateien angezeigt.
  @#PB_Explorer_NoDriveRequester    : Es wird kein 'Legen Sie bitte einen Datenträger in Laufwerk X: ein' angezeigt.
  @#PB_Explorer_NoMyDocuments       : Das 'Eigene Dateien' Verzeichnis wird nicht als ein separater Eintrag angezeigt.
  @#PB_Explorer_AutoSort            : Der Inhalt wird automatisch nach dem Namen sortiert.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Funktionen können zum Kontrollieren des Gadgets verwendet werden:
@LineBreak
@LineBreak
  - @@GetGadgetText: Ermittelt den vollständigen Pfad des/der aktuell ausgewählten Verzeichnisses/Datei.
@LineBreak
  - @@SetGadgetText: Ändert die/das aktuell ausgewählte Datei/Verzeichnis.
@LineBreak
  - @@GetGadgetState: Überprüft, ob der ausgewählte Eintrag eine Datei oder ein Verzeichnis ist.
@LineBreak
  - @@GetGadgetItemText: Gibt den vollständigen Pfad des angegebenen Elements zurück.
@LineBreak
@LineBreak

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
  @#PB_Gadget_LineColor : Farbe der Linien und Schalter, wenn sie dargestellt werden
@EndFixedFont

  ExplorerTreeGadget() unterstützt folgende Ereignisse, die von @@EventType mitgeteilt werden:
@FixedFont
  @#PB_EventType_Change           : Die Auswahl wurde verändert.
  @#PB_EventType_LeftClick        : Der Anwender hat einen Eintrag mit der linken Maustaste angeklickt.
  @#PB_EventType_RightClick       : Der Anwender hat einen Eintrag mit der rechten Maustaste angeklickt.
  @#PB_EventType_LeftDoubleClick  : Der Anwender hat einen Eintrag mit der linken Maustaste doppelt angeklickt.
  @#PB_EventType_RightDoubleClick : Der Anwender hat einen Eintrag mit der rechten Maustaste doppelt angeklickt.
  @#PB_EventType_DragStart        : Der Anwender versucht, eine Drag & Drop Operation zu starten. @@ExamineDraggedItems
                                   kann verwendet werden, um Informationen zu den gezogenen Elementen abzurufen.
@EndFixedFont
  Nach einem @#PB_EventType_DragStart Ereignis kann die @LibraryLink "dragdrop" "Drag & Drop Bibliothek" verwendet
  werden, um eine Drag & Drop Operation zu starten. Unter MacOS X muss das Ereignis @#PB_EventType_DragStart mit
  @@BindEvent oder @@BindGadgetEvent behandelt werden.

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 300, "ExplorerTreeGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ExplorerTreeGadget(0, 10, 10, 280, 280, "*.pb;*.pbi")
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@Image explorertreegadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetState, @@GetGadgetColor, @@SetGadgetColor,
  @@ExplorerComboGadget, @@ExplorerListGadget, @@TreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = FrameGadget(#Gadget, x, y, Breite, Höhe, Text$ [, Flags]) 

@Description
  Erstellt ein Frame-Gadget ("Frame" = "Rahmen") innerhalb der aktuellen Gadgetliste.
  Diese Art von Gadget dient nur zur dekorativen Zwecken. 

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Text$"
  Ein Text, der im Rahmen (Frame) dargestellt wird.
  Dieser Parameter ist nur gültig, wenn keine Rahmen (siehe Flags) angegeben
  wurden, andernfalls wird der Text ignoriert.

@OptionalParameter "Flags"
  Flags, um das Aussehen des Rahmens zu verändern:
@FixedFont
  @#PB_Frame_Container: Aktiviert die Containerunterstützung, damit Gadgets hinzugefügt werden können (dringend
                       empfohlen, um verschiedene Probleme zu vermeiden). @@CloseGadgetList muss aufgerufen werden,
                       um wie bei jedem anderen Container-Gadget zur vorherigen Gadget-Liste zurückzukehren.
  @#PB_Frame_Single   : Einfach vertiefter Rahmen (nur auf Windows).
  @#PB_Frame_Double   : Doppelt vertiefter Rahmen (nur auf Windows).
  @#PB_Frame_Flat     : Flacher Rahmen (nur auf Windows).
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Da dieses Gadget nur zu dekorativen Zwecken dient, kann @@GadgetToolTip nicht
  verwendet werden. Dieses Gadget empfängt auch keine Ereignisse (Events).

@Example Mit Container
@Code
  If OpenWindow(0, 0, 0, 320, 250, "FrameGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    FrameGadget(0, 10,  10, 300, 200, "Optionen", #PB_Frame_Container)
      CheckBoxGadget(1, 10, 40, 200, 30, "Enable Optimizer")
      CheckBoxGadget(2, 10, 75, 200, 30, "Ausgabe validieren")
    CloseGadgetList()

    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@Example
@Code
  If OpenWindow(0, 0, 0, 320, 250, "FrameGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    FrameGadget(0, 10,  10, 300, 50, "FrameGadget Standard")
    FrameGadget(1, 10,  70, 300, 50, "", #PB_Frame_Single)
    FrameGadget(2, 10, 130, 300, 50, "", #PB_Frame_Double)
    FrameGadget(3, 10, 190, 300, 50, "", #PB_Frame_Flat)

    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image framegadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@ContainerGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeGadget(#Gadget)

@Description
  Gibt das Gadget frei und entfernt es vom Bildschirm (und gibt seine Gadgetliste
  frei, wenn das Gadget ein Container war).

@Parameter "#Gadget"
  Das freizugebende Gadget. Wenn @#PB_All angegeben wird, werden alle verbliebenen Gadgets freigegeben.

@NoReturnValue

@Remarks
  Ein Gadget wird automatisch freigegeben, wenn etwas wie folgt passiert:
@LineBreak
@LineBreak
  - Das Fenster, welches das Gadget enthält, wird @Link "Window/CloseWindow" "geschlossen".
@LineBreak
  - Das übergeordnete Gadget (@@ContainerGadget, @@PanelGadget etc.) wird freigegeben.
  @LineBreak
  - Das Programm endet.
@LineBreak
@LineBreak
  Verknüpfte Ereignisse (mittels @@BindEvent) werden beim Freigeben des Gadgets automatisch aufgelöst.

@SeeAlso
  @@IsGadget, @@CloseWindow

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function GadgetID = GadgetID(#Gadget)

@Description
  Gibt den einmaligen System-Bezeichner (Identifier) des Gadgets zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt den System-Bezeichner zurück.
  Dieses Ergebnis ist manchmal auch als 'Handle' bekannt. Sehen Sie in das gesonderte
  Kapitel @ReferenceLink "handles" "Handles und Nummern" für weitere Informationen.

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GadgetItemID(#Gadget, Eintrag) 

@Description
  Gibt das OS-Handle für den angegebenen Eintrag in einem Gadget zurück. Dies
  ist insbesondere nützlich für die Verwendung mit der OS API.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von dem das Handle zurückgegeben werden soll.
  Der erste Eintrag im Gadget hat den Index 0.

@ReturnValue
  Gibt das OS-Handle für den Eintrag zurück, oder Null bei einem Fehler.

@Remarks
  Diese Funktion wird gegenwärtig nur vom @@TreeGadget und @@PanelGadget auf Windows unterstützt.
  In anderen Fällen gibt sie Null zurück.

@SeeAlso
  @@TreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function GadgetToolTip(#Gadget, Text$) 

@Description
  Verknüpft den angegebenen Text$ mit dem #Gadget. Ein Tooltip-Text ist ein Text,
  der (typischerweise in einer kleinen gelben Box) erscheint, wenn sich der Mauszeiger
  eine Weile über einem Gadget befindet.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Text$"
  Der Tooltip-Text.

@NoReturnValue

@Remarks
  Die folgenden Gadgets werden unterstützt:
@LineBreak
@LineBreak
  - @@ButtonGadget @LineBreak
  - @@ButtonImageGadget @LineBreak
  - @@CalendarGadget @LineBreak
  - @@CanvasGadget @LineBreak
  - @@CheckBoxGadget @LineBreak
  - @@ComboBoxGadget @LineBreak
  - @@ContainerGadget @LineBreak
  - @@DateGadget@LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ExplorerTreeGadget @LineBreak
  - @@HyperLinkGadget @LineBreak
  - @@ImageGadget@LineBreak
  - @@IPAddressGadget @LineBreak
  - @@ListIconGadget@LineBreak
  - @@ListViewGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@OpenGLGadget @LineBreak 
  - @@OptionGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@ProgressBarGadget @LineBreak
  - @@ScrollBarGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@SplitterGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TrackBarGadget @LineBreak
  - @@TreeGadget

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 100, "GadgetTooltip", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 30, 250, 30, "Schalter mit Tooltip")
    GadgetToolTip(0, "Tooltip für den Schalter")
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image gadgettooltip.png

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GadgetX(#Gadget [, Modus])

@Description
  Gibt die X-Position des angegebenen Gadgets zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@OptionalParameter "Modus"
  Modus kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_ContainerCoordinate: die Gadget X-Position (in Pixel) innerhalb seines Containers, oder Fensters (Standard)
  @#PB_Gadget_WindowCoordinate   : die absolute Gadget X-Position (in Pixel) innerhalb des Fensters.
  @#PB_Gadget_ScreenCoordinate   : die absolute Gadget X-Position (in Pixel) auf dem Bildschirm.
                                  Dies kann nützlich sein, um etwas über dem Gadget anzuzeigen - wie ein schwebendes
                                  ("floating") Fenster oder ein Popup-Menü.
@EndFixedFont

@ReturnValue
  Gibt die X-Position (in Pixel) relativ zum übergeordneten Gadget (englisch "parent")
  oder Fenster zurück.

@SeeAlso
  @@GadgetY, @@GadgetWidth, @@GadgetHeight, @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GadgetY(#Gadget [, Modus])

@Description
  Gibt die Y-Position des angegebenen Gadgets zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@OptionalParameter "Modus"
  Modus kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_ContainerCoordinate: die Gadget Y-Position (in Pixel) innerhalb seines Containers, oder Fensters (Standard)
  @#PB_Gadget_WindowCoordinate   : die absolute Gadget Y-Position (in Pixel) innerhalb des Fensters.
  @#PB_Gadget_ScreenCoordinate   : die absolute Gadget Y-Position (in Pixel) auf dem Bildschirm.
                                  Dies kann nützlich sein, um etwas über dem Gadget anzuzeigen - wie ein schwebendes
                                  ("floating") Fenster oder ein Popup-Menü.
@EndFixedFont

@ReturnValue
  Gibt die Y-Position (in Pixel) relativ zum übergeordneten Gadget (englisch "parent")
  oder Fenster zurück.

@SeeAlso
  @@GadgetX, @@GadgetWidth, @@GadgetHeight, @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GadgetHeight(#Gadget [, Modus])

@Description
  Gibt die Höhe des angegebenen Gadgets zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@OptionalParameter "Modus"
  Kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_ActualSize  : gibt die aktuelle Höhe des Gadgets zurück, in Pixel (Standard).
  @#PB_Gadget_RequiredSize: gibt die für eine vollständige Darstellung des Gadgets benötigte Höhe zurück, in Pixel.
@EndFixedFont

@ReturnValue
  Gibt die Höhe des Gadgets in Pixel zurück.

@SeeAlso
  @@GadgetWidth, @@GadgetX, @@GadgetY, @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GadgetType(#Gadget) 

@Description
  Gibt den Typ des Gadgets zurück, welches der angegebenen Gadget-Nummer entspricht.
@Linebreak
@Linebreak
  Dies kann nützlich sein, um generisches Funktionen zu schreiben, welche mit mehr als
  einem Gadgettyp funktionieren.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt einen der folgenden Werte zurück:
@FixedFont
  @#PB_GadgetType_Button        : @@ButtonGadget
  @#PB_GadgetType_ButtonImage   : @@ButtonImageGadget
  @#PB_GadgetType_Calendar      : @@CalendarGadget
  @#PB_GadgetType_Canvas        : @@CanvasGadget
  @#PB_GadgetType_CheckBox      : @@CheckBoxGadget
  @#PB_GadgetType_ComboBox      : @@ComboBoxGadget
  @#PB_GadgetType_Container     : @@ContainerGadget
  @#PB_GadgetType_Date          : @@DateGadget
  @#PB_GadgetType_Editor        : @@EditorGadget
  @#PB_GadgetType_ExplorerCombo : @@ExplorerComboGadget
  @#PB_GadgetType_ExplorerList  : @@ExplorerListGadget
  @#PB_GadgetType_ExplorerTree  : @@ExplorerTreeGadget
  @#PB_GadgetType_Frame         : @@FrameGadget
  @#PB_GadgetType_HyperLink     : @@HyperLinkGadget
  @#PB_GadgetType_Image         : @@ImageGadget
  @#PB_GadgetType_IPAddress     : @@IPAddressGadget
  @#PB_GadgetType_ListIcon      : @@ListIconGadget
  @#PB_GadgetType_ListView      : @@ListViewGadget
  @#PB_GadgetType_MDI           : @@MDIGadget
  @#PB_GadgetType_OpenGL        : @@OpenGLGadget
  @#PB_GadgetType_Option        : @@OptionGadget
  @#PB_GadgetType_Panel         : @@PanelGadget
  @#PB_GadgetType_ProgressBar   : @@ProgressBarGadget
  @#PB_GadgetType_Scintilla     : @@ScintillaGadget
  @#PB_GadgetType_ScrollArea    : @@ScrollAreaGadget
  @#PB_GadgetType_ScrollBar     : @@ScrollBarGadget
  @#PB_GadgetType_Shortcut      : @@ShortcutGadget
  @#PB_GadgetType_Spin          : @@SpinGadget
  @#PB_GadgetType_Splitter      : @@SplitterGadget
  @#PB_GadgetType_String        : @@StringGadget
  @#PB_GadgetType_Text          : @@TextGadget
  @#PB_GadgetType_TrackBar      : @@TrackBarGadget
  @#PB_GadgetType_Tree          : @@TreeGadget
  @#PB_GadgetType_Web           : @@WebGadget
  @#PB_GadgetType_WebView       : @@WebViewGadget 
  @#PB_GadgetType_Unknown       : Der Typ ist unbekannt. Sehr wahrscheinlich ist es kein PB-Gadget.
@EndFixedFont

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GadgetWidth(#Gadget [, Modus])

@Description
  Gibt die Breite des angegebenen Gadgets zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@OptionalParameter "Modus"
  Kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_ActualSize  : gibt die aktuelle Breite des Gadgets zurück, in Pixel (Standard).
  @#PB_Gadget_RequiredSize: gibt die für eine vollständige Darstellung des Gadgets benötigte Breite zurück, in Pixel.
@EndFixedFont

@ReturnValue
  Gibt die Breite des Gadgets in Pixel zurück.

@SeeAlso
  @@GadgetHeight, @@GadgetX, @@GadgetY, @@ResizeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetActiveGadget()

@Description
  Gibt die Gadget-Nummer des Gadgets zurück, welches gerade den Tastatur-Fokus hat.

@NoParameters

@ReturnValue
  Gibt die #Gadget Nummer des Gadget mit dem Fokus zurück.
  Wenn kein Gadget den Fokus hat, wird -1 zurückgegeben.

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 70, "GetActiveGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget  (0, 10, 10, 250, 20, "Escape drücken...")
    StringGadget  (1, 10, 40, 250, 20, "Escape drücken...")
    AddKeyboardShortcut(0, #PB_Shortcut_Escape, 1)
    SetActiveGadget(0)
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Menu And EventMenu() = 1
        MessageRequester("Test", "Escape gedrückt im Gadget " + Str(GetActiveGadget()))
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Wert = GetGadgetAttribute(#Gadget, Attribut)

@Description
  Ermittelt einen Attribut-Wert des angegebenen Gadgets.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Attribut"
  Das zu ermittelnde Attribut.

@ReturnValue
  Gibt den Wert des angegebenen Gadget-Attributs zurück, oder Null wenn das
  Gadget das Attribut nicht unterstützt.

@Remarks
  Diese Funktion ist für alle Gadgets verfügbar, die Attribute unterstützen.
  Siehe die Beschreibungen der einzelnen Gadgets für die unterstützten Attribute:
@LineBreak
@LineBreak
  - @@ButtonImageGadget @LineBreak
  - @@CalendarGadget @LineBreak
  - @@CanvasGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@OpenGLGadget @LineBreak
  - @@PanelGadget @LineBreak
  - @@ProgressBarGadget @LineBreak
  - @@ScrollAreaGadget @LineBreak
  - @@ScrollBarGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@SplitterGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TrackBarGadget @LineBreak
  - @@WebGadget

@SeeAlso
  @@SetGadgetAttribute, @@GetGadgetItemAttribute, @@SetGadgetItemAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Farbe = GetGadgetColor(#Gadget, FarbTyp)

@Description
  Gibt eine Farb-Einstellung vom angegebenen Gadget zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "FarbTyp"
  Die zu ermittelnde Einstellung. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_FrontColor     : Gadget Text
  @#PB_Gadget_BackColor      : Gadget Hintergrund
  @#PB_Gadget_LineColor      : Farbe für Gitterlinien
  @#PB_Gadget_TitleFrontColor: Textfarbe im Titel         (bei @@CalendarGadget)
  @#PB_Gadget_TitleBackColor : Hintergrundfarbe im Titel  (bei @@CalendarGadget)
  @#PB_Gadget_GrayTextColor  : Farbe für "ergrauten" Text (bei @@CalendarGadget)
@EndFixedFont

@ReturnValue
  Gibt die aktuelle Farbeinstellung zurück. Dieser Befehl gibt die Farbe zurück,
  welche zuvor mittels @@SetGadgetColor festgelegt wurde. Wenn für das #Gadget
  keine eigene Farbe festgelegt wurde, dann gibt der Befehl @#PB_Default zurück.

@Remarks
  Dieser Befehl wird von den folgenden Gadgets unterstützt:
  (Siehe die jeweilige Beschreibung des Gadgets für die unterstützte 'FarbTyp'-Werte.)
@LineBreak
@LineBreak
  - @@CalendarGadget
@LineBreak
  - @@ContainerGadget
@LineBreak
  - @@DateGadget
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@ExplorerListGadget
@LineBreak
  - @@ExplorerTreeGadget
@LineBreak
  - @@HyperLinkGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@MDIGadget
@LineBreak
  - @@ProgressBarGadget
@LineBreak
  - @@ScrollAreaGadget
@LineBreak
  - @@SpinGadget
@LineBreak
  - @@StringGadget
@LineBreak
  - @@TextGadget
@LineBreak
  - @@TreeGadget

@OS Windows
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Mit aktiviertem Windows XP Style wird die Farbe möglicherweise vom Style überschrieben.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Diese Optionen sind für Gtk nicht implementiert - daher funktioniert die Einfärbung
  auf Linux nur, wenn sie von der Distribution, dem Window-Manager und dem Theme unterstützt wird.
@EndOS
  
@SeeAlso
  @@SetGadgetColor, @@GetGadgetItemColor, @@SetGadgetItemColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetGadgetData(#Gadget)

@Description
  Gibt den Daten-Wert ('Data') zurück, welcher zuvor für dieses Gadget mittels @@SetGadgetData gespeichert wurde.
  Dies ermöglicht es, jedem Gadget einen individuellen Wert zuzuweisen.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt den aktuellen Daten-Wert zurück.  Wenn für das Gadget nie ein 'Data' Wert festgelegt
  wurde, wird der Rückgabewert gleich 0 sein.

@Remarks
  Diese Funktion arbeitet mit allen PureBasic-Gadgets. Siehe @@SetGadgetData für ein Beispiel.

@SeeAlso
  @@SetGadgetData, @@GetGadgetItemData, @@SetGadgetItemData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FontID = GetGadgetFont(#Gadget)

@Description
  Ermittelt die dem angegebenen Gadget zugewiesene FontID.

@Parameter "#Gadget"
  Das zu verwendende Gadget. Wird die Konstante @#PB_Default 
  als '#Gadget'-Parameter angegeben, dann wird die für neu zu erstellende Gadgets verwendete standardmäßige 
  FontID zurückgegeben.

@ReturnValue
  Gibt die FontID des Gadgets oder diejenige, die für neu erstellte Gadgets verwendet wird, zurück.
@LineBreak
@LineBreak
  Hinweis: Auf Mac OSX gibt diese Funktion 0 zurück, wenn das Gadget keinen speziell mit ihm
  verknüpften Zeichensatz (FontID) besitzt.

@SeeAlso
  @@SetGadgetFont, @@FontID

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Wert = GetGadgetItemAttribute(#Gadget, Eintrag, Attribut [, Spalte])

@Description
  Ermittelt den Attribut-Wert des angegebenen Gadget-Eintrags.
  
@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von welchem das Attribut ermittelt werden soll. Der erste
  Eintrag im Gadget hat den Index 0.

@Parameter "Attribut"
  Das zu ermittelnde Attribut.

@OptionalParameter "Spalte"
  Die Spalte (bei Gadgets, die mehrere Spalten unterstützen), von welcher
  das Attribut ermittelt werden soll. Die erste Spalte hat den Index 0. Der
  Standard ist Spalte 0.

@ReturnValue
  Gibt den Attribut-Wert zurück, oder Null, wenn der Eintrag oder das Attribut nicht existiert.

@Remarks
  Diese Funktion ist für alle Gadgets verfügbar, welche Eintrag-Attribute unterstützen:
@LineBreak
@LineBreak
  - @@ExplorerListGadget:
@FixedFont
  @#PB_Explorer_ColumnWidth : Gibt die Breite der angegebenen 'Spalte' zurück. Der Parameter 'Eintrag' wird ignoriert.
@EndFixedFont

  - @@ListIconGadget:
@FixedFont
  @#PB_ListIcon_ColumnWidth : Gibt die Breite der angegebenen 'Spalte' zurück. Der Parameter 'Eintrag' wird ignoriert.
@EndFixedFont

  - @@TreeGadget:
@FixedFont
  @#PB_Tree_SubLevel : Gibt die Unterebene ("sublevel") des angegebenen 'Eintrag' zurück.
@EndFixedFont
  Der "Sublevel"-Wert des Tree-Eintrags kann verwendet werden, um Verbindungen zwischen den Einträgen im Tree (Baum) festzustellen.
  Zum Beispiel ist der erste Eintrag mit einem "Sublevel" kleiner als der aktuelle Eintrag der "Parent" (übergeordnete "Eltern"-Eintrag)
  des aktuellen Eintrags, wenn die Liste rückwärts überprüft wird.

@SeeAlso
  @@SetGadgetItemAttribute, @@GetGadgetAttribute, @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Farbe = GetGadgetItemColor(#Gadget, Eintrag, FarbTyp [, Spalte])

@Description
  Gibt eine Farb-Einstellung vom angegebenen Gadget-Eintrag zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von welchem die Farbe ermittelt werden soll. Der erste
  Eintrag im Gadget hat den Index 0.

@Parameter "FarbTyp"
  Die zu ermittelnde Einstellung. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_FrontColor : Eintrag-Text
  @#PB_Gadget_BackColor  : Eintrag-Hintergrund
@EndFixedFont

@OptionalParameter "Spalte"
  Die Spalte (bei Gadgets, die mehrere Spalten unterstützen), von welcher
  die Farbe ermittelt werden soll. Die erste Spalte hat den Index 0. Der
  Standard ist Spalte 0.

@ReturnValue
  Gibt die aktuelle Farbeinstellung zurück. Dieser Befehl gibt die Farbe zurück,
  welche zuvor mittels @@SetGadgetItemColor festgelegt wurde. Wenn für das #Gadget
  und den 'FarbTyp' keine eigene Farbe festgelegt wurde, dann gibt der Befehl @#PB_Default zurück.

@Remarks
  Dieser Befehl wird von den folgenden Gadgets unterstützt:
@LineBreak
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@TreeGadget

@OS Windows
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Mit aktiviertem Windows XP Style wird die Farbe möglicherweise vom Style überschrieben.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Diese Optionen sind für Gtk nicht implementiert - daher funktioniert die Einfärbung
  auf Linux nur, wenn sie von der Distribution, dem Window-Manager und dem Theme unterstützt wird.
@EndOS

@SeeAlso
  @@SetGadgetItemColor, @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetGadgetItemData(#Gadget, Eintrag)

@Description
  Gibt den Wert zurück, welcher zuvor für diesen #Gadget-Eintrag mittels @@SetGadgetItemData 
  gespeichert wurde. Dies ermöglicht es, jedem Eintrag in einem Gadget einen individuellen Wert zuzuweisen. 

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von welchem die Daten gelesen werden sollen. Der erste
  Eintrag im Gadget hat den Index 0.

@ReturnValue
  Gibt die gespeicherten Daten zurück. Wenn für den Eintrag noch kein Wert gespeichert wurde,
  wird der Rückgabewert gleich 0 sein.

@Remarks
  Dieser Befehl arbeitet mit folgenden Gadgets:
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@TreeGadget
@LineBreak
@LineBreak
  Siehe @@SetGadgetItemData für ein Beispiel.

@SeeAlso
  @@SetGadgetItemData, @@GetGadgetData, @@SetGadgetData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetGadgetState(#Gadget) 

@Description
  Gibt den aktuellen Status des Gadgets zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt den Status des Gadgets zurück. Siehe unten für seine Bedeutung, abhängig vom Gadgettyp.

@Remarks
  Dies ist eine universelle Funktion, die mit den meisten der Gadgettypen arbeitet:
@LineBreak
@LineBreak
  - @@ButtonImageGadget: gibt 1 zurück, wenn ein #PB_Button_Toggle Schalter gedrückt ist, andernfalls 0.
@LineBreak
  - @@ButtonGadget: gibt 1 zurück, wenn ein #PB_Button_Toggle Schalter gedrückt ist, andernfalls 0.
@LineBreak
  - @@CalendarGadget: gibt das aktuell ausgewählte Datum zurück.
@LineBreak
  - @@CheckBoxGadget: gibt einen der folgenden Werte zurück:
@FixedFont
  @#PB_CheckBox_Checked  : Das Häkchen ist gesetzt.
  @#PB_CheckBox_Unchecked: Das Häkchen ist nicht gesetzt.
  @#PB_CheckBox_Inbetween: Der "Dazwischen"-Status ist gesetzt. (Nur für @#PB_CheckBox_ThreeState Checkboxen)
@EndFixedFont
  - @@ComboBoxGadget: gibt den aktuell gewählten Eintrag-Index zurück, -1 wenn nichts markiert ist.
@LineBreak
  - @@DateGadget: gibt das aktuell ausgewählte Datum und die Zeit zurück. Wenn @#PB_Date_CheckBox verwendet wurde und kein Häkchen gesetzt ist, wird 0 zurückgegeben.
@LineBreak
  - @@ExplorerListGadget: gibt den Index des ersten ausgewählten Eintrags im Gadget zurück, -1 wenn nichts ausgewählt ist.
@LineBreak
  - @@ExplorerTreeGadget: gibt den Typ des aktuell ausgewählten Eintrag zurück. (@#PB_Explorer_File für eine Datei oder @#PB_Explorer_Directory für ein Verzeichnis)
@LineBreak
  - @@ImageGadget: gibt die ImageID des gerade angezeigten Bilds zurück.
@LineBreak
  - @@IPAddressGadget: gibt die aktuelle IP-Adresse zurück.
@LineBreak
  - @@ListIconGadget: gibt den ersten ausgewählten Eintrag-Index zurück, -1 wenn nichts ausgewählt ist.
@LineBreak
  - @@ListViewGadget: gibt den aktuell gewählten Eintrag-Index zurück, -1 wenn nichts ausgewählt ist.
@LineBreak
  - @@MDIGadget: gibt das aktuell fokussierte ChildWindow zurück, -1 wenn keines den Fokus hat.
@LineBreak
  - @@OptionGadget: gibt 1 zurück, wenn aktiviert, andernfalls 0.
@LineBreak
  - @@PanelGadget: gibt den aktuellen Panel-Index zurück, -1 falls kein Panel.
@LineBreak
  - @@ProgressBarGadget: ermittelt den aktuellen Wert der Fortschrittsanzeige.
@LineBreak
  - @@ScrollBarGadget: ermittelt die aktuelle Position des Schiebebalkens.
@LineBreak
  - @@ShortcutGadget: gibt das aktuell ausgewählte Tastenkürzel zurück.
@LineBreak
  - @@SpinGadget: ermittelt den aktuellen Wert des SpinGadget.
@LineBreak
  - @@SplitterGadget: ermittelt die aktuelle Splitter-Position, in Pixel.
@LineBreak
  - @@TrackBarGadGet: gibt die aktuelle Regler-Position (Wert innerhalb der Minimum-Maximum Spanne) zurück.
@LineBreak
  - @@TreeGadget: gibt den aktuell gewählten Eintrag-Index zurück, -1 wenn nichts ausgewählt ist.

@SeeAlso
  @@SetGadgetState, @@GetGadgetItemState, @@SetGadgetItemState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis$ = GetGadgetItemText(#Gadget, Eintrag [, Spalte])

@Description
  Gibt den Textinhalt des angegebenen Eintrags vom angegebenen Gadget zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von dem der Text ermittelt werden soll. Der erste Eintrag im Gadget hat den Index 0.

@OptionalParameter "Spalte"
  Die zu verwendende Spalte (bei Gadgets, die mehrere Spalten unterstützen).
  Die erste Spalte hat den Index 0. Der Standard ist Spalte 0.

@ReturnValue
  Gibt den Text des Gadget-Eintrags zurück - oder einen leeren String, wenn dabei
  ein Fehler auftrat.

@Remarks
  Dies ist eine universelle Funktion, welche zusammen mit den meisten Gadgets 
  arbeitet, die mehrere Einträge verwalten:
@LineBreak
@LineBreak
  - @@ComboBoxGadget - 'Eintrag' ist die Index-Nummer des Eintrags in der ComboBox-Liste.
    'Spalte' wird ignoriert.
@LineBreak
  - @@EditorGadget - 'Eintrag' ist die Textzeile im EditorGadget. 'Spalte' wird ignoriert.
@LineBreak
  - @@ExplorerListGadget - gibt den Namen des 'Eintrag's zurück, ohne den Dateipfad.
    Wenn 'Eintrag' = -1, wird der 'Spalten'-Titel zurückgegeben.
@LineBreak
  - @@ExplorerTreeGadget - gibt den vollständigen Pfad des 'Eintrag's zurück.
@LineBreak
  - @@ListIconGadget - gibt den Inhalt des angegebenen 'Eintrag's und der 'Spalte' zurück.
    Wenn 'Eintrag' = -1, wird der 'Spalten'-Titel zurückgegeben.
@LineBreak
  - @@ListViewGadget - 'Eintrag' ist die Nummer des Eintrags, dessen Inhalt Sie ermitteln wollen.
    'Spalte' wird ignoriert.
@LineBreak
  - @@MDIGadget - 'Eintrag' ist der Index des ChildWindow's, von welchem Sie den Titel ermitteln möchten.
@LineBreak
  - @@PanelGadget - 'Eintrag' ist das Panel (Schalttafel), dessen Überschrift Sie ermitteln wollen.
@LineBreak
  - @@TreeGadget - 'Eintrag' ist die Nummer des Eintrags, dessen Inhalt Sie ermitteln wollen.
    'Spalte' wird ignoriert.
@LineBreak
  - @@WebGadget - Ermittelt den Html-Code, den Seitentitel, die Status-Nachricht oder die aktuelle Auswahl.

@SeeAlso
  @@SetGadgetItemText, @@GetGadgetText, @@SetGadgetText

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = GetGadgetItemState(#Gadget, Eintrag)

@Description
  Gibt den Status eines Eintrags im angegebenen Gadget zurück.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von dem der Status ermittelt werden soll. Der erste Eintrag im Gadget hat den Index 0.

@ReturnValue
  Gibt den Status des Gadget-Eintrags zurück - oder 0, wenn dabei ein Fehler auftrat.
  Siehe unten für die Bedeutung dieses Wertes, abhängig vom Gadgettyp.

@Remarks
  Dies ist eine universelle Funktion, welche zusammen mit den meisten Gadgets 
  arbeitet, die mehrere Einträge verwalten:
@LineBreak
  - @@ExplorerListGadget: gibt eine Kombination der folgenden Werte zurück:
@FixedFont
  @#PB_Explorer_File      : Der Eintrag ist eine Datei.
  @#PB_Explorer_Directory : Der Eintrag ist ein Verzeichnis (oder ein Laufwerk).
  @#PB_Explorer_Selected  : Der Eintrag ist aktuell ausgewählt.
@EndFixedFont
  - @@ListViewGadget: gibt 1 zurück, wenn der Eintrag ausgewählt ist, andernfalls 0.
@LineBreak
  - @@ListIconGadget: gibt eine Kombination der folgenden Werte zurück:
@FixedFont
  @#PB_ListIcon_Selected : Der 'Eintrag' ist ausgewählt
  @#PB_ListIcon_Checked  : Der 'Eintrag' ist mit einem Häkchen versehen (@#PB_ListIcon_CheckBoxes Flag).
  @#PB_ListIcon_Inbetween: Die Häkchen-Box des Eintrags befindet sich im "Dazwischen"-Status (nur mit @#PB_ListIcon_ThreeState Flag).
@EndFixedFont
  - @@TreeGadget: gibt eine Kombination der folgende Werte zurück:
@FixedFont
  @#PB_Tree_Selected  : Der Eintrag ist ausgewählt, andernfalls 0.
  @#PB_Tree_Expanded  : Der Eintrag ist ausgeklappt (ein "Baum"-Eintrag ist geöffnet), andernfalls 0.
  @#PB_Tree_Collapsed : Der Eintrag ist nicht ausgeklappt (der "Baum"-Eintrag geschlossen).
  @#PB_Tree_Checked   : Das Häkchen bei einem Eintrag ist gesetzt, andernfalls 0 (nur mit @#PB_Tree_CheckBoxes Flag).
  @#PB_Tree_Inbetween : Das Häkchen bei einem Eintrag befindet sich im "Dazwischen"-Status (nur mit @#PB_Tree_ThreeState Flag).
@EndFixedFont

  Überprüfen Sie den Status wie bei folgendem Beispiel:
@Code
  If Ergebnis & #PB_Tree_Checked
    ; Eintrag ist mit Häkchen versehen
  Endif
@EndCode

@Example
  Nachfolgend noch anhand des @@ListIconGadget ein Beispiel,
  wie ggf. eine Kombination mehrerer Ergebnisse abgefragt werden kann:
@Code
  ; ... hier ein Ausschnitt aus einer WaitWindowEvent() - Ereignis-Warteschlange:
  If GetGadgetItemState(#Listicon, n) & #PB_ListIcon_Checked
    ; Eintrag n ist abgehakt (egal ob ausgewählt oder nicht) 
  EndIf 
  
  If GetGadgetItemState(#Listicon, n) & #PB_ListIcon_Selected
    ; Eintrag n ist ausgewählt (egal ob abgehakt oder nicht) 
  EndIf 
  
  If GetGadgetItemState(#Listicon, n) = #PB_ListIcon_Checked | #PB_ListIcon_Selected 
    ; Eintrag n ist abgehakt UND ausgewählt
  EndIf 
  
  If GetGadgetItemState(#Listicon, n) & (#PB_ListIcon_Checked | #PB_ListIcon_Selected)
    ; Eintrag n ist abgehakt ODER ausgewählt ODER beides 
  EndIf
@EndCode

@SeeAlso
  @@SetGadgetItemState, @@GetGadgetState, @@SetGadgetState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function String$ = GetGadgetText(#Gadget) 

@Description
  Gibt den Text-Inhalt des angegebenen Gadgets zurück. 

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt den Gadget-Text zurück - oder einen leeren String, wenn das Gadget keinen Text-Inhalt unterstützt.

@Remarks 
  Dieser Befehl ist besonders nützlich für:
@LineBreak
@LineBreak
  - @@ButtonGadget: gibt den Text des ButtonGadgets zurück.
@LineBreak
  - @@ComboBoxGadget: gibt den Inhalt des aktuellen Eintrags zurück.
@LineBreak
  - @@DateGadget: gibt das aktuell angezeigte Datum zurück, in der gleichen Form wie es im Gadget angezeigt wird.
@LineBreak
  - @@EditorGadget: gibt den Textinhalt des EditorGadgets zurück. Bitte dabei beachten, dass mehrere
    Textzeilen durch "Chr(13)+Chr(10)" auf Windows bzw. "Chr(10)" auf Linux und OS X voneinander getrennt werden.
@LineBreak
  - @@ExplorerComboGadget: gibt das aktuell ausgewählte und angezeigte Verzeichnis zurück.
@LineBreak
  - @@ExplorerListGadget: gibt das aktuell ausgewählte Verzeichnis zurück.
@LineBreak
  - @@ExplorerTreeGadget: gibt den vollständigen Pfad der/des aktuell ausgewählten Datei/Verzeichnisses zurück.
@LineBreak 
  - @@FrameGadget - gibt den Titel des FrameGadgets zurück.
@LineBreak 
  - @@HyperLinkGadget - gibt den Text des HyperLinkGadgets zurück.
@LineBreak 
  - @@ListIconGadget: gibt den Inhalt der ersten Spalte des aktuell ausgewählten Eintrags zurück.
@LineBreak
  - @@ListViewGadget: gibt den Inhalt des aktuellen Eintrags zurück.
@LineBreak
  - @@StringGadget: gibt den Inhalt des StringGadgets zurück.
@LineBreak
  - @@TextGadget: gibt den Inhalt des TextGadgets zurück.
@LineBreak
  - @@TreeGadget: gibt den Textinhalt des aktuell ausgewählten Eintrags im TreeGadget zurück.
@LineBreak
  - @@WebGadget: gibt die URL der angezeigten Webseite zurück.

@SeeAlso
  @@SetGadgetText, @@GetGadgetItemText, @@SetGadgetItemText

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function HideGadget(#Gadget, Status)

@Description
  Versteckt ein Gadget oder zeigt es wieder an. 

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Status"
  Der neue Status des Gadgets.
  Ist der Status = 1, dann wird das Gadget versteckt.
  Ist der Status = 0, wird es angezeigt.

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 0, 0, 180, 120, "HideGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 10, 160, 50, "Button 1")       : button = #True   ; Schalter wird angezeigt
    ButtonGadget(1, 10, 80, 160, 30, "Hide Button 1")
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        If EventGadget() = 1
          If button = #True     ; ButtonGadget wird angezeigt
            HideGadget(0, 1)    ; => verstecke es
            button = #False
            SetGadgetText(1, "Show Button 1")
          Else                  ; ButtonGadget ist versteckt
            HideGadget(0, 0)    ; => zeige es
            button = #True
            SetGadgetText(1, "Hide Button 1")
          EndIf
        EndIf
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@DisableGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = HyperLinkGadget(#Gadget, x, y, Breite, Höhe, Text$, Farbe [, Flags])

@Description
  Erstellt ein HyperLink-Gadget innerhalb der aktuellen Gadgetliste.
  Ein HyperLink-Gadget ist ein Textbereich, welcher auf den Mauszeiger durch Veränderung
  seiner Farbe und der Cursorform reagiert.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Text$"
  Der Text, welcher als Link dargestellt werden soll.

@Parameter "Farbe"
  Die Farbe des Textes, wenn sich die Maus über dem Gadget befindet. Die Farbe für den
  Status "nicht hervorgehoben" (englisch "non-highlighted") kann mittels @@SetGadgetColor geändert werden.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann folgende Konstante sein:
@FixedFont
  @#PB_Hyperlink_Underline: Zeichnet eine Linie unter den Text, ohne die Notwendigkeit für einen unterstrichenen 
                                     Zeichensatz.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den @#PB_Gadget_FrontColor und @#PB_Gadget_BackColor Typen, um die Farbe
  des Textes und des Hintergrundes (wenn der Fenster-Hintergrund verändert wurde)
  zu ändern.
@LineBreak

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 160, "HyperlinkGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    HyperLinkGadget(0, 10, 10, 250, 20, "Red HyperLink", RGB(255,0,0))
    HyperLinkGadget(1, 10, 30, 250, 40, "Arial Underlined Green HyperLink", RGB(0,255,0), #PB_HyperLink_Underline)
    SetGadgetFont(1, LoadFont(0, "Arial", 12))
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image hyperlinkgadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ImageGadget(#Gadget, x, y, Breite, Höhe, ImageID [, Flags]) 

@Description
  Erstellt ein Image-Gadget (Bild-Gadget) innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.
@LineBreak
@LineBreak
  Das Gadget passt seine Breite und Höhe automatisch dem dargestellten Bild an. Die angegebenen
  Breite und Höhe werden nur verwendet, wenn kein Bild dargestellt wird.

@Parameter "ImageID"
  Das darzustellende Bild (Image). Verwenden Sie die Funktion @@ImageID, um diese
  ID von einem Bild zu erhalten. Ist dieser Parameter gleich 0, dann wird kein Bild dargestellt.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann folgende Konstante sein:
@FixedFont
  @#PB_Image_Border: stellt einen vertieften Rand rings um das Bild dar.
  @#PB_Image_Raised: stellt einen erhobenen Rand rings um das Bild dar.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  - @@SetGadgetState: Ändert das aktuelle Bild des Gadgets. Eine gültige 'ImageID' kann einfach
    mittels @@ImageID ermittelt werden.
    Ist die ImageID gleich 0, dann wird das Bild vom Gadget entfernt.
@LineBreak
@LineBreak
  Die Abfrage folgender Ereignisse wird mittels @@EventType unterstützt:
@FixedFont
  @#PB_EventType_LeftClick
  @#PB_EventType_RightClick
  @#PB_EventType_LeftDoubleClick
  @#PB_EventType_RightDoubleClick
  @#PB_EventType_DragStart
@EndFixedFont
  Nach einem @#PB_EventType_DragStart Ereignis kann die @LibraryLink "dragdrop" "Drag & Drop Library" verwendet
  werden, um eine Drag & Drop Operation zu starten. Unter MacOS X muss das Ereignis @#PB_EventType_DragStart mit
  @@BindEvent oder @@BindGadgetEvent behandelt werden.
@LineBreak
@LineBreak
  Wenn die Unterstützung weiterer Ereignis-Typen oder "Double-Buffering" für regelmäßig aktualisierte
  Bild-Inhalte benötigt wird, dann werfen Sie einen Blick auf das @@CanvasGadget.

@Example
@Code
  If OpenWindow(0, 0, 0, 245, 105, "ImageGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    If LoadImage(0, #PB_Compiler_Home + "examples/sources/Data/Map.bmp")
      ImageGadget(0,  10, 10, 100, 83, ImageID(0))                     ; Imagegadget Standard
      ImageGadget(1, 130, 10, 100, 83, ImageID(0), #PB_Image_Border)   ; Imagegadget mit Rand
    EndIf
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image imagegadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@ButtonImageGadget, @@ImageID, @@CanvasGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = IPAddressGadget(#Gadget, x, y, Breite, Höhe) 

@Description
  Erstellt ein IPAdress-Gadget innerhalb der aktuellen Gadgetliste. Dieses Gadget ermöglicht Ihnen
  auf einfache Art und Weise die Eingabe einer kompletten IPv4-Adresse.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können in Zusammenhang mit diesem Gadget benutzt werden:
@LineBreak
@LineBreak
  - @@GetGadgetState: Ermittelt die aktuelle IP-Adresse (benutzen Sie @@IPAddressField,
   um den Wert jedes Felds zu ermitteln).
@LineBreak
  - @@SetGadgetState: Ändert die aktuelle IP-Adresse (benutzen Sie @@MakeIPAddress,
   um eine gültige IP-Adresse zu erstellen).
@LineBreak
  - @@GetGadgetText: Gibt die aktuelle IP-Adresse in Textform (mit Punkten getrennt) zurück,
   zum Beispiel "127.0.0.1".
@LineBreak
  - @@SetGadgetText: Wird nur verwendet, um den Inhalt der IP-Adresse durch Übergabe eines Leerstrings
   zu löschen.

@Example
@Code
  If OpenWindow(0, 0, 0, 180, 50, "IPAddressGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    IPAddressGadget(0, 10, 15, 160, 20)
    SetGadgetState(0, MakeIPAddress(127, 0, 0, 1))   ; wir setzen eine gültige IP-Adresse
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image ipaddressgadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetText, @@SetGadgetText, @@IPAddressField, @@IPString, @@MakeIPAddress

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = IsGadget(#Gadget)

@Description
  Überprüft, ob die angegebene #Gadget Nummer gültig und ein korrekt initialisiertes Gadget ist.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@ReturnValue
  Gibt einen Wert ungleich Null zurück, wenn der übergebene Parameter ein gültiges Gadget ist,
  andernfalls Null.

@Remarks
  Diese Funktion ist "kugelsicher" und kann mit jedem Wert benutzt werden. 
  Dies ist der richtige Weg, um sicher zu stellen, dass ein Gadget bereit zur Verwendung ist.

@SeeAlso
  @@FreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ListIconGadget(#Gadget, x, y, Breite, Höhe, ErsterSpaltenTitel$, ErsteSpaltenBreite [, Flags])

@Description
  Erstellt ein ListIcon-Gadget innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "ErsterSpaltenTitel$"
  Der Titel der ersten Spalte im Gadget. Das Gadget wird mit einer anfänglichen
  Spalte erstellt.

@Parameter "ErsteSpaltenBreite"
  Die Breite der ersten Spalte im Gadget.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_ListIcon_CheckBoxes          : Zeigt Checkboxen (Häkchen-Boxen) in der ersten Spalte.
  @#PB_ListIcon_ThreeState          : Die Checkboxen können einen "Dazwischen"-Status haben.
  @#PB_ListIcon_MultiSelect         : Schaltet die Mehrfach-Selektion ein.
  @#PB_ListIcon_GridLines           : Zeigt Separator-Linien zwischen Zeilen und Spalten an.
  @#PB_ListIcon_FullRowSelect       : Die Auswahl erfolgt über die gesamte Zeile anstelle nur der ersten Spalte (nur auf Windows und QT).
  @#PB_ListIcon_HeaderDragDrop      : Die Reihenfolge der Spalten kann per Drag'n'Drop verändert werden.
  @#PB_ListIcon_AlwaysShowSelection : Die Auswahl ist noch sichtbar, auch wenn das Gadget nicht aktiv ist (nur auf Windows).
@EndFixedFont

  Das @#PB_ListIcon_ThreeState Flag kann in Verbindung mit dem 
  @#PB_ListIcon_CheckBoxes Flag verwendet werden, um Checkboxen (Häkchen-Boxen) zu erhalten,
  welche einen "An", "Aus" und "Dazwischen" Status haben können.
  Der Anwender kann nur die "An"- bzw. "Aus"-Status auswählen. Der "Dazwischen"-Status kann programmseitig
  mittels der @@SetGadgetItemState Funktion gesetzt werden.
  
@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Sobald ein ListIcon-Gadget erstellt wurde, ist dessen Listeninhalt leer.
@LineBreak
  Die folgenden Befehle können zum Zugriff auf den Listeninhalt benutzt werden:
@LineBreak
@LineBreak
  - @@AddGadgetColumn: Fügt eine Spalte zum Gadget hinzu.
@LineBreak
  - @@RemoveGadgetColumn: Entfernt eine Spalte vom Gadget.
@LineBreak
  - @@AddGadgetItem: Fügt einen Eintrag  (mit optionalem Bild in der 16x16 Standard Icon-Größe) hinzu.
@LineBreak
  - @@RemoveGadgetItem: Entfernt einen Eintrag.
@LineBreak
  - @@ClearGadgetItems: Entfernt alle Einträge.
@LineBreak
  - @@CountGadgetItems: ermittelt die Anzahl der aktuell im Gadget enthaltenen Einträge.
@LineBreak
@LineBreak
  - @@GetGadgetItemColor: Gibt die Text- oder Hintergrundfarbe des Eintrags zurück.
@LineBReak
  - @@SetGadgetItemColor: Ändert die Text- oder Hintergrundfarbe des Eintrags (Hintergrundfarbe nicht auf MacOS X unterstützt).
@LineBreak  
  - @@GetGadgetItemData: Gibt den Wert zurück, welcher mit dem Eintrag gespeichert wurde.
@LineBreak
  - @@SetGadgetItemData: Speichert einen Wert mit dem Eintrag.
@LineBreak
  - @@GetGadgetItemState: Ermittelt den aktuellen Status des angegebenen Eintrags.
@LineBreak
  - @@SetGadgetItemState: Ändert den aktuellen Status des angegebenen Eintrags.
@LineBreak
  - @@GetGadgetItemText: Ermittelt den aktuellen Text des angegebenen Eintrags. (oder den Spalten-Titel, wenn 'Eintrag' = -1)
@LineBreak
  - @@SetGadgetItemText: Ändert den aktuellen Text des angegebenen Eintrags. (oder den Spalten-Titel, wenn 'Eintrag' = -1)
                         Wie bei @@AddGadgetItem ist es möglich, den Text für mehrere Spalten mit einmal festzulegen,
                         mittels des @Link "String/Chr" "Chr(10)" Trennzeichens.
@LineBreak
  - @@SetGadgetItemImage: Ändert das aktuelle Bild des angegebenen Eintrags.
@LineBreak
  - @@GetGadgetState: Gibt den ersten ausgewählten Eintrag zurück, oder -1 wenn kein Eintrag selektiert ist.
@LineBreak
  - @@SetGadgetState: Ändert den ausgewählten Eintrag (alle anderen selektierten Einträge verlieren ihre Markierung). Wird -1 angegeben, dann wird die gesamte Auswahl entfernt (nichts ist mehr selektiert).
@LineBreak
  - @@GetGadgetAttribute mit den folgenden Attributen:
@FixedFont
  @#PB_ListIcon_ColumnCount  : Gibt die Anzahl an Spalten im Gadget zurück
  @#PB_ListIcon_DisplayMode  : Gibt den aktuellen Anzeigemodus des Gadgets zurück (nur auf Windows)
  @#PB_ListIcon_ClickedColumn: Gibt den zuletzt angeklickten Spaltenindex zurück. Die erste Spalte hat den Index 0.
@EndFixedFont
  - @@SetGadgetAttribute mit den folgenden Attributen:
@FixedFont
  @#PB_ListIcon_DisplayMode : Ändert den Anzeigemodus des Gadgets (nur auf Windows). Dies kann eine der folgenden Konstanten sein (nur auf Windows):
    @#PB_ListIcon_LargeIcon : großer Icon-Modus
    @#PB_ListIcon_SmallIcon : kleiner Icon-Modus
    @#PB_ListIcon_List      : Listen-Icon-Modus
    @#PB_ListIcon_Report    : Report-Modus (Spalten, Standardmodus)
@EndFixedFont
@LineBreak
  - @@GetGadgetItemAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_ListIcon_ColumnWidth: Gibt die Breite der angegebenen 'Spalte' zurück. Der Parameter 'Eintrag' wird ignoriert.
@EndFixedFont
  @@SetGadgetItemAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_ListIcon_ColumnWidth    : Ändert die Breite der angegebenen 'Spalte'. Der Parameter 'Eintrag' wird ignoriert.
  @#PB_ListIcon_ColumnAlignment: Ändert die Textausrichtung der angegebenen 'Spalte'. Der Parameter 'Wert' kann einer der folgenden Werte sein:
     - @#PB_ListIcon_Left  : Text wird linksbündig ausgerichtet (Standard).
     - @#PB_ListIcon_Right : Text wird rechtsbündig ausgerichtet.
     - @#PB_ListIcon_Center: Text wird zentriert.
@EndFixedFont

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
  @#PB_Gadget_LineColor : Farbe der Gitterlinien, wenn das @#PB_ListIcon_GridLines Flag verwendet wird.
@EndFixedFont

  Die folgenden Ereignisse ("Events") werden durch @@EventType unterstützt:
@FixedFont  
  @#PB_EventType_LeftClick   : linker Mausklick auf einen Eintrag, oder ein Häkchen wurde gesetzt/entfernt
  @#PB_EventType_LeftDoubleClick
  @#PB_EventType_RightClick
  @#PB_EventType_RightDoubleClick
  @#PB_EventType_Change      : der aktuelle Eintrag wurde verändert
  @#PB_EventType_DragStart   : der Anwender versucht, eine Drag & Drop Operation zu starten. @@ExamineDraggedItems
                              kann verwendet werden, um die Informationen zu den gezogenen Elementen abzurufen.
  @#PB_EventType_ColumnClick : ein Spaltentitel wurde angeklickt. Verwenden Sie GetGadgetAttribute() mit
                              @#PB_ListIcon_ClickedColumn, um die angeklickte Spalte zu ermitteln.
@EndFixedFont
  Nach einem @#PB_EventType_DragStart Ereignis kann die @LibraryLink "dragdrop" "Drag & Drop Library" verwendet
  werden, um eine Drag & Drop Operation zu starten. Unter MacOS X muss das Ereignis @#PB_EventType_DragStart mit
  @@BindEvent oder @@BindGadgetEvent behandelt werden.

@LineBreak
@LineBreak
  Wenn Sie mittels @@AddGadgetItem zu einem ListIcon mit mehreren Spalten 
  Inhalte hinzufügen möchten, verwenden Sie das Format "Erste Spalte"+Chr(10)+"Zweite Spalte"
  als Text$ Parameter. Siehe hierzu auch die Beispiele.
  
@Example
@Code
 If OpenWindow(0, 100, 100, 300, 100, "ListIcon Example", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
   ListIconGadget(0, 5, 5, 290, 90, "Name", 100, #PB_ListIcon_FullRowSelect | #PB_ListIcon_AlwaysShowSelection)
   AddGadgetColumn(0, 1, "Address", 250)
   AddGadgetItem(0, -1, "Harry Rannit"+Chr(10)+"12 Parliament Way, Battle Street, By the Bay")
   AddGadgetItem(0, -1, "Ginger Brokeit"+Chr(10)+"130 PureBasic Road, BigTown, CodeCity")
   Repeat
     Event = WaitWindowEvent()
   Until Event = #PB_Event_CloseWindow
 EndIf
@EndCode

@Example
@Code
  ; Zeigt mögliche Flags des ListIconGadgets in Aktion...
  If OpenWindow(0, 0, 0, 640, 300, "ListIconGadgets", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ; linke Spalte
    TextGadget    (6,  10,  10, 300, 20, "ListIcon Standard", #PB_Text_Center)
    ListIconGadget(0,  10,  25, 300, 70, "Column 1", 100)
    TextGadget    (7,  10, 105, 300, 20, "ListIcon with Checkbox", #PB_Text_Center)
    ListIconGadget(1,  10, 120, 300, 70, "Column 1", 100, #PB_ListIcon_CheckBoxes)  ; ListIcon mit Checkbox
    TextGadget    (8,  10, 200, 300, 20, "ListIcon with Multi-Selection", #PB_Text_Center)
    ListIconGadget(2,  10, 215, 300, 70, "Column 1", 100, #PB_ListIcon_MultiSelect) ; ListIcon mit Mehrfachselektion
    ; rechte Spalte
    TextGadget    (9, 330,  10, 300, 20, "ListIcon with separator lines",#PB_Text_Center)
    ListIconGadget(3, 330,  25, 300, 70, "Column 1", 100, #PB_ListIcon_GridLines)
    TextGadget   (10, 330, 105, 300, 20, "ListIcon with FullRowSelect and AlwaysShowSelection",#PB_Text_Center)
    ListIconGadget(4, 330, 120, 300, 70, "Column 1", 100, #PB_ListIcon_FullRowSelect | #PB_ListIcon_AlwaysShowSelection)
    TextGadget   (11, 330, 200, 300, 20, "ListIcon Standard with large icons",#PB_Text_Center)
    ListIconGadget(5, 330, 220, 300, 65, "", 200,#PB_ListIcon_GridLines)
    For a = 0 To 4            ; fügt Spalten zu jedem der ersten 5 ListIcons hinzu
      For b = 2 To 4          ; fügt 3 weitere Spalten zu jedem ListIcon hinzu
        AddGadgetColumn(a, b, "Column " + Str(b), 65)
      Next
      For b = 0 To 2          ; fügt 4 Einträge auf jeder Zeile der ListIcons hinzu
        AddGadgetItem(a, b, "Item 1"+Chr(10)+"Item 2"+Chr(10)+"Item 3"+Chr(10)+"Item 4")
      Next
    Next
    ; Hier ändern wir die Anzeige des ListIcons in große Icons und zeigen ein Bild an
    If LoadImage(0, #PB_Compiler_Home+"examples/sources/Data/File.bmp")     ; ändern Sie Pfad/Dateiname für Ihr eigenes 32x32 Pixel Bild
      SetGadgetAttribute(5, #PB_ListIcon_DisplayMode, #PB_ListIcon_LargeIcon)
      AddGadgetItem(5, 0, "Picture 1", ImageID(0))
      AddGadgetItem(5, 1, "Picture 2", ImageID(0))
    EndIf  
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@Image listicongadget.png

@SeeAlso
  @@AddGadgetColumn, @@RemoveGadgetColumn, @@AddGadgetItem, @@RemoveGadgetItem, @@ClearGadgetItems, @@CountGadgetItems,
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute, @@GetGadgetItemText, @@SetGadgetItemText, @@SetGadgetItemImage, 
  @@GetGadgetItemState, @@SetGadgetItemState, @@GetGadgetItemData, @@SetGadgetItemData, @@GetGadgetItemAttribute, @@SetGadgetItemAttribute, 
  @@GetGadgetColor, @@SetGadgetColor, @@GetGadgetItemColor, @@SetGadgetItemColor, @@ExplorerListGadget, @@ListViewGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ListViewGadget(#Gadget, x, y, Breite, Höhe [, Flags])

@Description
  Erstellt ein ListView-Gadget (Auswahlliste) innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_ListView_Multiselect: ermöglicht die Auswähl mehrerer Einträge.
  @#PB_ListView_ClickSelect: ermöglicht die Auswähl mehrerer Einträge. Das Anklicken eines Eintrags markiert diesen
                                     bzw. entfernt die Auswahl. (auf OS X das gleiche Verhalten wie @#PB_ListView_Multiselect)
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Sobald ein ListView-Gadget erstellt wurde, ist dessen Listeninhalt leer.
@LineBreak
  Die folgenden Befehle können benutzt werden, um auf den Listeninhalt zuzugreifen:
@LineBreak
@LineBreak
  - @@AddGadgetItem: fügt einen Eintrag hinzu. Ein ListViewGadget() ist auf 65536 Einträge begrenzt.
@LineBreak
  - @@RemoveGadgetItem: entfernt einen Eintrag.
@LineBreak
  - @@ClearGadgetItems: entfernt alle Einträge.
@LineBreak
  - @@CountGadgetItems: ermittelt die Anzahl der aktuell im Gadget enthaltenen Einträge.
@LineBreak
@LineBreak
  - @@GetGadgetItemData: ermittelt den Wert, der mit dem Gadget-Eintrag gespeichert wurde.
@LineBreak
  - @@GetGadgetItemState: gibt einen Wert ungleich Null zurück, wenn der Eintrag ausgewählt ist, andernfalls Null.
@LineBreak
  - @@GetGadgetItemText: ermittelt den Inhalt des angegebenen Eintrags.
@LineBreak
  - @@GetGadgetState: ermittelt den Index vom ausgewählten Eintrag oder -1, wenn kein Eintrag selektiert ist.
@LineBreak
  - @@GetGadgetText ermittelt den Textinhalt vom ausgewählten Eintrag.
@LineBreak
  - @@SetGadgetItemData: speichert einen Wert mit dem angegebenen Eintrag.
@LineBreak
  - @@SetGadgetItemState: selektiert den angegebenen Eintrag oder entfernt die Auswahl.
@LineBreak
  - @@SetGadgetItemText: ändert den Text des angegebenen Eintrags.
@LineBreak
  - @@SetGadgetState: ändert den ausgewählten Eintrag. Wird -1 angegeben, dann wird die gesamte Auswahl entfernt (nichts ist mehr selektiert).
@LineBreak
  - @@SetGadgetText: wählt den Eintrag mit dem angegebenen Text aus (der Text muss exakt übereinstimmen).

@LineBreak
@LineBreak
  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
@EndFixedFont

  Das Auftreten der folgenden Ereignisse kann mittels @@EventType abgefragt werden:
@FixedFont  
  @#PB_EventType_LeftClick (wird auch ausgelöst, wenn sich die Auswahl ändert)
  @#PB_EventType_LeftDoubleClick
  @#PB_EventType_RightClick
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 140, "ListViewGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ListViewGadget(0, 10, 10, 250, 120)
    For a = 1 To 12
      AddGadgetItem (0, -1, "Item " + Str(a) + " of the Listview")   ; definieren des Listview-Inhalts
    Next
    SetGadgetState(0, 9)    ; wir setzen (beginnend bei 0) den zehnten Eintrag als aktiven
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image listviewgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@ClearGadgetItems, @@CountGadgetItems, @@GetGadgetState, @@SetGadgetState,
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetItemState, @@SetGadgetItemState, @@GetGadgetItemText, @@SetGadgetItemText,
  @@GetGadgetItemData, @@SetGadgetItemData, @@GetGadgetColor, @@SetGadgetColor, @@ListIconGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = MDIGadget(#Gadget, x, y, Breite, Höhe, UnterMenü, MenüEintrag [, Flags])

@Description
  Erstellt einen Klient-Bereich ("client area"), in welchem ChildWindow's (abgeleitete Fenster)
  dargestellt werden können. Diese ChildWindow's sind in diesem Bereich vollständig durch den
  Anwender bewegbar und größenveränderbar.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "UnterMenü"
  Der Menü-Index, zu dem die MDI-Fenstereinträge hinzugefügt werden sollen.
@LineBreak
@LineBreak
  Ein MDIGadget() ist immer an ein Fenster-Menü (siehe @@CreateMenu) geknüpft.
  Daher kann sich ein MDIGadget() nur auf einem Fenster befinden, welches ein Menü besitzt.
  Das Gadget gibt dem Anwender die Möglichkeit, die Childwindow's mittels einem der Untermenüs
  des Fensters auszuwählen. Beim 'UnterMenü' Parameter müssen Sie den Index des Untermenüs (erstellt
  mit @@MenuTitle) angeben, zu welchem diese Einträge hinzugefügt werden sollen (das erste
  Untermenü hat den Index 0). Das Gadget wird einen Trennbalken am Ende dieses Menüs hinzufügen,
  und anschließend einen Eintrag für jedes aktuell dargestellte Childwindow.

@Parameter "MenüEintrag"
  Der erste Menüeintrag-Index, welcher für die MDI-Fenster verwendet werden soll.
@LineBreak
@LineBreak
  Das Gadget benötigt einen Bereich von Menü-Eintrag-Bezeichnern (siehe den 'MenuID' Parameter
  von @@MenuItem), um diese Menüeinträge hinzufügen zu können. Im 'MenüEintrag' Parameter
  vom MDIGadget() müssen Sie die niedrigste Nummer angeben, welche das Gadget für diesen Zweck nutzen
  kann. Es wird die Werte oberhalb dieser Zahl nutzen, wenn neue ChildWindows hinzugefügt werden,
  daher müssen Sie mindestens so viele Nummern reservieren, wie Sie selbst Einträge hinzufügen wollen.
  Es ist empfehlenswert, eine größere Nummer als alle anderen Menü-Bezeichner Ihres Programms
  zu verwenden, um eine mögliche "Kollision" (mit anderen Menüeinträgen) zu vermeiden.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_MDI_AutoSize       : Das Gadget passt sich automatisch in der Größe an, um in das übergeordnete ("Parent")
                           Fenster zu passen.
                           Wenn Sie keine anderen Gadgets auf diesem Fenster haben, ist dies eine hilfreiche Option.
  @#PB_MDI_BorderLess     : Es wird keine Umrandung um den Klient-Bereich gezeichnet.
  @#PB_MDI_NoScrollBars   : Wenn der Anwender ein ChildWindow außerhalb des angezeigten Bereichs verschiebt, werden
                           keine Scrollbalken angezeigt.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Aufgrund der Verknüpfung mit dem Fenstermenü kann sich nur ein MDIGadget() auf einem Fenster
  befinden, natürlich können Sie auf Wunsch ein weiteres auf einem zweiten Fenster platzieren.
  Sie können dieses Gadget nur direkt auf einem Fenster platzieren, Sie können es NICHT in ein
  @@ContainerGadget, @@SplitterGadget oder @@PanelGadget einfügen.
@LineBreak
  Da der Sinn dieses Gadgets darin besteht, dynamisch Daten anzuzeigen, ist es empfehlenswert,
  das @#PB_Any Feature zu nutzen, um ein ChildWindow mit Gadgets zu füllen.
@LineBreak
@LineBreak
  Beim Verwenden von @@AddGadgetItem mit diesem Gadget wird dabei ein neues
  PB @LibraryLink "window" "Fenster" erstellt. Alle Befehle der Window-Bibliothek können zusammen mit
  diesem neuen Fenster verwendet werden (mit Ausnahme von @@StickyWindow).
  Natürlich sollte sich die für das neue Fenster gewählte Nummer nicht mit einem weiteren offenen
  Fenster überschneiden, andernfalls wird das andere Fenster geschlossen. 
  Das MDI-Gadget gibt keine Ereignisse zurück. Ereignisse, 
  welche die Child-Fenster betreffen, werden stattdessen als normale @Link "Window/WaitWindowEvent" "Fenster-Ereignisse"
  (@#PB_Event_SizeWindow, @#PB_Event_CloseWindow, ...) empfangen.
@LineBreak
@LineBreak

  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können zum Managen des Gadget-Inhalts verwendet werden:
@LineBreak
@LineBreak
  - @@CountGadgetItems : Gibt die Anzahl an ChildWindows zurück.
@LineBreak
  - @@AddGadgetItem : Fügt ein neues ChildWindow zum Gadget hinzu.
@LineBreak
  - @@ClearGadgetItems : Schließt alle ChildWindow's.
@LineBreak
  - @@GetGadgetState : Ermittelt das aktuell fokussierte Childwindow.
@LineBreak
  - @@SetGadgetState : Ändert das aktuell fokussierte Fenster oder ordnet die ChildWindow's. (siehe @@GetGadgetState für weitere Informationen.)
@LineBreak
  - @@SetGadgetAttribute: Mit den folgenden Attributen:
@FixedFont
  @#PB_MDI_Image     : Legt ein Hintergrundbild fest. Ein ImageID-Wert muss als Wert übergeben werden 
                      (siehe @@ImageID).
  @#PB_MDI_TileImage : Legt den "Tile"-Modus (Art der Aneinanderreihung des Bildes) fest. 0 zeichnet 
                      das Bild einfach nur einmal in der linken, oberen Ecke, 1 wiederholt das Bild um den 
                      gesamten Bereich auszufüllen.
@EndFixedFont

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor
  Befehle mit dem @#PB_Gadget_BackColor Typ zum Ändern der Hintergrundfarbe des MDI-Bereichs.

@Example
@Code
  #Main = 0
  #MDIChild = 1
  If OpenWindow(#Main, 0, 0, 400, 300, "MDIGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered | #PB_Window_SizeGadget | #PB_Window_MaximizeGadget)
    If CreateMenu(#Main, WindowID(#Main))
      MenuTitle("Menu index 0")
      MenuTitle("MDI windows menu")
        MenuItem(0, "self created item")
        MenuItem(1, "self created item")

      MDIGadget(0, 0, 0, 0, 0, 1, 2, #PB_MDI_AutoSize)
        AddGadgetItem(0, #MDIChild, "child window")
          ; add gadgets here...
      UseGadgetList(WindowID(#Main)) ; wir gehen zurück zur Gadgetliste des Hauptfensters
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@Image mdigadget.png

@SeeAlso
  @@AddGadgetItem, @@CloseWindow, @@CountGadgetItems, @@ClearGadgetItems, @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute,
  @@GetGadgetColor, @@SetGadgetColor, @LibraryLink "Window" "Window Bibliothek"

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function OpenGadgetList(#Gadget [, Eintrag])

@Description
  Verwendet das angegebene Gadget als Gadgetliste, um darauf dynamisch neue Gadgets
  hinzuzufügen.

@Parameter "#Gadget"
  Das Gadget, in welchem neue Gadgets erstellt werden sollen.

@OptionalParameter "Eintrag"
  Für das @@PanelGadget: Gibt das Panel (Schalttafel) an, zu welchem die Gadgets hinzugefügt werden sollen.
  Um dem @@PanelGadget dynamisch ein neues Panel hinzuzufügen, muss der Parameter 'Eintrag'
  dagegen weggelassen werden.

@NoReturnValue

@Remarks
  Die folgenden Gadgets werden von OpenGadgetList() unterstützt:
@LineBreak
@LineBreak
  - @@ContainerGadget
@LineBreak
  - @@PanelGadget    
@LineBreak
  - @@ScrollAreaGadget

@LineBreak
@LineBreak
  Sobald alle notwendigen Änderungen vorgenommen wurden, sollte 
  @@CloseGadgetList aufgerufen werden.

@SeeAlso
  @@CloseGadgetList, @@ContainerGadget, @@PanelGadget, @@ScrollAreaGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = OptionGadget(#Gadget, x, y, Breite, Höhe, Text$) 

@Description
  Erstellt ein Optionen-Gadget innerhalb der Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Text$"
  Der anzuzeigende Text.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Beim ersten Aufruf dieser Funktion wird eine Gruppe erstellt und alle folgenden Aufrufe von OptionGadget() 
  fügen dieser Gruppe ein Gadget hinzu. Um die Gruppe abzuschließen, rufen Sie
  einfach einen anderen Gadgettyp auf. Diese Art von Gadgets sind sehr nützlich,
  da zur gleichen Zeit immer nur ein Gadget der Gruppe selektiert sein kann.
@LineBreak
@LineBreak
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.

@Example
@Code
  If OpenWindow(0, 0, 0, 140, 110, "OptionGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    OptionGadget(0, 30, 20, 60, 20, "Option 1")
    OptionGadget(1, 30, 45, 60, 20, "Option 2")
    OptionGadget(2, 30, 70, 60, 20, "Option 3")
    SetGadgetState(1, 1)   ; wir setzen die zweite Option als aktiv
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image optiongadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetState, @@SetGadgetState, @@CheckBoxGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = PanelGadget(#Gadget, x, y, Breite, Höhe)

@Description
  Erstellt ein Panel-Gadget (auch: Schaltfläche, Schalttafel, Register, Karteikarte) innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können benutzt werden, um auf den Inhalt des PanelGadgets zuzugreifen:
@LineBreak
@LineBreak
  - @@AddGadgetItem: fügt eine Schaltfläche hinzu.
@LineBreak
  - @@RemoveGadgetItem: entfernt eine Schaltfläche.
@LineBreak
  - @@CountGadgetItems: ermittelt die Anzahl der Schaltflächen.
@LineBreak
  - @@ClearGadgetItems: entfernt alle Schaltflächen.
@LineBreak
  - @@GetGadgetItemText: ermittelt den Text der angegebenen Schaltfläche.
@LineBreak
  - @@SetGadgetItemText: ändert den Text der angegebenen Schaltfläche.
@LineBreak
  - @@SetGadgetItemImage: Ändert das aktuelle Bild des angegebenen Eintrags.  (nicht unterstützt auf OS X)
@LineBreak
  - @@GetGadgetItemData: ermittelt den Wert, der mit dem angegebenen Eintrag gespeichert wurde.
  @LineBreak
  - @@SetGadgetItemData: speichert einen Wert mit dem angegebenen Eintrag.
  @LineBreak
  - @@GadgetItemID: gibt das Betriebssystem-Handle des angegebenen Eintrags zurück (nur auf Windows, nützlich für API-Funktionen).
@LineBreak
@LineBreak
  - @@SetGadgetState: ändert den aktiven Panel (Schalttafel).
@LineBreak
  - @@GetGadgetState ermittelt den Index des aktuellen Panels.
@LineBreak
  - @@GetGadgetAttribute: mit einem der folgenden Attribute: (es muss mindestens ein Eintrag vorhanden sein, damit dies funktioniert)
    @LineBreak
    (nicht unterstützt auf Linux GTK)
@FixedFont
  @#PB_Panel_ItemWidth : Gibt die Breite des inneren Bereichs zurück, worin die Gadgets angezeigt werden.
  @#PB_Panel_ItemHeight: Gibt die Höhe des inneren Bereichs zurück, worin die Gadgets angezeigt werden.
  @#PB_Panel_TabHeight : Gibt die Höhe der "Reiter" (englisch "Panel-Tabs") am oberen Rand des Gadgets zurück.
@EndFixedFont

  Die folgenden Ereignisse werden mittels @@EventType unterstützt:
@FixedFont
  @#PB_EventType_Change: Das aktuell angezeigte Panel hat sich geändert.
  @#PB_EventType_Resize: Das Gadget wurde in der Größe verändert.
@EndFixedFont

  Sobald ein Panel erstellt wurde, ist seine Liste mit Schaltflächen (Registern...) leer. 
@LineBreak
  Sie müssen erst @@AddGadgetItem aufrufen, um eine Schalttafel hinzufügen, bevor Sie
  andere Gadgets innerhalb des Panel-Gadgets erstellen können. Die nächsten Gadgets werden dann
  automatisch auf dem neuen Eintrag (Register) des Panel-Gadgets erstellt.
  Dies ist sehr bequem. Wenn das Panel-Gadget mit allen benötigten Gadgets gefüllt wurde,
  muss @@CloseGadgetList aufgerufen werden, um zur vorhergehenden Gadgetliste
  zurückzukehren. Dies bedeutet, dass ein Panel-Gadget auch auf einem anderen
  Panel-Gadget erstellt werden kann...

@Example
@Code
  ; Zeigt die Verwendung mehrerer Panels...
  If OpenWindow(0, 0, 0, 322, 220, "PanelGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    PanelGadget     (0, 8, 8, 306, 203)
      AddGadgetItem (0, -1, "Panel 1")
        PanelGadget (1, 5, 5, 290, 166)
          AddGadgetItem(1, -1, "Sub-Panel 1")
          AddGadgetItem(1, -1, "Sub-Panel 2")
          AddGadgetItem(1, -1, "Sub-Panel 3")
        CloseGadgetList()
      AddGadgetItem (0, -1,"Panel 2")
        ButtonGadget(2, 10, 15, 80, 24,"Button 1")
        ButtonGadget(3, 95, 15, 80, 24,"Button 2")
    CloseGadgetList()
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image panelgadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@CountGadgetItems, @@ClearGadgetItems, @@GetGadgetItemText, @@SetGadgetItemText,
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@CloseGadgetList, @@OpenGadgetList, @@SetGadgetItemImage

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ProgressBarGadget(#Gadget, x, y, Breite, Höhe, Minimum, Maximum [, Flags]) 

@Description
  Erstellt ein ProgressBar-Gadget (auch: "Fortschrittsanzeige") innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Minimum, Maximum"
  Die Minimum- und Maximum-Werte, welche die Fortschrittsanzeige annehmen kann.
  Die Werte müssen zwischen 0 und 65536 liegen, damit sie auf allen OS funktionieren.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_ProgressBar_Smooth   : Die Fortschrittsanzeige erfolgt stufenlos anstelle der Benutzung von Blöcken.
                             (Hinweis: Auf Windows XP mit eingeschalteten Skins und auf OS X hat dieses Flag keinen Effekt.)
  @#PB_ProgressBar_Vertical : Die Fortschrittsanzeige erfolgt im vertikalen Modus.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können zum Zugriff auf das Gadget verwendet werden:
@LineBreak
@LineBreak
  - @@SetGadgetState: ändert den Wert der Fortschrittsanzeige. Ein Wert von @#PB_ProgressBar_Unknown
    kann verwendet werden, um anzuzeigen, dass der Fortschritt nicht bekannt ist.
@LineBreak
  - @@GetGadgetState: ermittelt den aktuellen Wert der Fortschrittsanzeige.
@LineBreak
  - @@SetGadgetAttribute: mit den folgenden Attributen:
@FixedFont
  @#PB_ProgressBar_Minimum   : ändert den Minimum-Wert.
  @#PB_ProgressBar_Maximum   : ändert den Maximum-Wert.
@EndFixedFont

  - @@GetGadgetAttribute: mit den folgenden Attributen:
@FixedFont
  @#PB_ProgressBar_Minimum   : gibt den Minimum-Wert zurück.
  @#PB_ProgressBar_Maximum   : gibt den Maximum-Wert zurück.
@EndFixedFont

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp': 
@LineBreak
  (Hinweis: Nur auf Windows unterstützt. Auf Windows XP mit eingeschalteten Skins hat diese Färbung keinen Effekt.)
@FixedFont
  @#PB_Gadget_FrontColor: Farbe des Fortschrittsbalkens
  @#PB_Gadget_BackColor : Hintergrundfarbe
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 320, 160, "ProgressBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget       (3,  10, 10, 250,  20, "ProgressBar Standard  (50/100)", #PB_Text_Center)
    ProgressBarGadget(0,  10, 30, 250,  30, 0, 100)
    SetGadgetState   (0, 50)   ;  wir setzen die erste ProgressBar (ID = 0) auf 50 von 100
    TextGadget       (4,  10, 70, 250,  20, "ProgressBar Smooth  (50/200)", #PB_Text_Center)
    ProgressBarGadget(1,  10, 90, 250,  30, 0, 200, #PB_ProgressBar_Smooth)
    SetGadgetState   (1, 50)   ;  wir setzen die zweite ProgressBar (ID = 1) auf 50 von 200
    TextGadget       (5, 100,135, 200,  20, "ProgressBar Vertical  (100/300)", #PB_Text_Right)
    ProgressBarGadget(2, 270, 10,  30, 120, 0, 300, #PB_ProgressBar_Vertical)
    SetGadgetState   (2, 100)   ; wir setzen die dritte ProgressBar (ID = 2) auf 100 von 300
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image progressbargadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute, @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function RemoveGadgetColumn(#Gadget, Spalte)

@Description
  Entfernt eine Spalte vom angegebenen Gadget.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Spalte"
  Die zu entfernende Spalte (die erste Spalte hat den Index 0).
  @#PB_All kann verwendet werden, um alle Spalten zu entfernen.

@NoReturnValue

@Remarks
  Der Gadget-Typ kann einer der folgenden sein:
@LineBreak
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@ExplorerListGadget

@Example
@Code
  If OpenWindow(0, 0, 0, 320, 160, "RemoveGadgetColumn", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)

    ListIconGadget(0, 10, 10, 300, 140, "Hello", 100)
      AddGadgetColumn(0, 1, "Spalte 2", 70)
      AddGadgetColumn(0, 2, "Spalte 3", 70)

    RemoveGadgetColumn(0, 1) ; entfernt die 'Spalte 2'

    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@AddGadgetColumn, @@ListIconGadget, @@ExplorerListGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function RemoveGadgetItem(#Gadget, Position)

@Description
  Entfernt einen Eintrag vom angegebenen Gadget.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Position"
  Der zu entfernende Eintrag. Der erste Eintrag hat den Index 0.

@NoReturnValue

@Remarks
  Der Gadgettyp kann einer der folgenden sein:
@LineBreak
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@MDIGadget
@LineBreak
  - @@TreeGadget - wenn der zu entfernende Eintrag ein Knoten ist, werden alle Untereinträge (Childs) ebenso entfernt.

@SeeAlso
  @@AddGadgetItem, @@ClearGadgetItems, @@CountGadgetItems

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ResizeGadget(#Gadget, x, y, Breite, Höhe)

@Description
  Ändert das angegebene Gadget auf die angegebene Position und Dimensionen.

@Parameter "#Gadget"
  Das zu verändernde Gadget.

@Parameter "x, y, Breite, Höhe"
  Die neue Position und die neuen Abmessungen des Gadgets. Um das Erstellen eines in Echtzeit
  größenveränderbaren ("realtime resizeable") Graphical User Interface (GUI) zu vereinfachen, kann
  als Parameter (x, y, Breite oder Höhe) jeweils @#PB_Ignore übergeben werden und dieser
  Parameter wird dann nicht verändert.

@NoReturnValue

@Example Gadgetgröße an veränderte Fenstergröße anpassen
@Code
  Procedure SizeHandler()
    ResizeGadget(0, #PB_Ignore, #PB_Ignore, WindowWidth(0) - 20, WindowHeight(0) - 60) 
    ResizeGadget(1, #PB_Ignore, WindowHeight(0) - 40, WindowWidth(0) - 20, #PB_Ignore) 
  EndProcedure
  
  If OpenWindow(0, 0, 0, 220, 100, "Resize the window", #PB_Window_SystemMenu | #PB_Window_ScreenCentered | #PB_Window_SizeGadget)
    WindowBounds(0, WindowWidth(0), WindowHeight(0), #PB_Ignore, #PB_Ignore)
  
    EditorGadget(0, 10, 10, WindowWidth(0) - 20, WindowHeight(0) - 60)
    ButtonGadget(1, 10, WindowHeight(0) - 40, WindowWidth(0) - 20, 30, "Button")
    
    ; Verwende BindEvent(), um eine Echtzeit-Größenänderung der Gadgets zu erhalten
    BindEvent(#PB_Event_SizeWindow, @SizeHandler())
    
    Repeat
      Select WaitWindowEvent()
        Case #PB_Event_CloseWindow
          End
      EndSelect
    ForEver
  EndIf
@EndCode
  
@SeeAlso
  @@GadgetX, @@GadgetY, @@GadgetWidth, @@GadgetHeight, @@ResizeWindow, @@BindEvent

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ScrollBarGadget(#Gadget, x, y, Breite, Höhe, Minimum, Maximum, SeitenLänge [, Flags]) 

@Description
  Erstellt ein ScrollBar-Gadget (auch Scroll- oder Schiebebalken) innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Minimum, Maximum"
  Die Minimum- und Maximum-Werte, welche der Schiebebalken annehmen kann.
  Diese Werte müssen zwischen 0 und 10.000 liegen, um Einschränkungen auf manchen
  Betriebssystemen zu vermeiden.

@Parameter "SeitenLänge"
  Der Bereich, welcher Bestandteil der aktuell angezeigten "Seite" ist.
@LineBreak
@LineBreak
  Zum Beispiel: Sie haben ein Bild mit einer Breite von 100 Pixel
  und Sie sehen nur 25 Pixel. Was Sie sehen, wird eine 'Seite' genannt - in diesem
  Beispiel ist die Seitenlänge 25, der Minimum-Wert beträgt 0 und der Maximum-Wert 100.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens.
  Dies kann die folgende Konstante sein:
@FixedFont
  @#PB_ScrollBar_Vertical : Der Schiebebalken ist vertikal (anstelle von horizontal, was der Standard ist).
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können zum Verwalten dieses Gadgets verwendet werden:
@LineBreak
@LineBreak
  - @@GetGadgetState: Gibt die aktuelle Position des Schiebebalkens zurück (der Wert liegt innerhalb der 'Minimum' und 'Maximum - Seitenlänge + 1' Spanne).
@LineBreak
  - @@SetGadgetState: Ändert die aktuelle Schiebebalken-Position.
@LineBreak
  - @@GetGadgetAttribute: Mit einem der folgenden Attribute:
@FixedFont
  @#PB_ScrollBar_Minimum   : gibt die minimale Schiebebalken-Position zurück.
  @#PB_ScrollBar_Maximum   : gibt die maximale Schiebebalken-Position zurück.
  @#PB_ScrollBar_PageLength: gibt den Wert der Seitenlänge zurück.
@EndFixedFont

  - @@SetGadgetAttribute: Mit einem der folgenden Attribute:
@FixedFont
  @#PB_ScrollBar_Minimum   : ändert die minimale Schiebebalken-Position.
  @#PB_ScrollBar_Maximum   : ändert die maximale Schiebebalken-Position.
  @#PB_ScrollBar_PageLength: ändert den Wert der Seitenlänge.
@EndFixedFont

  Ein Ereignis wird ausgelöst, wenn es verwendet wird. Siehe Beispiele unten.

@Example
@Code
  If OpenWindow(0, 0, 0, 305, 140, "ScrollBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget       (2,  10, 25, 250,  20, "ScrollBar Standard  (start=50, page=30/100)",#PB_Text_Center)
    ScrollBarGadget  (0,  10, 42, 250,  20, 0, 100, 30)
    SetGadgetState   (0,  50)   ; wir setzen den ersten Schiebebalken (ID = 0) auf 50 von 100
    TextGadget       (3,  10,115, 250,  20, "ScrollBar Vertical  (start=100, page=50/300)",#PB_Text_Right)
    ScrollBarGadget  (1, 270, 10,  25, 120 ,0, 300, 50, #PB_ScrollBar_Vertical)
    SetGadgetState   (1, 100)   ; wir setzen den zweiten Schiebebalken (ID = 1) auf 100 von 300
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image scrollbargadget.png

@Example ScrollBar-Ereignisse
@Code
  Procedure BindHScrollDatas()
    SetWindowTitle(0, "ScrollBarGadget (" + GetGadgetState(0) + ")" )
  EndProcedure

  Procedure BindVScrollDatas()
    SetWindowTitle(0, "ScrollBarGadget (" + GetGadgetState(1) + ")" )
  EndProcedure


  If OpenWindow(0, 0, 0, 400, 400, "ScrollBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    TextGadget       (2,  10, 25, 350,  30, "ScrollBar Standard  (Start = 50, Seite = 30/100)")
    ScrollBarGadget  (0,  10, 50, 350,  20, 0, 100, 30)
    SetGadgetState   (0,  50)   ; setze den ersten Scrollbalken (ID = 0) auf 50 von 100
    TextGadget       (3,  10, 120, 350,  30, "ScrollBar vertical  (Start = 100, Seite = 50/300)")
    ScrollBarGadget  (1, 175, 160,  25, 120 ,0, 300, 50, #PB_ScrollBar_Vertical)
    SetGadgetState   (1, 100)   ; setze den zweiten Scrollbalken (ID = 1) auf 100 von 300
  
    BindGadgetEvent(0, @ BindHScrollDatas())
    BindGadgetEvent(1, @ BindVScrollDatas())
  
    Repeat 
      Select WaitWindowEvent() 
        Case  #PB_Event_CloseWindow 
          End 
        Case  #PB_Event_Gadget 
          Select EventGadget()
            Case 0
              MessageRequester("Info","Der Scrollbalken 0 wurde verwendet ! (" + GetGadgetState(0) +
                                      ")" ,#PB_MessageRequester_Ok)
            Case 1
              MessageRequester("Info","Der Scrollbalken 1 wurde verwendet ! (" + GetGadgetState(1) +
                                    ")" ,#PB_MessageRequester_Ok) 
            
          EndSelect 
      EndSelect
    ForEver 
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute, @@ScrollAreaGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ScrollAreaGadget(#Gadget, x, y, Breite, Höhe, ScrollBereichBreite, ScrollBereichHöhe [, ScrollSchritt [, Flags]]) 

@Description
  Erstellt ein ScrollArea-Gadget (Scroll-Bereich) innerhalb der aktuellen Gadgetliste.
  Es handelt sich dabei um einen Container für andere Gadgets (die ggf. auch zu groß sind,
  um in die Fenster-Dimensionen zu passen) mit einem scrollbaren Bereich.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "ScrollBereichBreite, ScrollBereichHöhe"
  Die Dimension des scrollbaren Bereichs innerhalb des Gadgets. Diese Werte
  können auch kleiner als die äußeren Dimensionen sein, in diesem Fall wird das Scrollen
  deaktiviert. (Nur auf MS Windows: diese Parameter sind begrenzt auf 32.000 Pixel.)

@OptionalParameter "ScrollSchritt"
  Die Anzahl an Pixel, um die beim Drücken der Schieberegler-Pfeile gescrollt wird.
  Dieses Parameter hat nur unter Windows einen Effekt.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_ScrollArea_Flat       : Flacher Rahmen 
  @#PB_ScrollArea_Raised     : Erhabener Rahmen 
  @#PB_ScrollArea_Single     : Einfach vertiefter Rahmen 
  @#PB_ScrollArea_BorderLess : Ohne jeden Rahmen
  @#PB_ScrollArea_Center     : Wenn die innere Größe kleiner als die äußere ist, 
                                     dann wird der innere Bereich automatisch zentriert.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Sobald dieses Gadget erstellt wurde,
  werden alle nachfolgenden Gadgets innerhalb des ScrollArea-Bereiches erstellt. Sobald alle
  benötigten Gadgets erstellt wurden, muss @@CloseGadgetList aufgerufen werden, um
  zur vorherigen Gadgetliste zurückzukehren. @@OpenGadgetList kann später verwendet
  werden, um weitere Gadgets während des Programmablaufs ("on-the-fly") zum Scroll-Bereich
  hinzuzufügen.
@LineBreak
@LineBreak
  Die folgenden Befehle können benutzt werden, um auf das ScrollAreaGadget zuzugreifen:
@LineBreak
@LineBreak
  @@GetGadgetAttribute: mit einem der folgenden Attribute:
@FixedFont
  @#PB_ScrollArea_InnerWidth  : gibt die Breite (in Pixel) des enthaltenen scrollbaren Bereichs zurück.
  @#PB_ScrollArea_InnerHeight : gibt die Höhe (in Pixel) des enthaltenen scrollbaren Bereichs zurück.
  @#PB_ScrollArea_X           : gibt die aktuelle horizontale Scroll-Position (in Pixel) zurück.
  @#PB_ScrollArea_Y           : gibt die aktuelle vertikale Scroll-Position (in Pixel) zurück.
  @#PB_ScrollArea_ScrollStep  : gibt den aktuellen Scrollschritt-Wert (in Pixel) zurück.
@EndFixedFont
  @@SetGadgetAttribute: mit einem der folgenden Attribute:
@FixedFont
  @#PB_ScrollArea_InnerWidth  : ändert die Breite (in Pixel) des enthaltenen scrollbaren Bereichs.
  @#PB_ScrollArea_InnerHeight : ändert die Höhe (in Pixel) des enthaltenen scrollbaren Bereichs.
  @#PB_ScrollArea_X           : ändert die aktuelle horizontale Scroll-Position (in Pixel).
  @#PB_ScrollArea_Y           : ändert die aktuelle vertikale Scroll-Position (in Pixel).
  @#PB_ScrollArea_ScrollStep  : ändert den aktuellen Scrollschritt-Wert (in Pixel).
@EndFixedFont
@LineBreak
@LineBreak
  Das folgende Ereignis wird mittels @@EventType unterstützt:
@FixedFont
  @#PB_EventType_Resize: Das Gadget wurde in der Größe verändert.
@EndFixedFont

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit dem @#PB_Gadget_BackColor Typ zum Ändern der Hintergrundfarbe.
@LineBreak
@LineBreak
  Ein Ereignis wird ausgelöst, wenn es verwendet wird. Siehe Beispiel unten.
   
@Example
@Code
  Procedure BindScrollDatas()
    SetWindowTitle(0, "ScrollAreaGadget " +
                      "(" +
                      GetGadgetAttribute(0, #PB_ScrollArea_X) +
                      "," +                      
                      GetGadgetAttribute(0, #PB_ScrollArea_Y) +
                      ")" )
  EndProcedure
  
  If OpenWindow(0, 0, 0, 405, 240, "ScrollAreaGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ScrollAreaGadget(0, 10, 10, 390,220, 575, 555, 30)
      ButtonGadget  (1, 10, 10, 230, 30,"Button 1")
      ButtonGadget  (2, 50, 50, 230, 30,"Button 2")
      ButtonGadget  (3, 90, 90, 230, 30,"Button 3")
      TextGadget    (4,130,130, 230, 20,"This is the content of a ScrollAreaGadget!",#PB_Text_Right)
      CloseGadgetList()
  
    BindGadgetEvent(0, @ BindScrollDatas())
  
    Repeat
      Select WaitWindowEvent()
        Case  #PB_Event_CloseWindow
          End
        Case  #PB_Event_Gadget
          Select EventGadget()
            Case 0
              MessageRequester("Info","Ein Scrollbalken wurde verwendet! (" +
                                      GetGadgetAttribute(0, #PB_ScrollArea_X) +
                                      "," +                      
                                      GetGadgetAttribute(0, #PB_ScrollArea_Y) +
                                      ")" ,#PB_MessageRequester_Ok)
            Case 1
              MessageRequester("Info","Button 1 was pressed!",#PB_MessageRequester_Ok)
            Case 2
              MessageRequester("Info","Button 2 was pressed!",#PB_MessageRequester_Ok)
            Case 3
              MessageRequester("Info","Button 3 was pressed!",#PB_MessageRequester_Ok)
          EndSelect
      EndSelect
    ForEver
  EndIf
@EndCode
@LineBreak
@Image scrollareagadget.png

@SeeAlso
  @@GetGadgetAttribute, @@SetGadgetAttribute, @@ScrollBarGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetActiveGadget(#Gadget)

@Description
  Aktiviert das Gadget (setzt den Fokus darauf), welches durch die angegebene Gadgetnummer
  definiert wird. Das Aktivieren eines Gadgets ermöglicht diesem, zum aktuellen Objekt - 
  welches Nachrichten empfängt und Tastatur-Eingaben einliest - zu werden.

@Parameter "#Gadget"
  Das zu aktivierende Gadget. Kann auf '-1' gesetzt werden, um den Tastatur-Fokus vom
  derzeit aktiven Fenster zu entfernen.

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 140, "SetActiveGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget  (0, 10, 10, 250, 20, "bla bla...")
    ComboBoxGadget(1, 10, 40, 250, 21)
    For a = 1 To 5 : AddGadgetItem(1, -1, "ComboBox item " + Str(a)) : Next
    SetGadgetState(1, 2)                ; wir machen den dritten Eintrag (beginnend bei 0) zum aktiven
    ButtonGadget  (2, 10, 90, 250, 20, "Activate StringGadget")
    ButtonGadget  (3, 10, 115, 250, 20, "Activate ComboBox")
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        Select EventGadget()
          Case 2 : SetActiveGadget(0)   ; Aktiviere das StringGadget
          Case 3 : SetActiveGadget(1)   ; Aktiviere das ComboBoxGadget
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@GetActiveGadget, @@SetActiveWindow

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetAttribute(#Gadget, Attribut, Wert)

@Description
  Ändert einen Attribut-Wert des angegebenen Gadgets.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Attribut"
  Das zu setzende Attribut.
  Siehe die Dokumentation eines jeden Gadgets für die unterstützten Attribute und
  ihre Bedeutung.

@Parameter "Wert"
  Der für das Attribut zu setzende Wert.

@NoReturnValue

@Remarks
  Diese Funktion ist für alle Gadgets verfügbar, die Attribute unterstützen:
@LineBreak
@LineBreak
  - @@ButtonImageGadget @LineBreak
  - @@CalendarGadget @LineBreak
  - @@CanvasGadget @LineBreak
  - @@DateGadget @LineBreak
  - @@EditorGadget @LineBreak
  - @@ExplorerListGadget @LineBreak
  - @@ListIconGadget @LineBreak
  - @@MDIGadget @LineBreak
  - @@OpenGLGadget @LineBreak
  - @@ProgressBarGadget @LineBreak
  - @@ScrollAreaGadget @LineBreak
  - @@ScrollBarGadget @LineBreak
  - @@SpinGadget @LineBreak
  - @@SplitterGadget @LineBreak
  - @@StringGadget @LineBreak
  - @@TrackBarGadget @LineBreak
  - @@WebGadget

@SeeAlso
  @@GetGadgetAttribute, @@GetGadgetItemAttribute, @@SetGadgetItemAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetColor(#Gadget, FarbTyp, Farbe)

@Description
  Ändert ein Farb-Attribut des angegebenen Gadgets.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "FarbTyp"
  Die Art des zu ändernden Farb-Attributs. Dies kann einer der folgenden Werte sein.
  Siehe die Dokumentation eines jeden Gadgets für die unterstützten Farb-Attribute:
@FixedFont
  @#PB_Gadget_FrontColor     : Textfarbe des Gadget
  @#PB_Gadget_BackColor      : Hintergrundfarbe des Gadget
  @#PB_Gadget_LineColor      : Farbe für Gitterlinien
  @#PB_Gadget_TitleFrontColor: Textfarbe im Titel         (für @@CalendarGadget)
  @#PB_Gadget_TitleBackColor : Hintergrundfarbe im Titel  (für @@CalendarGadget)
  @#PB_Gadget_GrayTextColor  : Farbe für "ergrauten" Text (bei @@CalendarGadget)
@EndFixedFont

@Parameter "Farbe"
  Die neue Farbe für das Attribut.
  @@RGB kann verwendet werden, um einen gültigen Farbwert zu erhalten.
  Zum Entfernen der eingestellten Farbe und Zurücksetzen auf die standardmäßige Systemfarbe 
  setzen Sie den Parameter 'Farbe' auf @#PB_Default.

@NoReturnValue

@Remarks
  Dieser Befehl wird von den folgenden Gadgets unterstützt:
@LineBreak
@LineBreak
  - @@CalendarGadget
@LineBreak
  - @@ContainerGadget
@LineBreak
  - @@DateGadget
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@ExplorerListGadget
@LineBreak
  - @@ExplorerTreeGadget
@LineBreak
  - @@HyperLinkGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@MDIGadget
@LineBreak
  - @@ProgressBarGadget (nur auf Windows)
@LineBreak
  - @@ScrollAreaGadget
@LineBreak
  - @@SpinGadget
@LineBreak
  - @@StringGadget
@LineBreak
  - @@TextGadget
@LineBreak
  - @@TreeGadget

@OS Windows
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Mit aktiviertem Windows XP Style werden die Farbeinstellungen möglicherweise ignoriert
  oder vom Style überschrieben.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Diese Optionen sind für Gtk nicht implementiert - daher funktioniert die Einfärbung
  auf Linux nur, wenn sie von der Distribution, dem Window-Manager und dem Theme unterstützt wird.
@EndOS

@Example
@Code
  If OpenWindow(0, 0, 0, 200, 170, "SetGadgetColor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget(0, 10, 10, 180, 20, "String...")
    ListViewGadget(1, 10, 40, 180, 60)
    For i = 0 To 4
      AddGadgetItem(1, -1, "Text")
    Next i
    ContainerGadget(2, 10, 110, 180, 50, #PB_Container_Raised)

    SetGadgetColor(0, #PB_Gadget_BackColor, $00FFFF)
    SetGadgetColor(1, #PB_Gadget_FrontColor, $FFFFFF)
    SetGadgetColor(1, #PB_Gadget_BackColor, $000000)
    SetGadgetColor(2, #PB_Gadget_BackColor, $0000FF)

    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image setgadgetcolor.png

@SeeAlso
  @@GetGadgetColor, @@GetGadgetItemColor, @@SetGadgetItemColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetData(#Gadget, Wert)

@Description
  Speichert den angegebenen Wert mit dem angegebenen Gadget. Dieser Wert kann später mit @@GetGadgetData
  wieder ausgelesen werden. Dies ermöglicht das Zuweisen eines individuell vergebenen Wertes zu jedem Gadget.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Wert"
  Der zuzuweisende Wert.

@NoReturnValue

@Example
@Code
  ; Dieser Code verwendet SetGadgetData zum Verknüpfen eines Indexes für das Messages()
  ; Array mit jedem Schalter. Dies macht eine Ereignisschleife einfacher, da nicht 
  ; jedes Gadget separat behandelt werden muss.
  ;
  Dim Messages.s(2)
  Messages(0) = "Good morning"
  Messages(1) = "Hello World"
  Messages(2) = "Nothing to say"
  If OpenWindow(0, 0, 0, 190, 100, "SetGadgetData", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0,  10, 10, 80, 20, "Button"): SetGadgetData(0, 1)
    ButtonGadget(1,  10, 40, 80, 20, "Button"): SetGadgetData(1, 2)
    ButtonGadget(2,  10, 70, 80, 20, "Button"): SetGadgetData(2, 1)
    ButtonGadget(3, 100, 10, 80, 20, "Button"): SetGadgetData(3, 2)
    ButtonGadget(4, 100, 40, 80, 20, "Button") ; wird den Wert 0 haben, da noch nichts festgelegt wurde
    ButtonGadget(5, 100, 70, 80, 20, "Button")  
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        Value = GetGadgetData(EventGadget())
        MessageRequester("Message", Messages(Value))
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetData, @@GetGadgetItemData, @@SetGadgetItemData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetFont(#Gadget, FontID) 

@Description
  Ändert den Zeichensatz (englisch "Font") für das angegebene Gadget.

@Parameter "#Gadget"
  Das zu verwendende Gadget.
  Wenn dieser Parameter auf @#PB_Default gesetzt wird, dann wird der
  Zeichensatz für alle neu erzeugten Gadgets geändert.

@Parameter "FontID"
  Der festzulegende Zeichensatz (Font).
  Die Funktion @@FontID kann verwendet werden, um einfach eine
  gültige FontID zu erhalten. Wird für diesen Parameter @#PB_Default
  angegeben, dann wird der Standard-Zeichensatz des Systems verwendet.

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 0, 0, 222, 130, "SetGadgetFont", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    If LoadFont(0, "Arial", 16)
      SetGadgetFont(#PB_Default, FontID(0))   ; geladenen Arial 16 Zeichensatz als neuen Standard festlegen
    EndIf
    ButtonGadget(0, 10, 10, 200, 30, "Button - Arial 16")
    SetGadgetFont(#PB_Default, #PB_Default)   ; Zeichensatzeinstellungen auf den originalen Standard zurücksetzen
    ButtonGadget(1, 10, 50, 200, 30, "Button - standard")
    If LoadFont(1,"Courier",10, #PB_Font_Bold | #PB_Font_Underline)
      SetGadgetFont(#PB_Default, FontID(1))   ; geladenen Courier 10 Zeichensatz als neuen Standard festlegen
    EndIf
    TextGadget(2, 10, 90, 200, 40, "Bold + underlined Courier 10 Text", #PB_Text_Center)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image setgadgetfont.png

@SeeAlso
  @@GetGadgetFont, @@FontID, @@LoadFont

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemAttribute(#Gadget, Eintrag, Attribut, Wert [, Spalte])

@Description
  Ändert den Attribut-Wert des angegebenen Gadget-Eintrags. 

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der zu verwendende Eintrag. Der erste Eintrag im Gadget hat den Index 0. 

@Parameter "Attribut"
  Das zu setzende Attribut. Siehe unten für die unterstützten Werte.

@Parameter "Wert"
  Der für das Attribut zu setzende Wert.

@OptionalParameter "Spalte"
  Die zu verwendende Spalte (bei Gadgets, welche mehrere Spalten unterstützen).
  Die erste Spalte hat den Index 0. Der Standard ist Spalte 0.

@Remarks
  Diese Funktion ist für alle Gadgets verfügbar, die Eintrags-Attribute unterstützen:
@LineBreak
@LineBreak
  - @@ExplorerListGadget:
@FixedFont
  @#PB_Explorer_ColumnWidth : Ändert die Breite der angegebenen 'Spalte'. Der Parameter 'Eintrag' wird ignoriert.
@EndFixedFont

  - @@ListIconGadget:
@FixedFont
  @#PB_ListIcon_ColumnWidth : Ändert die Breite der angegebenen 'Spalte'. Der Parameter 'Eintrag' wird ignoriert.
@EndFixedFont

@SeeAlso
  @@GetGadgetItemAttribute, @@GetGadgetAttribute, @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemColor(#Gadget, Eintrag, FarbTyp, Farbe [, Spalte])

@Description
  Ändert ein Farb-Attribut des angegebenen Gadget-Eintrags.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der zu verwendende Eintrag. Der erste Eintrag im Gadget hat den Index 0. 
  Wenn dieser Parameter auf @#PB_All gesetzt wird, dann wird die Farbe allen Gadget-Einträgen in der
  angegebenen 'Spalte' zugewiesen.

@Parameter "FarbTyp"
  Die Art des zu ändernden Farb-Attributs. Dies kann einer der folgenden Werte sein:
@FixedFont
  @#PB_Gadget_FrontColor     : Textfarbe
  @#PB_Gadget_BackColor      : Hintergrundfarbe
@EndFixedFont

@Parameter "Farbe"
  Die neue Farbe für das Attribut.
  @@RGB kann verwendet werden, um einen gültigen Farbwert zu erhalten.
  Wenn für einen bestimmten FarbTyp des Gadget-Eintrags keine Farbe festgelegt wurde,
  dann wird dieser Eintrag in der für das gesamte Gadget festgelegten Farbe dargestellt.
  Zum Entfernen der eingestellten Farbe und Zurücksetzen auf die standardmäßige Systemfarbe 
  setzen Sie den Parameter 'Farbe' auf @#PB_Default.

@OptionalParameter "Spalte"
  Die zu verwendende Spalte (bei Gadgets, welche mehrere Spalten unterstützen).
  Die erste Spalte hat den Index 0. Der Standard ist Spalte 0.
  Wenn dieser Parameter auf @#PB_All gesetzt wird, dann wird die Farbe allen Spalten des angegebenen
  Eintrags zugewiesen.

@NoReturnValue

@Remarks
  Dieser Befehl wird von den folgenden Gadgets unterstützt:
@LineBreak
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@TreeGadget

@OS MacOS
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" SetGadgetItemColor() wird auf MacOS X bei diesen zwei Gadgets nicht unterstützt.
@EndOS

@OS Windows
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Mit aktiviertem Windows XP Style werden die Farbeinstellungen möglicherweise ignoriert
  oder vom Style überschrieben.
@EndOS

@OS Linux
  @LineBreak
  @LineBreak
  @Bold "Hinweis:" Diese Optionen sind für Gtk nicht implementiert - daher funktioniert die Einfärbung
  auf Linux nur, wenn sie von der Distribution, dem Window-Manager und dem Theme unterstützt wird.
@EndOS

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 300, "SetGadgetItemColor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ListIconGadget(0, 10, 10, 280, 280, "Column 0", 100)
    AddGadgetColumn(0, 1, "Column 1", 100)
    For i = 1 To 10
      AddGadgetItem(0, -1, "Text 1"+Chr(10)+"Text 2")
    Next

    SetGadgetItemColor(0, #PB_All, #PB_Gadget_FrontColor, $0000FF,  1)
    SetGadgetItemColor(0,  3, #PB_Gadget_BackColor,  $00FFFF, #PB_All)
    SetGadgetItemColor(0,  9, #PB_Gadget_BackColor,  $FFFF00,  1)
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image setgadgetitemcolor.png

@SeeAlso
  @@GetGadgetItemColor, @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemData(#Gadget, Eintrag, Wert)

@Description
  Speichert den angegebenen Wert mit dem angegebenen Gadget-Eintrag.
  Dieser Wert kann später mit dem @@GetGadgetItemData Befehl ausgelesen werden.
  Dies ermöglicht das Verknüpfen eines individuellen Werts mit den Einträgen eines Gadgets. 

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der zu verwendende Eintrag. Der erste Eintrag im Gadget hat den Index 0. 

@Parameter "Wert"
  Der zu setzende Wert.

@NoReturnValue

@Remarks
  Der gesetzte Wert bleibt zusammen mit dem Eintrag bestehen, auch wenn sich der Index des
  Eintrags ändert (z.B. weil andere Einträge gelöscht wurden).
@LineBreak
@LineBreak
  Dieser Befehl arbeitet mit den folgenden Gadgets:
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@TreeGadget


@Example
@Code
  ; Dieser Code verwendet SetGadgetItemData zum Speichern der Original-Position jedes
  ; Eintrags, um diesen auch noch später zu wissen, wenn sich der Index des Eintrags ändert.
  ;
  If OpenWindow(0, 0, 0, 280, 250, "SetGadgetItemData", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0,  10, 10, 80, 20, "Add")
    ButtonGadget(1, 100, 10, 80, 20, "Remove")  
    ButtonGadget(2, 190, 10, 80, 20, "Test") 
    ListViewGadget(3, 10, 40, 260, 200)
    For i = 0 To 10
      AddGadgetItem(3, i, "Old Item "+Str(i))
      SetGadgetItemData(3, i, i)
    Next i
    
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        item = GetGadgetState(3)
        
        Select EventGadget()        
          Case 0 ; Add          
            AddGadgetItem(3, item, "New Item")
            If item <> -1
              SetGadgetItemData(3, item, -1)
            Else
              SetGadgetItemData(3, CountGadgetItems(3)-1, -1)
            EndIf
            
          Case 1 ; Remove
            If item <> -1
              RemoveGadgetItem(3, item)
            EndIf
            
          Case 2 ; Test
            If item <> -1
              value = GetGadgetItemData(3, item)
              If value = -1
                MessageRequester("", "Its a new item.")
              Else
                MessageRequester("", "It was item number "+Str(value))
              EndIf
            EndIf
                     
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetItemData, @@GetGadgetData, @@SetGadgetData

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemImage(#Gadget, Eintrag, ImageID)

@Description
  Ändert das Bild des angegebenen Gadget-Eintrags.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der Eintrag, von dem das Bild geändert werden soll. Der erste Eintrag im Gadget hat den Index 0.

@Parameter "ImageID"
  Das neue Bild, welches für den Gadget-Eintrag verwendet werden soll.
  Das verwendete Bild sollte in der Standard 16x16 Größe sein. Verwenden Sie den @@ImageID Befehl,
  um die ID für diesen Parameter zu ermitteln.
  
@NoReturnValue

@Remarks
  Dies ist eine universelle Funktion, welche mit den folgenden Gadgets arbeitet:
@LineBreak
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@ListIconGadget
@LineBreak
  - @@PanelGadget  (nicht unterstützt auf OS X)
@LineBreak
  - @@TreeGadget

@SeeAlso
  @@AddGadgetItem

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemState(#Gadget, Eintrag, Status)

@Description
  Ändert den Status des angegebenen Gadget-Eintrags.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der zu verwendende Eintrag. Der erste Eintrag im Gadget hat den Index 0. 

@Parameter "Status"
  Der neue Status des Eintrags. Siehe unten für die Bedeutung dieses Parameters.

@NoReturnValue

@Remarks
  Dies ist eine universelle Funktion, welche zusammen mit den meisten Gadgettypen,
  die mehrere Einträge verwalten, arbeitet.
@LineBreak
@LineBreak
 'Status' kann die folgenden Werte annehmen:
@LineBreak
  - @@ExplorerListGadget: mit dem folgenden Wert:
@FixedFont
  @#PB_Explorer_Selected : der Eintrag soll ausgewählt sein.
@EndFixedFont
  - @@ListViewGadget: 1, wenn der Eintrag ausgewählt sein soll, sonst 0.
@LineBreak
  - @@ListIconGadget: eine Kombination der folgenden Werte:
@FixedFont
  @#PB_ListIcon_Selected : der Eintrag soll ausgewählt sein.
  @#PB_ListIcon_Checked  : der Eintrag soll mit einem Häkchen versehen werden (nur mit @#PB_ListIcon_CheckBoxes Flag).
  @#PB_ListIcon_Inbetween: die Checkbox (Häkchen) des Eintrags soll den "Dazwischen"-Status annehmen (nur mit @#PB_ListIcon_ThreeState Flag).
@EndFixedFont
  - @@TreeGadget: eine Kombination der folgenden Werte:
@FixedFont
  @#PB_Tree_Selected  : der Eintrag soll ausgewählt sein.
  @#PB_Tree_Expanded  : der Eintrag soll ausgeklappt (ein Baum-Knoten geöffnet) sein. 
  @#PB_Tree_Collapsed : der Eintrag soll eingeklappt werden. Wenn weder @#PB_Tree_Expanded noch @#PB_Tree_Collapsed 
                      angegeben wird, wird dieser Status nicht verändert.
  @#PB_Tree_Checked   : die Häkchen-Box des Eintrags soll ein Häkchen erhalten.
  @#PB_Tree_Inbetween : die Häkchen-Box des Eintrags soll im "Dazwischen"-Status sein.
@EndFixedFont

@Code
  SetGadgetItemState(0, 1, #PB_Tree_Expanded | #PB_Tree_Selected) ; Der zweite Eintrag ist ausgewählt und aufgeklappt.
@EndCode

@SeeAlso
  @@GetGadgetItemState, @@GetGadgetState, @@SetGadgetState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetItemText(#Gadget, Eintrag, Text$ [, Spalte])

@Description
  Ändert den Text des angegebenen Gadget-Eintrags.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Eintrag"
  Der zu verwendende Eintrag. Der erste Eintrag im Gadget hat den Index 0. 

@Parameter "Text$"
  Der zu setzende neue Text.

@OptionalParameter "Spalte"
  Die zu verwendende Spalte (bei Gadgets, welche mehrere Spalten unterstützen).
  Die erste Spalte hat den Index 0. Der Standard ist Spalte 0.

@NoReturnValue

@Remarks
  Dies ist eine universelle Funktion, welche zusammen mit den meisten Gadgettypen,
  die mehrere Einträge verwalten, arbeitet:
@LineBreak
@LineBreak
  - @@ComboBoxGadget
@LineBreak
  - @@EditorGadget
@LineBreak
  - @@ExplorerListGadget: Wenn 'Eintrag' = -1, dann wird die Überschrift der angegebenen 'Spalte' geändert.
@LineBreak
  - @@ListIconGadget: Wenn 'Eintrag' = -1, dann wird die Überschrift der angegebenen 'Spalte' geändert.
@LineBreak
  - @@ListViewGadget
@LineBreak
  - @@MDIGadget
@LineBreak
  - @@PanelGadget
@LineBreak
  - @@TreeGadget
@LineBreak
  - @@WebGadget: Ändert den Html-Code im Gadget mittels @#PB_Web_HtmlCode als 'Eintrag'.
@LineBreak
  - @@WebViewGadget: Ändert den Html-Code im Gadget mittels @#PB_Web_HtmlCode als 'Eintrag'.

@SeeAlso
  @@GetGadgetItemText, @@GetGadgetText, @@SetGadgetText

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetGadgetState(#Gadget, Status)

@Description
  Ändert den aktuellen Status des angegebenen Gadgets.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Status"
  Der neue Status für den Eintrag. Siehe unten für die Bedeutung dieses Wertes, abhängig
  vom Gadget-Typ.

@NoReturnValue

@Remarks
  Dies ist eine universelle Funktion, welche mit den meisten der Gadgets arbeitet:
@LineBreak
@LineBreak
  - @@ButtonImageGadget: ändert den aktuellen Status eines #PB_Button_Toggle Schalters (1 = gedrückt, 0 = normal).
@LineBreak
  - @@ButtonGadget: ändert den aktuellen Status eines #PB_Button_Toggle Schalters (1 = gedrückt, 0 = normal). 
@LineBreak
  - @@CalendarGadget: ändert das aktuell ausgewählte Datum. 
@LineBreak
  - @@CheckBoxGadget: ändert den Status der Checkbox. Die folgenden Werte sind möglich:
@FixedFont
  @#PB_CheckBox_Checked  : Setzt das Häkchen.
  @#PB_CheckBox_Unchecked: Entfernt das Häkchen.
  @#PB_CheckBox_Inbetween: Setzt den "Dazwischen"-Status. (Nur für @#PB_CheckBox_ThreeState Checkboxen)
@EndFixedFont
  - @@ComboBoxGadget: ändert den aktuell selektierten Eintrag. 
@LineBreak
  - @@DateGadget: ändert das bzw. die aktuell angezeigte Datum/Zeit. Wenn @#PB_Date_CheckBox verwendet wurde, setzen Sie 'Status' auf 0, um das Häkchen zu entfernen. 
@LineBreak
  - @@ImageGadget: ändert das aktuelle Bild des Gadgets. 
@LineBreak
  - @@IPAddressGadget: ändert die aktuelle IP-Adresse.
@LineBreak
  - @@ListIconGadget: ändert den aktuell selektierten Eintrag. Wird -1 angegeben, verlieren alle Einträge ihre Selektierung. 
@LineBreak
  - @@ListViewGadget: ändert den aktuell selektierten Eintrag. Wird -1 angegeben, wird die Selektierung entfernt. 
@LineBreak
  - @@MDIGadget: ändert das aktuell fokussierte ChildWindow (durch Angabe der entsprechenden #Window Nummer), 
    oder benutzen Sie einen der folgenden Werte:
@FixedFont
  @#PB_MDI_Cascade         : ChildWindows überlappend anordnen ("Cascade").
  @#PB_MDI_TileVertically  : ChildWindows nebeneinander anordnen ("Tile vertically").
  @#PB_MDI_TileHorizontally: ChildWindows nebeneinander anordnen ("Tile horizontally") .
  @#PB_MDI_Next            : Fokus dem nächsten ChildWindow geben.
  @#PB_MDI_Previous        : Fokus dem vorhergehenden ChildWindow geben.
  @#PB_MDI_Arrange         : Die symbolisierten (minimierten) Fenster anordnen.
@EndFixedFont
  - @@OptionGadget: 1 um es zu aktivieren, andernfalls 0.
@LineBreak
  - @@PanelGadget: ändert das aktuelle Panel.
@LineBreak
  - @@ProgressBarGadget: ändert den Wert der Fortschrittsanzeige. Ein Wert von @#PB_ProgressBar_Unknown
    kann verwendet werden, um anzuzeigen, dass der Fortschritt nicht bekannt ist.
@LineBreak
  - @@ScrollBarGadget: ändert die aktuelle Position des Schiebebalkens.
@LineBreak
  - @@ShortcutGadget: ändert das aktuelle Tastenkürzel.
@LineBreak
  - @@SpinGadget: ändert den aktuellen Wert des SpinGadgets.
@LineBreak
  - @@SplitterGadget: ändert die aktuelle Splitter-Position, in Pixel. 
@LineBreak
  - @@TrackBarGadget: ändert die aktuelle Regler-Position. 
@LineBreak
  - @@TreeGadget: ändert den aktuell ausgewählten Eintrag, -1 wählt keinen Eintrag aus. 
@LineBreak
  - @@WebGadget: führt einige Aktionen im Browser-Fenster aus, siehe das WebGadget() für weitere Erklärungen.

@OS Windows
@LineBreak
@LineBreak
  Hinweis: Beachten Sie bitte auch die Hinweise im Kapitel
  @ReferenceLink "winmessages" "Windows Message Handling" zur
  Nachrichtenverarbeitung unter Windows.

@SeeAlso
  @@GetGadgetState, @@GetGadgetItemState, @@SetGadgetItemState

@SupportedOS

;-------------------------------------------------------------------------------------------------------- 

@Function SetGadgetText(#Gadget, Text$)

@Description
  Ändert den Text-Inhalt des angegebenen Gadgets.

@Parameter "#Gadget"
  Das zu verwendende Gadget.

@Parameter "Text$"
  Der zu setzende neue Text.

@NoReturnValue

@Remarks
  Dieser Befehl ist insbesondere nützlich für:
@LineBreak
@LineBreak
  - @@ButtonGadget: ändert den Text des ButtonGadgets.
@LineBreak
  - @@ComboBoxGadget: ändert den angezeigten Text. Ist das ComboBoxGadget nicht editierbar, muss sich der Text in der Aufklapp-Liste befinden.
@LineBreak
  - @@DateGadget: ändert die Eingabemaske für das Datum im Gadget. Siehe @@FormatDate für das Format des 'Text$' Parameters.
@LineBreak
  - @@EditorGadget: ändert den Textinhalt des EditorGadgets. Wenn Sie mehrere Textzeilen mit einmal
    hinzufügen möchten, trennen Sie diese einfach mit "Chr(13)+Chr(10)" auf Windows bzw. "Chr(10)" auf Linux und OS X.
@LineBreak
  - @@ExplorerComboGadget: ändert das aktuell angezeigte Verzeichnis.
@LineBreak
  - @@ExplorerListGadget: ändert das aktuell angezeigte Verzeichnis und/oder den Pattern (Datei-Filter) für Dateien (siehe @@ExplorerListGadget für weitere Details).
@LineBreak
  - @@ExplorerTreeGadget: ändert das aktuell ausgewählte Verzeichnis und/oder den Pattern (Datei-Filter) für Dateien (siehe @@ExplorerTreeGadget für weitere Details).
@LineBreak
  - @@FrameGadget: ändert den Titel des FrameGadgets.
@LineBreak
  - @@HyperLinkGadget: ändert den Text des HyperLinkGadgets.
@LineBreak
  - @@ListViewGadget: wählt den Eintrag aus, welcher exakt mit dem angegebenen Text übereinstimmt.
@LineBreak
  - @@StringGadget: ändert den Inhalt des StringGadgets.
@LineBreak
  - @@TextGadget: ändert den Inhalt des TextGadgets.
@LineBreak
  - @@TreeGadget: ändert den Text des aktuell ausgewählten Eintrags.
@LineBreak
  - @@WebGadget: ändert die aktuelle URL.
@LineBreak
  - @@WebViewGadget: ändert die aktuelle URL.

@SeeAlso
  @@GetGadgetText, @@GetGadgetItemText, @@SetGadgetItemText

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = ShortcutGadget(#Gadget, x, y, Breite, Höhe, Tastenkürzel)

@Description
  Erstellt ein Gadget für die Auswahl von Tastenkürzeln (englisch "Keyboard Shortcuts")
  in der aktuellen Gadgetliste. Der Anwender kann es auswählen und eine Tastenkombination
  drücken, um ein neues Tastenkürzel auszuwählen.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Tastenkürzel"
  Das anfänglich anzuzeigende Tastenkürzel. Die möglichen Werte
  sind die gleichen, wie bei der @@AddKeyboardShortcut Funktion.
  Ein Wert von 0 kann gesetzt werden, um damit anzuzeigen, das aktuell kein Tastenkürzel definiert ist.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können zum Verwalten des ShortcutGadget benutzt werden:
@LineBreak
@LineBreak
 - @@GetGadgetState: Ermittelt das aktuell ausgewählte Tastenkürzel.
@LineBreak
 - @@SetGadgetState: Ändert das aktuell ausgewählte Tastenkürzel.

@Example
@Code
  If OpenWindow(0, 0, 0, 240, 70, "ShortcutGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ShortcutGadget(0, 20, 20, 200, 25, #PB_Shortcut_Control | #PB_Shortcut_A)
    Repeat
      Event = WaitWindowEvent()
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@Seealso
  @@GetGadgetState, @@SetGadgetState, @@AddKeyboardShortcut

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = SpinGadget(#Gadget, x, y, Breite, Höhe, Minimum, Maximum [, Flags])

@Description
  Erstellt ein SpinGadget in der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Minimum, Maximum"
  Die Minimum- und Maximum-Werte für das Gadget.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Spin_ReadOnly : Das StringGadget ist nicht editierbar, die Nummer ist nur über die Pfeile änderbar.
  @#PB_Spin_Numeric  : Das SpinGadget wird den Text automatisch mit dem aktuellen Wert des SpinGadgets-Status aktualisieren,
                      womit @@SetGadgetText nicht benötigt wird.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können zum Verwalten des SpinGadgets benutzt werden:
@LineBreak
@LineBreak
  @@GetGadgetState: Ermittelt den aktuellen Gadget-Wert.
@LineBreak
  @@SetGadgetState: Ändert den aktuellen Gadget-Wert. Für das Anzeigen des neuen Werts ist jedoch trotzdem noch @@SetGadgetText notwendig!
@LineBreak
  @@GetGadgetText: Ermittelt den im Gadget enthaltenen Text.
@LineBreak
  @@SetGadgetText: Ändert den im Gadget enthaltenen Text.
@LineBreak
  @@GetGadgetAttribute: Mit einem der folgenden Attribute:
@FixedFont
  @#PB_Spin_Minimum   : Gibt den Minimal-Wert zurück.
  @#PB_Spin_Maximum   : Gibt den Maximal-Wert zurück.
@EndFixedFont

  @@SetGadgetAttribute: Mit einem der folgenden Attribute:
@FixedFont
  @#PB_Spin_Minimum   : Ändert den Minimal-Wert.
  @#PB_Spin_Maximum   : Ändert den Maximal-Wert.
@EndFixedFont

  Die folgenden Ereignisse werden durch @@EventType unterstützt:
@FixedFont  
  @#PB_EventType_Change: Der Text im Eingabebereich wurde durch den Anwender geändert.
  @#PB_EventType_Up    : Die 'Nach oben'-Taste wurde gedrückt.
  @#PB_EventType_Down  : Die 'Nach unten'-Taste wurde gedrückt.
@EndFixedFont

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 140, 70, "SpinGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    SpinGadget     (0, 20, 20, 100, 25, 0, 1000)
    SetGadgetState (0, 5) : SetGadgetText(0, "5")   ; legt den Anfangswert fest
    Repeat
      Event = WaitWindowEvent()
      If Event = #PB_Event_Gadget
        If EventGadget() = 0
          SetGadgetText(0, Str(GetGadgetState(0)))
        EndIf
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image spingadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetText, @@SetGadgetText, @@GetGadgetAttribute, @@SetGadgetAttribute,
  @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = SplitterGadget(#Gadget, x, y, Breite, Höhe, #Gadget1, #Gadget2 [, Flags]) 

@Description
  Erstellt ein Splitter-Gadget innerhalb der aktuellen Gadgetliste. Dieses Gadget ermöglicht
  zwei (Child-) Gadgets, welche durch den Anwender mit Hilfe eines Trennbalkens in der Größe
  verändert ("resized") werden können.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "#Gadget1, #Gadget2"
  Die Gadgets, welche im Splitter platziert werden sollen.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Splitter_Vertical    : Das Gadget wird vertikal gesplittet (anstelle von horizontal, was der Standard ist).
  @#PB_Splitter_Separator   : Ein Abgrenzungsbalken im 3D-Look wird in den Splitter gezeichnet.
  @#PB_Splitter_FirstFixed  : Wenn das SplitterGadget in der Größe verändert wird, behält das erste Gadget seine Größe.
  @#PB_Splitter_SecondFixed : Wenn das SplitterGadget in der Größe verändert wird, behält das zweite Gadget seine Größe.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können verwendet werden, um auf das SplitterGadget zuzugreifen:
@LineBreak
@LineBreak
  @@GetGadgetState: Ermittelt die aktuelle Splitter-Position, in Pixel.
@LineBreak
  @@SetGadgetState: Ändert die aktuelle Splitter-Position, in Pixel.
@LineBreak
  @@GetGadgetAttribute: Mit einem der folgenden Attribute:
@FixedFont
  @#PB_Splitter_FirstMinimumSize : Ermittelt die minimale Größe (in Pixel), welche das erste Gadget haben kann.
  @#PB_Splitter_SecondMinimumSize: Ermittelt die minimale Größe (in Pixel), welche das zweite Gadget haben kann.
  @#PB_Splitter_FirstGadget      : Ermittelt die Gadget-Nummer des ersten Gadgets.
  @#PB_Splitter_SecondGadget     : Ermittelt die Gadget-Nummer des zweiten Gadgets.
@EndFixedFont

  @@SetGadgetAttribute: Mit einem der folgenden Attribute:
@FixedFont
  @#PB_Splitter_FirstMinimumSize : Legt die minimale Größe (in Pixel) fest, welche das erste Gadget haben kann. 
  @#PB_Splitter_SecondMinimumSize: Legt die minimale Größe (in Pixel) fest, welche das zweite Gadget haben kann.
  @#PB_Splitter_FirstGadget      : Ersetzt das erste Gadget durch ein Neues.
  @#PB_Splitter_SecondGadget     : Ersetzt das zweite Gadget durch ein Neues.
@EndFixedFont

  @Bold "Hinweis:" Beim Ersetzen eines Gadgets mittels @@SetGadgetAttribute, wird das alte Gadget nicht
  automatisch freigegeben. Es wird stattdessen zurück auf das übergeordnete Fenster des Splitters gesetzt. Dies ermöglicht das 
  Umschalten von Gadgets zwischen Splittern ohne die Notwendigkeit, diese jedes Mal neu zu erstellen. Wenn das alte Gadget
  freigegeben werden soll, kann zuerst seine Nummer mittels @@GetGadgetAttribute ermittelt und das
  Gadget anschließend mittels @@FreeGadget freigegeben werden, nachdem es zuvor ersetzt wurde.
  Beachten Sie bitte, dass ein Gadget nicht gleichzeitig in zwei Splittern vorhanden sein kann. Um daher ein Gadget von einem
  Splitter in den anderen zu verschieben, muss es zuerst im ersten Splitter ersetzt werden (damit es sich im Hauptfenster
  befindet) und kann anschließend in den zweiten Splitter verschoben werden.

@Example
@Code
  If OpenWindow(0, 0, 0, 230, 195, "SplitterGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    #Button1  = 0 
    #Button2  = 1
    #Splitter = 2
    
    ButtonGadget(#Button1, 0, 0, 0, 0, "Button 1") ; es besteht keine Notwendigkeit, die Größe oder Position
    ButtonGadget(#Button2, 0, 0, 0, 0, "Button 2") ; festzulegen, da sie automatisch in der Größe angepasst werden
    SplitterGadget(#Splitter, 5, 5, 220, 120, #Button1, #Button2, #PB_Splitter_Separator)
    
    TextGadget(3, 10, 135, 210, 55, "Obiger GUI-Abschnitt zeigt zwei sich - innerhalb des 220x120 SplitterGadget Bereichs - automatisch in der Größe anpassende Schalter.", #PB_Text_Center)
    
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image splittergadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = StringGadget(#Gadget, x, y, Breite, Höhe, Inhalt$ [, Flags]) 

@Description
  Erstellt ein String-Gadget innerhalb der aktuellen Gadget-Liste.
  Es ermöglicht dem Anwender die Eingabe einer Textzeile.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Inhalt$"
  Der anfängliche Inhalt dieses StringGadgets. Dieses Gadget akzeptiert 
  nur eine Zeile an Text. Um mehrzeilige Eingaben zu erhalten, verwenden Sie das @@EditorGadget.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_String_Numeric    : Nur (positive) Ganzzahlen werden akzeptiert.
  @#PB_String_Password   : Passwort-Modus, es werden nur '*' anstelle normaler Zeichen angezeigt.
  @#PB_String_ReadOnly   : 'Read only' bzw. Lese-Modus. Es kann kein Text eingegeben werden.
  @#PB_String_LowerCase  : Alle Zeichen werden automatisch in Kleinbuchstaben umgewandelt.
  @#PB_String_UpperCase  : Alle Zeichen werden automatisch in Großbuchstaben umgewandelt.
  @#PB_String_BorderLess : Es werden keine Ränder rings um das Gadget gezeichnet.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Der Inhalt kann später mit @@SetGadgetText verändert und mit @@GetGadgetText
  ermittelt werden.
@LineBreak
@LineBreak
  Die Abfrage der folgenden Ereignisse wird mittels @@EventType unterstützt:
@FixedFont  
  @#PB_EventType_Change    : Der Text wurde durch den Anwender geändert.
  @#PB_EventType_Focus     : Das StringGadget erhielt den Fokus.
  @#PB_EventType_LostFocus : Das StringGadget verlor den Fokus.
@EndFixedFont

  Die folgenden Funktionen können verwendet werden, um dieses Gadget zu beeinflussen:
@LineBreak
@LineBreak
  - @@SetGadgetColor und @@GetGadgetColor mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
@EndFixedFont

  - @@GetGadgetAttribute mit dem folgenden Attribut:
@FixedFont
  @#PB_String_MaximumLength: Gibt maximale Anzahl an Zeichen zurück, welche eingegeben werden können.
@EndFixedFont

  - @@SetGadgetAttribute mit dem folgenden Attribut:
@FixedFont
  @#PB_String_MaximumLength: Legt die maximale Anzahl an Zeichen fest, welche eingegeben werden können.
@EndFixedFont

  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.

@Example
@Code
  ; Zeigt mögliche Flags des StringGadgets in Aktion...
  If OpenWindow(0, 0, 0, 322, 205, "StringGadget Flags", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    StringGadget(0, 8,  10, 306, 20, "Normal StringGadget...")
    StringGadget(1, 8,  35, 306, 20, "1234567", #PB_String_Numeric)
    StringGadget(2, 8,  60, 306, 20, "Readonly StringGadget", #PB_String_ReadOnly)
    StringGadget(3, 8,  85, 306, 20, "lowercase...", #PB_String_LowerCase)
    StringGadget(4, 8, 110, 306, 20, "uppercase...", #PB_String_UpperCase)
    StringGadget(5, 8, 140, 306, 20, "Borderless StringGadget", #PB_String_BorderLess)
    StringGadget(6, 8, 170, 306, 20, "Password", #PB_String_Password)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image stringgadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetColor, @@SetGadgetColor, @@EditorGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = TextGadget(#Gadget, x, y, Breite, Höhe, Text$ [, Flags]) 

@Description
  Erstellt ein Text-Gadget innerhalb der Gadget-Liste. Ein Text-Gadget ist ein
  einfacher Textbereich zum Anzeigen eines (nicht editierbaren) Textes.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Text$"
  Der anzuzeigende Text.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Text_Center : Der Text wird im Gadget zentriert dargestellt.
  @#PB_Text_Right  : Der Text wird rechtsbündig dargestellt.
  @#PB_Text_Border : Ein vertiefter Rand wird rings um das Gadget gezeichnet.
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Der Inhalt des Gadgets kann mit dem Befehl @@SetGadgetText verändert werden
  und mit @@GetGadgetText ermittelt werden. Den Zeichensatz eines TextGadget() können
  Sie mittels @@SetGadgetFont ändern.
@LineBreak
@LineBreak
  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
@EndFixedFont

  Hinweis: Dieses Gadget empfängt keinerlei Anwendereingaben/Ereignisse.
@LineBreak
@LineBreak
  @@GadgetToolTip funktioniert nur auf Linux.

@Example
@Code
  If OpenWindow(0, 0, 0, 270, 160, "TextGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10,  10, 250, 20, "TextGadget Standard (Left)")
    TextGadget(1, 10,  70, 250, 20, "TextGadget Center", #PB_Text_Center)
    TextGadget(2, 10,  40, 250, 20, "TextGadget Right", #PB_Text_Right)
    TextGadget(3, 10, 100, 250, 20, "TextGadget Border", #PB_Text_Border)
    TextGadget(4, 10, 130, 250, 20, "TextGadget Center + Border", #PB_Text_Center | #PB_Text_Border)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image textgadget.png

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetColor, @@SetGadgetColor

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = TrackBarGadget(#Gadget, x, y, Breite, Höhe, Minimum, Maximum [, Flags]) 

@Description
  Erstellt ein TrackBar Gadget in der aktuellen Gadgetliste. Es ermöglicht Ihnen die
  Auswahl eines Wertebereichs mit Hilfe eines Schiebereglers, wie er in verschiedenen
  Multimedia-Playern zu finden ist.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "Minimum, Maximum"
  Die vom Gadget verwendeten Minimum- und Maximum-Werte.
  Diese Werte sollten zwischen 0 und 10.000 liegen, um Einschränkungen auf manchen
  Betriebssystemen zu vermeiden.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_TrackBar_Ticks    : Stellt einen 'Tick' Marker an jedem Schritt dar.
  @#PB_TrackBar_Vertical : Das TrackBar ist jetzt vertikal (anstelle von horizontal, was der Standard ist).
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können verwendet werden, um auf dieses Gadget zuzugreifen:
@LineBreak
@LineBreak
  - @@GetGadgetState: Gibt die aktuelle Regler-Position (Wert innerhalb der Minimum-Maximum Spanne) zurück.
@LineBreak
  - @@SetGadgetState: Ändert die aktuelle Regler-Position.
@LineBreak
  - @@GetGadgetAttribute mit einem der folgenden Attribute:
@FixedFont
  @#PB_TrackBar_Minimum   : Gibt den Minimum-Wert zurück.
  @#PB_TrackBar_Maximum   : Gibt den Maximum-Wert zurück.
@EndFixedFont

  - @@SetGadgetAttribute mit einem der folgenden Attribute:
@FixedFont
  @#PB_TrackBar_Minimum   : Ändert den Minimum-Wert.
  @#PB_TrackBar_Maximum   : Ändert den Maximum-Wert.
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 320, 200, "TrackBarGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget    (3, 10,  20, 250, 20,"TrackBar Standard", #PB_Text_Center)
    TrackBarGadget(0, 10,  40, 250, 20, 0, 10000)
    SetGadgetState(0, 5000)
    TextGadget    (4, 10, 100, 250, 20, "TrackBar Ticks", #PB_Text_Center)
    TrackBarGadget(1, 10, 120, 250, 20, 0, 30, #PB_TrackBar_Ticks)
    SetGadgetState(1, 3000)
    TextGadget    (5,  90, 180, 200, 20, "TrackBar Vertical", #PB_Text_Right)
    TrackBarGadget(2, 270, 10, 20, 170, 0, 10000, #PB_TrackBar_Vertical)
    SetGadgetState(2, 8000)
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image trackbargadget.png

@SeeAlso
  @@GetGadgetState, @@SetGadgetState, @@GetGadgetAttribute, @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = TreeGadget(#Gadget, x, y, Breite, Höhe [, Flags]) 

@Description
  Erstellt ein Tree-Gadget (Baum-Gadget) innerhalb der aktuellen Gadgetliste.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@OptionalParameter "Flags"
  Flags zum Verändern des Gadget-Verhaltens. Dies kann eine Kombination
  (verknüpft mit dem bitweisen '|' OR-Operator) der folgenden Konstanten sein:
@FixedFont
  @#PB_Tree_AlwaysShowSelection : Die Auswahl ist noch sichtbar, auch wenn das Gadget nicht aktiviert ist.
  @#PB_Tree_NoLines             : Versteckt die kleinen Linien zwischen allen Knoten ("Nodes").
  @#PB_Tree_NoButtons           : Versteckt die '+' Knoten ("Node") Schalter.
  @#PB_Tree_CheckBoxes          : Fügt ein Häkchen (Checkbox) vor jedem Eintrag hinzu.
  @#PB_Tree_ThreeState          : Die Häkchen-Boxen haben einen "Dazwischen"-Status.
@EndFixedFont

  Das @#PB_Tree_ThreeState Flag kann in Verbindung mit dem 
  @#PB_Tree_CheckBoxes Flag verwendet werden, um Checkboxen (Häkchen-Boxen) zu erhalten,
  welche einen "An", "Aus" und "Dazwischen" Status haben können.
  Der Anwender kann nur die "An"- bzw. "Aus"-Status auswählen. Der "Dazwischen"-Status kann programmseitig
  mittels der @@SetGadgetItemState Funktion gesetzt werden.

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.

@Remarks
  Jeder Eintrag im Tree hat einen ihm zugewiesenen Unterebenen-Wert ("Sublevel"), welcher die Verbindung zwischen dem
  Eintrag darüber und darunter bestimmt. Einträge mit dem gleichen Sublevel gehören zum gleichen Knoten ("Node"),
  Einträge mit einem höheren Sublevel sind untergeordnete Einträge ("Childitems") und so weiter. Dieser Sublevel-Wert
  kann verwendet werden, um die Verbindung zwischen zwei Einträgen durch Vergleichen ihres Sublevel-Werts zu bestimmen.
  Der Parameter 'Flags' von @@AddGadgetItem wird bei TreeGadget-Einträgen immer benötigt und 
  wird verwendet, um den Sublevel festzulegen, an dem der neue Eintrag hinzugefügt werden soll. Beachten Sie bitte:
  wenn die Funktion mit einem Sublevel aufgerufen wird, an dem der Eintrag nicht hinzugefügt werden kann, dann wird
  der Eintrag an dem Sublevel hinzugefügt, wo dies möglich ist.
@LineBreak
@LineBreak
  Zu diesem Gadget kann mittels @@GadgetToolTip eine 'Mini-Hilfe' hinzugefügt werden.
@LineBreak
@LineBreak
  Die folgenden Befehle können benutzt werden, um auf den Tree-Inhalt zuzugreifen:
@LineBreak
@LineBreak
  - @@AddGadgetItem: Fügt einen Eintrag (mit optionalem Bild in der 16x16 Standard Icon-Größe) hinzu.
@LineBreak
  - @@RemoveGadgetItem: Entfernt einen Eintrag (und all seine Untereinträge).
@LineBreak
  - @@ClearGadgetItems: Entfernt alle Einträge.
@LineBreak
  - @@CountGadgetItems: Ermittelt die Anzahl der aktuell im Gadget befindlichen Einträge.
@LineBreak
  - @@GetGadgetItemState: Ermittelt den aktuellen Status des angegebenen Eintrags.
@LineBreak
  - @@SetGadgetItemState: Ändert den aktuellen Status des angegebenen Eintrags.
@LineBreak
  - @@GetGadgetItemText: Ermittelt den aktuellen Textinhalt des angegebenen Eintrags.
@LineBreak
  - @@SetGadgetItemText: Ändert den aktuellen Text des angegebenen Eintrags.
@LineBreak  
  - @@SetGadgetItemImage: Ändert das aktuelle Bild des angegebenen Eintrags.
@LineBreak
  - @@GetGadgetItemData: Gibt den Wert zurück, welcher mit dem Eintrag gespeichert wurde.
@LineBreak
  - @@SetGadgetItemData: Speichert einen Wert mit dem Eintrag.
@LineBreak
  - @@GetGadgetItemColor: Gibt die Text- oder Hintergrundfarbe des Eintrags zurück.
@LineBReak
  - @@SetGadgetItemColor: Ändert die Text- oder Hintergrundfarbe des Eintrags. (nicht auf MacOS X unterstützt)
@LineBreak
  - @@GetGadgetState: Ermittelt den aktuell ausgewählten Eintrag.
@LineBreak
  - @@SetGadgetState: Ändert den aktuell ausgewählten Eintrag.
@LineBreak
  - @@GetGadgetText: Ermittelt den Textinhalt des aktuell ausgewählten Eintrags.
@LineBreak
  - @@SetGadgetText: Ändert den Textinhalt des aktuell ausgewählten Eintrags.
@LineBreak
  - @@GetGadgetItemAttribute: Mit dem folgenden Attribut:
@FixedFont
  @#PB_Tree_SubLevel: Gibt den Sublevel-Wert des angegebenen Eintrags zurück.
@EndFixedFont
  - @@GadgetItemID: Gibt das OS-Handle des angegebenen Eintrags zurück (nützlich für API-Funktionen).
@LineBreak
@LineBreak

  Dieses Gadget unterstützt die @@SetGadgetColor und @@GetGadgetColor 
  Befehle mit den folgenden Werten als 'FarbTyp':
@FixedFont
  @#PB_Gadget_FrontColor: Textfarbe
  @#PB_Gadget_BackColor : Hintergrundfarbe
@EndFixedFont

  Die folgenden Ereignisse ("Events") werden durch @@EventType unterstützt:
@FixedFont  
  @#PB_EventType_LeftClick : linker Mausklick auf einen Eintrag, oder ein Häkchen wurde gesetzt/entfernt
  @#PB_EventType_LeftDoubleClick
  @#PB_EventType_RightClick
  @#PB_EventType_RightDoubleClick
  @#PB_EventType_Change    : der aktuelle Eintrag wurde verändert
  @#PB_EventType_DragStart : der Anwender versucht, eine Drag & Drop Operation zu starten. @@ExamineDraggedItems
                            kann verwendet werden, um die Informationen zu den gezogenen Elementen abzurufen.
@EndFixedFont
  Nach einem @#PB_EventType_DragStart Ereignis kann die @LibraryLink "dragdrop" "Drag & Drop Library" verwendet
  werden, um eine Drag & Drop Operation zu starten. Unter MacOS X muss das Ereignis @#PB_EventType_DragStart mit
  @@BindEvent oder @@BindGadgetEvent behandelt werden.
  
@Example
@Code
  If OpenWindow(0, 0, 0, 355, 180, "TreeGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TreeGadget(0, 10, 10, 160, 160)                                         ; TreeGadget Standard
    TreeGadget(1, 180, 10, 160, 160, #PB_Tree_CheckBoxes | #PB_Tree_NoLines)  ; TreeGadget mit Checkboxen + ohne Linien
    For ID = 0 To 1
      For a = 0 To 10
        AddGadgetItem (ID, -1, "Normal Item "+Str(a), 0, 0) ; wenn Sie ein Bild hinzufügen möchten, dann 
        AddGadgetItem (ID, -1, "Node "+Str(a), 0, 0)        ; benutzen Sie ImageID(x) als 4. Parameter
        AddGadgetItem(ID, -1, "Sub-Item 1", 0, 1)     ; diese sind auf dem ersten Sublevel
        AddGadgetItem(ID, -1, "Sub-Item 2", 0, 1)
        AddGadgetItem(ID, -1, "Sub-Item 3", 0, 1)
        AddGadgetItem(ID, -1, "Sub-Item 4", 0, 1)
        AddGadgetItem (ID, -1, "File "+Str(a), 0, 0)  ; hier wieder Sublevel 0
      Next
    Next
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image treegadget.png

@SeeAlso
  @@AddGadgetItem, @@RemoveGadgetItem, @@ClearGadgetItems, @@CountGadgetItems, @@GetGadgetItemState, @@SetGadgetItemState, 
  @@GetGadgetItemText, @@SetGadgetItemText, @@SetGadgetItemImage, @@GetGadgetItemData, @@SetGadgetItemData, @@GetGadgetState, @@SetGadgetState, 
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetItemAttribute, @@GadgetItemID, @@GetGadgetColor, @@SetGadgetColor,
  @@ExplorerTreeGadget

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = UseGadgetList(WindowID)

@Description
  Wählt das GadgetList-Fenster, zu welchem Gadgets hinzugefügt werden sollen. Gibt es für
  dieses Fenster bisher keine Gadgetliste (weil es mit dem @#PB_Window_NoGadgets Flag
  bei @@OpenWindow erstellt wurde, oder es kein PB-Fenster ist), so wird 
  eine erstellt.

@Parameter "WindowID"
  Das neue Fenster, zu welchem Gadgets hinzugefügt werden sollen. Dieses kann 
  mittels der @@WindowID Funktion ermittelt werden.
  Ist 'WindowID' gleich 0, dann wird das aktuelle GadgetList-Fenster zurückgegeben und nichts wird
  geändert.
  
@ReturnValue
  Gibt die WindowID des vorherigen GadgetList-Fensters zurück, oder 0 wenn es keines gab. Dieser
  Wert kann verwendet werden, um später zur vorherigen Gadgetliste zurückzukehren.
  
@Example
  Dieses Beispiel zeigt, wie dieser Befehl verwendet werden kann, um ein neues Fenster mit Gadgets 
  zu erstellen, ohne die Gadget-Erstellung auf dem aktuellen Fenster zu unterbrechen:
@Code
  If OpenWindow(0, 0, 0, 500, 500, "Hauptfenster", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    ButtonGadget(0, 10, 10, 150, 25, "Button 1")
    
    ; Erstellen eines Fensters mit #PB_Window_NoGadgets, um die automatische Gadgetlisten-Erstellung zu verhindern
    If OpenWindow(1, 0, 0, 300, 200, "Child-Fenster", #PB_Window_TitleBar | #PB_Window_WindowCentered | #PB_Window_NoGadgets, WindowID(0))     
      OldGadgetList = UseGadgetList(WindowID(1)) ; Erstellt Gadgetliste und speichert die alte Gadgetliste
      
      ButtonGadget(10, 10, 10, 150, 25, "Child Window Button")
      
      UseGadgetList(OldGadgetList)               ; Kehrt zur vorherigen Gadgetliste zurück
    EndIf
    
    ButtonGadget(1, 10, 45, 150, 25, "Button 2") ; Dieses Gadget befindet sich erneut auf dem Hauptfenster
    
    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@OpenWindow, @@WindowID
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Ergebnis = WebGadget(#Gadget, x, y, Breite, Höhe, URL$ [, Flags])

@Description
  Erstellt ein Web-Gadget in der aktuellen Gadgetliste. Dieses kann Html-Seiten darstellen.

@Parameter "#Gadget"
  Eine Nummer, um das neue Gadget zu identifizieren. @ReferenceLink "purebasic_objects" "#PB_Any"
  kann verwendet werden, um diese Nummer automatisch zu generieren.

@Parameter "x, y, Breite, Höhe"
  Die Position und die Abmessungen des neuen Gadgets.

@Parameter "URL$"
  Die nach dem Erstellen des Gadgets zu ladende URL.

@OptionalParameter "Flags"
  Kann folgende Konstante sein:
@FixedFont
  @#PB_Web_Edge: Verwendet die WebView2-Engine zum Rendern der Webseite (nur Windows). WebView2 ist die
                Edge-basierte Komponente für die moderne Webseitenanzeige in Windows-Anwendungen. Sie
                ist beim aktuellen Windows 10 und Windows 11 integriert. Für ältere Windows-Versionen
                muss sie installiert werden (falls nicht bereits geschehen): @InternetLink "https://learn.microsoft.com/en-us/microsoft-edge/webview2/concepts/distribution" "distribution guide".
@EndFixedFont

@ReturnValue
  Gibt bei Erfolg einen Wert ungleich Null zurück, oder Null bei einem Fehler. Wenn
  @#PB_Any als #Gadget Parameter verwendet wurde, dann beinhaltet der Rückgabewert
  bei Erfolg die automatisch generierte Gadget-Nummer.
@LineBreak
@LineBreak
  Diese Funktion schlägt fehl, wenn die für das WebGadget benötigten Komponenten nicht geladen
  werden können. Siehe unten für die Voraussetzungen des WebGadgets auf jedem OS.

@Remarks
  Die folgenden Komponenten werden benötigt, um das WebGadget auf jedem OS zu verwenden.
  Diese Komponenten werden benötigt, um das WebGadget zu verwenden, nicht nur beim Kompilieren
  des Programms.
@LineBreak
@LineBreak
  @Bold "Windows"
@Indent
  Das WebGadget verwendet das Internet Explorer 11 ActiveX-Objekt unter Windows. Wenn das Flag
  @#PB_Web_Edge verwendet wird, wird stattdessen die moderne Edge-basierte Komponente verwendet.
@LineBreak
@LineBreak  
  Denken Sie daran, in Ihren Codes "\" mit "/" zu ersetzen.
@EndIndent

  @Bold "Linux"
@Indent
  Das WebGadget verwendet auf Linux die "WebKitGtk Library". Das Paket mit dieser Bibliothek hat den
  Namen 'libwebkit'. Einige Distributionen verwenden möglicherweise eine alte Version dieses Pakets
  namens 'WebKitGtk'. Wenn Ihre Distribution kein Paket für diese Bibliothek enthält, dann können
  die Quellcodes von der @InternetLink "http://webkitgtk.org/" "WebKitGtk Homepage" geladen werden.
@EndIndent

  @Bold "Mac OSX"
@Indent
  Das WebGadget verwendet auf Mac OSX die "WebKit" Komponente. Diese Komponente ist beim
  Betriebssystem dabei. Es gibt keine weiteren Anforderungen.
@EndIndent

  Die folgenden Befehle können zum Zugriff auf das WebGadget benutzt werden:
@LineBreak
@LineBreak
  - @@SetGadgetText: Ändert die aktuelle URL.
@LineBreak
  - @@GetGadgetText: Ermittelt die aktuelle URL.
@LineBreak
  - @@SetGadgetState: Führt eine Aktion auf dem Gadget aus. Die folgenden Konstanten
    sind gültig:
@FixedFont
  @#PB_Web_Back   : Ein Schritt zurück in der Navigations-Historie.
  @#PB_Web_Forward: Ein Schritt vorwärts in der Navigations-Historie.
  @#PB_Web_Stop   : Stoppt das Laden der aktuellen Seite.
  @#PB_Web_Refresh: Erneutes Laden ("Refresh") der aktuellen Seite.
@EndFixedFont

@LineBreak
  - @@SetGadgetItemText: Mit @#PB_Web_HtmlCode als 'Eintrag' kann Html-Code in das Gadget eingefügt ("gestreamed") werden. (nur auf Windows)
@LineBreak

  - @@GetGadgetItemText: Die folgenden Konstanten können verwendet werden, um Informationen zu erhalten: (nur auf Windows)
@FixedFont
  @#PB_Web_HtmlCode     : Ermittelt den Html-Code vom Gadget.
  @#PB_Web_PageTitle    : Ermittelt den aktuellen Titel der angezeigten Seite.
  @#PB_Web_StatusMessage: Ermittelt die aktuelle Statusleisten-Nachricht.
  @#PB_Web_SelectedText : Ermittelt den aktuell selektierten Text innerhalb des Gadgets.
@EndFixedFont

  - @@SetGadgetAttribute: Setzt die folgenden Attribute:
@FixedFont
  @#PB_Web_NavigationCallback: Definiert einen Callback für das Überwachen (und Deaktivieren) der Navigation.
  @#PB_Web_ScrollX           : Legt die horizontale Scroll-Position fest (nur auf Windows).
  @#PB_Web_ScrollY           : Legt die vertikale Scroll-Position fest (nur auf Windows).
  @#PB_Web_BlockPopups       : Blockt Popup-Fenster ab. @#PB_EventType_PopupWindow wird als Ereignis-Nachricht
                              geschickt, wenn diese Einstellung aktiviert ist (nur auf Windows).
  @#PB_Web_BlockPopupMenu    : Blockt das standardmäßige Popup-Menü ab. @#PB_EventType_PopupMenu wird als
                              Ereignis-Nachricht geschickt, wenn diese Einstellung aktiviert ist (nur auf Windows).
@EndFixedFont

  Der Navigations-Callback muss das folgende Format haben: (nur auf Windows)
@Code
  Procedure NavigationCallback(Gadget, Url$)
    ;
    ; Geben Sie #True zurück, um diese Navigation zu erlauben, oder #False um sie zu unterbinden.
    ;
    ProcedureReturn #True
  EndProcedure
@EndCode

  - @@GetGadgetAttribute: Ermittelt die folgenden Attribute: (nur auf Windows)
@FixedFont
  @#PB_Web_ScrollX       : Ermittelt die horizontale Scroll-Position.
  @#PB_Web_ScrollY       : Ermittelt die vertikale Scroll-Position.
  @#PB_Web_Busy          : Gibt einen Wert ungleich Null zurück, wenn das Gadget mit dem Laden einer Seite beschäftigt ist.
  @#PB_Web_Progress      : Gibt den aktuellen (manchmal geschätzten) Fortschritt nach einem @#PB_EventType_DownloadProgress Ereignis zurück.
  @#PB_Web_ProgressMax   : Gibt den aktuellen (manchmal geschätzten) maximalen Fortschritt @#PB_EventType_DownloadProgress Ereignis zurück.
  @#PB_Web_BlockPopups   : Ermittelt die aktuelle Einstellung zum Abblocken von Popup-Fenstern.
  @#PB_Web_BlockPopupMenu: Ermittelt die aktuelle Einstellung zum Abblocken des Popup-Menüs.
  @#PB_Web_NavigationCallback: Ermittelt den aktuellen Navigations-Callback (falls es einen gibt).
@EndFixedFont

;  @Bold "Hinweise:" Popup-Fenster und Popup-Menüs werden vom WebGadget nicht auf Linux unterstützt. Trotzdem kann die @#PB_Web_BlockPopups 
;  Konstante gesetzt werden, um das @#PB_EventType_PopupWindow Ereignis zu aktivieren. Das gleiche gilt für @#PB_Web_BlockPopupMenu.
;@LineBreak
;@LineBreak

  Die folgenden @Link "Window/EventType" "Typen von Ereignissen" können bei diesem Gadget auftreten:
@FixedFont
  @#PB_EventType_TitleChange     : Der Seitentitel hat sich geändert. (nur auf Windows)
  @#PB_EventType_StatusChange    : Die Status-Nachricht hat sich geändert. (nur auf Windows)
  @#PB_EventType_DownloadStart   : Ein Seiten-Download startete. (Windows, OS X)
  @#PB_EventType_DownloadProgress: Fortschritt-Informationen sind mit @@GetGadgetAttribute verfügbar. (nur auf Windows)
  @#PB_EventType_DownloadEnd     : Ein Seiten-Download endete oder wurde abgebrochen. (Windows, OS X)
  @#PB_EventType_PopupWindow     : Ein Popup-Fenster wurde abgeblockt. (nur auf Windows)
  @#PB_EventType_PopupMenu       : Das Popup-Menü wurde abgeblockt (zeigen Sie stattdessen ein eigenes Menü). (nur auf Windows)
@EndFixedFont

@Example
@Code
  If OpenWindow(0, 0, 0, 600, 300, "WebGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    WebGadget(0, 10, 10, 580, 280, "https://www.purebasic.com")
    ; Hinweis: wenn Sie eine lokale Datei benutzen möchten, dann ändern Sie den letzten Parameter
    ;          in "file://" + Pfad + Dateiname
    Repeat 
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@LineBreak
@Image webgadget.png

@LineBreak
@LineBreak
  Beispiel 2: (nur auf Windows, mit Navigations-Callback)
@Code
  ; Dieses Beispiel zeigt die PureBasic.com Webseite an. Innerhalb der Callback-Prozedur
  ; wird das Navigieren zur 'News' Seite verhindert (#False zurückgegeben), jedoch für
  ; alle anderen Seite erlaubt (#True zurückgegeben).
    
  Procedure NavigationCallback(Gadget, Url$)    ; nur auf Windows!
    If Url$= "https://www.purebasic.com/news.php" 
      MessageRequester("", "No news today!") 
      ProcedureReturn #False 
    Else 
      ProcedureReturn #True 
    EndIf 
  EndProcedure 
  
  If OpenWindow(0, 0, 0, 600, 300, "WebGadget", #PB_Window_SystemMenu | #PB_Window_ScreenCentered) 
    WebGadget(0, 10, 10, 580, 280, "https://www.purebasic.com") 
    SetGadgetAttribute(0, #PB_Web_NavigationCallback, @NavigationCallback()) 
    Repeat 
    Until WaitWindowEvent() = #PB_Event_CloseWindow 
  EndIf
@EndCode

@SeeAlso
  @@GetGadgetText, @@SetGadgetText, @@GetGadgetItemText, @@SetGadgetItemText, @@SetGadgetState,
  @@GetGadgetAttribute, @@SetGadgetAttribute

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function BindGadgetEvent(#Gadget, @Callback() [, EventTyp])

@Description
  Verknüpft ("bindet", englisch "bind") ein Gadget-Ereignis mit einem Callback.
  Dabei handelt es sich um eine zusätzliche Möglichkeit zur Verwaltung von Ereignissen
  (englisch "events") in PureBasic, welche problemlos mit den regulären @@WindowEvent /
  @@WaitWindowEvent Befehlen arbeitet. Es ermöglicht auch die Nutzung von Echtzeit-Ereignismeldungen
  (englisch "realtime event notifications"), da die Callback-Funktion aufgerufen werden
  kann, sobald das Ereignis auftritt (nützlich für @@ScrollBarGadget, @@ScrollAreaGadget etc.).
  Ein Gadget kann mittels @@UnbindGadgetEvent losgelöst (englisch "unbound") werden.
  
@Parameter "#Gadget"
  Das Gadget, mit dem das Ereignis verknüpft werden soll.

@Parameter "@Callback()"
  Die beim Auftreten des Ereignisses aufzurufende Callback-Prozedur. Diese muss wie folgt
  deklariert werden:
@Code
  Procedure EventHandler()
    ; Code
  EndProcedure
@EndCode
  Die regulären Funktionen wie @@EventGadget, @@EventWindow, @@EventMenu, @@EventType und
  @@EventData sind innerhalb des Callbacks verfügbar, um weitere Informationen über das
  Ereignis zu erhalten.
  @LineBreak
  @LineBreak
  Hinweis: @@WindowEvent und @@WaitWindowEvent sollten niemals von innerhalb eines Callbacks
  aufgerufen werden, oder das Programm könnte gesperrt ("locked") werden oder ein falsches
  Verhalten zeigen.

@OptionalParameter "EventTyp"
  Der Ereignis-Typ, mit dem das Ereignis verknüpft werden soll. Für eine vollständige Liste
  der unterstützten Typen siehe @@EventType. @#PB_All kann verwendet werden, um das Ereignis
  mit jedem Typ zu verknüpfen.

@NoReturnValue

@Example
@Code
  Procedure ButtonHandler()
    Debug "Button click event on gadget #" + EventGadget()
  EndProcedure
  
  OpenWindow(0, 100, 100, 200, 90, "Click test", #PB_Window_SystemMenu)
  
  ButtonGadget(0, 10, 10, 180, 30, "Click me")
  BindGadgetEvent(0, @ButtonHandler())
  
  ButtonGadget(1, 10, 50, 180, 30, "Click me")
  BindGadgetEvent(1, @ButtonHandler())
  
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso @@BindEvent, @@BindMenuEvent, @@UnbindGadgetEvent, @@WindowEvent, @@WaitWindowEvent

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function UnbindGadgetEvent(#Gadget, @Callback() [, EventTyp])  

@Description
  Löst die Verknüpfung eines Gadget-Ereignisses von einer Callback-Funktion.
  Wenn keine passende Ereignis-Callback-Funktion gefunden wurde, dann hat dieser
  Befehl keinen Effekt.
  
@Parameter "#Gadget"
  Das vom Ereignis loszulösende Gadget.

@Parameter "@Callback()"
  Die loszulösende Callback-Prozedur.
  
@OptionalParameter "EventTyp"
  Der Ereignis-Typ, der vom Ereignis losgelöst werden soll. Für eine vollständige Liste
  der unterstützten Typen siehe @@EventType.

@NoReturnValue

@Example
@Code
  Procedure ButtonHandler()
    Debug "Button click event on gadget #" + EventGadget()
    
    UnbindGadgetEvent(0, @ButtonHandler()) ; sofort wieder loslösen ("unbind")
    Debug "Event unbound"
  EndProcedure
  
  OpenWindow(0, 100, 100, 200, 50, "Click test", #PB_Window_SystemMenu)
  
  ButtonGadget(0, 10, 10, 180, 30, "Click me")
  
  BindGadgetEvent(0, @ButtonHandler())
  
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso @@BindEvent, @@BindGadgetEvent, @@BindMenuEvent, @@WindowEvent, @@WaitWindowEvent

@SupportedOS

