;
; Menu library documentation
;
; (c) Fantaisie Software
;

@Library Menu

@Overview

  Il est très simple de gérer des menus avec 
  PureBasic, et vous pourrez bien sûr 
  paramétrer tout ce dont vous avez besoin.
@LineBreak
@LineBreak
  Pour utiliser un menu, vous devez d'abord le 
  créer avec @@CreateMenu pour les menus normaux,  
  ou @@CreatePopupMenu pour les menus contextuels 
  (pop-up).
@LineBreak
@LineBreak
  @Bold "MacOS:"
@LineBreak
  Sur MacOS un menu n'est jamais affiché dans une 
  fenêtre, mais toujours sur le bureau. Le menu 
  en haut du bureau affiche les éléments de 
  l'application qui a le focus.
@LineBreak
@LineBreak
  Il existe les événements de menu prédéfinis 
  suivants @#PB_Menu_Quit, @#PB_Menu_About et 
  @#PB_Menu_Preferences présents dans le menu 
  de chaque programme MacOS. Leurs valeurs sont 
  négatives pour ne pas entrer en conflit avec 
  les éléments de menu définis par ailleurs 
  dans le programme qui eux sont signalés avec 
  la fonction @@EventMenu.

@CommandList

@ExampleFile All Menu.pb
@ExampleFile All PopupMenu.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function CloseSubMenu() 

@Description
  Ferme le sous menu.

@NoParameters

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 200, 200, 220, 100, "Exemple SubMenu")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet") 
        MenuItem(1, "Ouvrir")  
        MenuItem(2, "Fermer")
        MenuBar()
        OpenSubMenu("Fichiers Récents...") ; Crée un sous-menu
          MenuItem( 3, "C:\Autoexec.bat")
          MenuItem( 4, "D:\Teste.txt")
        CloseSubMenu()                     ; Termine la création du sous-menu
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@Image opensubmenu.png

@SeeAlso
  @@OpenSubMenu 
    
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CreateMenu(#Menu, FenetreID) 

@Description
  Crée un nouveau menu vide sur la fenêtre 
  spécifiée.
   
@Parameter "#Menu"
  Le numéro d'identification du menu.
@LineBreak
@LineBreak 
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer automatiquement 
  ce numéro.
  
@Parameter "FenetreID"
  La fenêtre qui accueille le nouveau menu.
@LineBreak
@LineBreak   
  Ce numéro peut être obtenu avec la fonction 
  @@WindowID.

@ReturnValue
  Renvoie une valeur non nulle en cas de succès, 
  zéro sinon.@LineBreak 
  Si @#PB_Any a été utilisé le numéro du menu 
  est renvoyé en cas de succès.

@Remarks
  Pour créer un menu avec des images, 
  utilisez @@CreateImageMenu.
@LineBreak
@LineBreak  
  Une fois créé, il devient le menu courant 
  et il est alors possible d'utiliser les 
  fonctions @@MenuTitle, @@MenuItem, @@MenuBar, 
  et @@OpenSubMenu pour remplir le menu.
@LineBreak
@LineBreak
  Pour gérer les évènements relatifs aux menus, 
  voir la description des commandes suivantes:
@LineBreak
@LineBreak
  @@WaitWindowEvent (ou @@WindowEvent)
@LineBreak
  @@EventWindow
@LineBreak
  @@EventMenu

@OS MacOS
@LineBreak
@LineBreak
  Note: Sur MacOS vous ne pouvez avoir une 
  barre de menu, qui sera affiché en haut 
  de l'écran. C'est le nouveau designe des 
  applications MacOS. Vous ne pouvez pas avoir 
  de menus sur les fenêtres individuelles.
@EndOS

@Example
@Code
  UsePNGImageDecoder()

  If OpenWindow(0, 200, 200, 200, 100, "Exemple menu image")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
        MenuItem(1, "Ouvrir"   + Chr(9) + "Ctrl+O"))
        MenuItem(2, "Sauvegarder"   + Chr(9) + "Ctrl+S"))
        MenuBar()
        MenuItem(3, "Quitter"  + Chr(9) + "Ctrl+Q")
    EndIf
  
    Repeat : Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@Image createmenu.png

@SeeAlso
  @@CreateImageMenu, @@CreatePopupMenu, 
  @@CreatePopupImageMenu, @@FreeMenu, 
  @@MenuTitle, @@MenuItem, @@MenuBar, 
  @@OpenSubMenu
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CreateImageMenu(#Menu, FenetreID [, Options])

@Description
  Crée un nouveau menu image  sur la fenêtre 
  spécifiée.
  
@Parameter "#Menu"
  Le numéro d'identification du menu.
@LineBreak
@LineBreak 
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer automatiquement 
  ce numéro.
  
@Parameter "FenetreID"
  La fenêtre qui accueille le nouveau menu.
@LineBreak
@LineBreak   
  Ce numéro peut être obtenu avec la fonction 
  @@WindowID.

@OptionalParameter "Options"
  Pas d'options.

@ReturnValue 
  Renvoie une valeur non nulle en cas de succès, 
  zéro sinon.@LineBreak 
  Si @#PB_Any a été utilisé le numéro du menu 
  est renvoyé en cas de succès.

@Remarks
  Une fois créé, il devient le menu courant 
  et il est alors possible d'utiliser les 
  fonctions @@MenuTitle, @@MenuItem, @@MenuBar, 
  et @@OpenSubMenu pour remplir le menu.
@LineBreak
@LineBreak
  Pour gérer les évènements relatifs aux menus, 
  voir la description des commandes suivantes:
@LineBreak
@LineBreak
  @@WaitWindowEvent (ou @@WindowEvent)
@LineBreak
  @@EventWindow
@LineBreak
  @@EventMenu

@Example
@Code
  If OpenWindow(0, 200, 200, 220, 120, "Exemple de menu contextuel")
    UsePNGImageDecoder()           ; Pour utiliser les images png
    If CreateImage(0,16,16,32)     ; Obligatoirement aux dimensions: 16x16
      StartDrawing(ImageOutput(0)) ; Un petit dessin
      Box(0,0,15,15,RGB(255,255,128))
      DrawRotatedText(-7, 5, "->", 45, RGB(255,0,128))
      StopDrawing()
    EndIf
                                   ; On peut aussi charger une icône toute prête.
    If LoadImage(1,#PB_Compiler_Home + "Examples\Sources\Data\ToolBar\Open.png")         
    If CreateImageMenu(0, WindowID(0)) ; La création du menu contextuel commence...
      MenuTitle("Projet")        
        MenuItem(1, "Ouvrir"   +Chr(9)+"Ctrl+O",ImageID(1)) ; Ajout de l'icône
        MenuItem(2, "Enregistrer"   +Chr(9)+"Ctrl+E")
        MenuItem(3, "Enregistrer sous"+Chr(9)+"Ctrl+R")
        MenuItem(4, "Quitter"  +Chr(9)+"Alt+F4",ImageID(0)) ; Ajout de l'image perso
        MenuBar()
        OpenSubMenu("Fic&hiers récents")
          MenuItem(5, "PureBasic.exe")
          MenuItem(6, "Test.txt")
        CloseSubMenu()

    EndIf
    Repeat
      Event = WaitWindowEvent()
      Select Event                        ; Examine quel type d'évènement est survenu sur la fenêtre
        Case #PB_Event_RightClick         ; Le bouton droit de la souris a été clické =>
          DisplayPopupMenu(0,WindowID(0)) ; On affiche le menu contextuel
        
        Case #PB_Event_Menu      ; Un élément du menu a été sélectionné
          Select EventMenu()     ; On recupère le numéro de cet élement...
            Case 1 : Debug "Menu : Ouvrir"
            Case 2 : Debug "Menu : Enregistrer"
            Case 3 : Debug "Menu : Enregistrer sous"
            Case 4 : End
            Case 5 : Debug "Menu : PureBasic.exe"
            Case 6 : Debug "Menu : Text.txt"
          EndSelect

      EndSelect
    Until Event = #PB_Event_CloseWindow
  EndIf
  EndIf
@EndCode
  
@SeeAlso
  @@CreateMenu, @@CreatePopupMenu, 
  @@CreatePopupImageMenu, @@FreeMenu, 
  @@MenuTitle, @@MenuItem, @@MenuBar, 
  @@OpenSubMenu
   
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CreatePopupMenu(#Menu) 

@Description
  Crée un nouveau menu contextuel (PopUp).
  
@Parameter "#Menu"
  Le numéro d'identification du menu.
@LineBreak
@LineBreak 
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer automatiquement 
  ce numéro.

@ReturnValue 
  Renvoie une valeur non nulle en cas de succès, 
  zéro sinon.@LineBreak 
  Si @#PB_Any a été utilisé le numéro du menu 
  est renvoyé en cas de succès.

@Remarks 
  Il est possible d'utiliser des images en 
  créant un menu popup avec CreatePopupImageMenu.
@LineBreak
@LineBreak  
  Une fois créé, il devient le menu courant 
  et il est alors possible d'utiliser les 
  fonctions @@MenuTitle, @@MenuItem, @@MenuBar, 
  et @@OpenSubMenu pour remplir le menu.
@LineBreak
@LineBreak  
  La fonction @@DisplayPopupMenu sera ensuite 
  utilisée pour afficher ce menu contextuel à 
  l'écran.  
@LineBreak
@LineBreak
  Pour gérer les évènements relatifs aux menus, 
  voir la description des commandes suivantes:
@LineBreak
@LineBreak
  @@WaitWindowEvent (ou @@WindowEvent)
@LineBreak
  @@EventWindow
@LineBreak
  @@EventMenu

@Example
@Code
  If OpenWindow(0, 200, 200, 220, 120, "Exemple de menu contextuel")
    If CreatePopupMenu(0)        ; La création du menu contextuel commence...
      MenuTitle("Projet")        ; Vous pouvez utiliser toutes les commandes relatives au menu,
        MenuItem(1, "Ouvrir")    ; comme si c'était un menu normal...
        MenuItem(2, "Enregistrer")
        MenuItem(3, "Enregistrer sous")
        MenuItem(4, "Quitter")
        MenuBar()
        OpenSubMenu("Fic&hiers récents")
          MenuItem(5, "PureBasic.exe")
          MenuItem(6, "Test.txt")
        CloseSubMenu()

    EndIf
    Repeat
      Event = WaitWindowEvent()
      Select Event                        ; Examine quel type d'évènement est survenu sur la fenêtre
        Case #PB_Event_RightClick         ; Le bouton droit de la souris a été clické =>
          DisplayPopupMenu(0,WindowID(0)) ; On affiche le menu contextuel
        
        Case #PB_Event_Menu      ; Un élément du menu a été sélectionné
          Select EventMenu()     ; On recupère le numéro de cet élement...
            Case 1 : Debug "Menu : Ouvrir"
            Case 2 : Debug "Menu : Enregistrer"
            Case 3 : Debug "Menu : Enregistrer sous"
            Case 4 : End
            Case 5 : Debug "Menu : PureBasic.exe"
            Case 6 : Debug "Menu : Text.txt"
          EndSelect

      EndSelect
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode
@Image createpopupmenu.png

@SeeAlso
  @@CreatePopupImageMenu, @@DisplayPopupMenu, 
  @@CreateMenu, @@CreateImageMenu, @@FreeMenu, 
  @@MenuTitle, @@MenuItem, @@MenuBar, 
  @@OpenSubMenu

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CreatePopupImageMenu(#Menu [, Options]) 

@Description
  Crée un nouveau menu contextuel image.
  
@Parameter "#Menu"
  Le numéro d'identification du menu.
@LineBreak
@LineBreak 
  @ReferenceLink "purebasic_objects" "#PB_Any" peut être utilisé pour générer automatiquement ce numéro.

@OptionalParameter "Options"
  Pas d'options.

@ReturnValue 
  Renvoie une valeur non nulle en cas de succès, zéro sinon.@LineBreak 
  Si @#PB_Any a été utilisé le numéro du menu est renvoyé en cas de succès.

@Remarks   
  Une fois créé, il devient le menu courant et il est alors possible d'utiliser les 
  fonctions @@MenuTitle, @@MenuItem, @@MenuBar, et @@OpenSubMenu pour remplir le menu.
@LineBreak
@LineBreak
  La fonction @@DisplayPopupMenu sera ensuite 
  utilisée pour afficher ce menu contextuel à 
  l'écran.  
@LineBreak
@LineBreak
  Pour gérer les évènements relatifs aux menus, 
  voir la description des commandes suivantes:
@LineBreak
@LineBreak
  @@WaitWindowEvent (ou @@WindowEvent)
@LineBreak
  @@EventWindow
@LineBreak
  @@EventMenu

@Example
@Code
  If OpenWindow(0, 200, 200, 220, 120, "Exemple de menu contextuel")
    UsePNGImageDecoder()           ; Pour utiliser les images png
    If CreateImage(0,16,16,32)     ; Obligatoirement aux dimensions: 16x16
      StartDrawing(ImageOutput(0)) ; Un petit dessin
      Box(0,0,15,15,RGB(255,255,128))
      DrawRotatedText(-7, 5, "->", 45, RGB(255,0,128))
      StopDrawing()
    EndIf
                                   ; On peut aussi charger une icône toute prête.
    If LoadImage(1,#PB_Compiler_Home + "examples\sources\Data\ToolBar\Open.png")         
    If CreatePopupImageMenu(0) ; La création du menu contextuel commence...
      ;MenuTitle("Projet")        ; Décommenter pour voir la différence
        MenuItem(1, "Ouvrir",ImageID(1)) ; Ajout de l'icône
        MenuItem(2, "Enregistrer")
        MenuItem(3, "Enregistrer sous")
        MenuItem(4, "Quitter",ImageID(0)) ; Ajout de l'image perso
        MenuBar()
        OpenSubMenu("Fic&hiers récents")
          MenuItem(5, "PureBasic.exe")
          MenuItem(6, "Test.txt")
        CloseSubMenu()

    EndIf
    Repeat
      Event = WaitWindowEvent()
      Select Event                        ; Examine quel type d'évènement est survenu sur la fenêtre
        Case #PB_Event_RightClick         ; Le bouton droit de la souris a été clické =>
          DisplayPopupMenu(0,WindowID(0)) ; On affiche le menu contextuel
        
        Case #PB_Event_Menu      ; Un élément du menu a été sélectionné
          Select EventMenu()     ; On recupère le numéro de cet élement...
            Case 1 : Debug "Menu : Ouvrir"
            Case 2 : Debug "Menu : Enregistrer"
            Case 3 : Debug "Menu : Enregistrer sous"
            Case 4 : End
            Case 5 : Debug "Menu : PureBasic.exe"
            Case 6 : Debug "Menu : Text.txt"
          EndSelect

      EndSelect
    Until Event = #PB_Event_CloseWindow
  EndIf
  EndIf
@EndCode

@SeeAlso
  @@CreatePopupMenu, @@DisplayPopupMenu,
  @@CreateMenu, @@CreateImageMenu, @@FreeMenu, @@MenuTitle, @@MenuItem, @@MenuBar, @@OpenSubMenu, @@SysTrayIconMenu

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function DisplayPopupMenu(#Menu, FenetreID, [X, Y])

@Description
  Affiche un Menu contextuel (pop-up).

@Parameter "#Menu"
  Le menu contextuel, avec ou sans images, 
  à afficher. 
  
@Parameter "FenetreID"
  La fenêtre qui accueille le nouveau menu 
  contextuel.
@LineBreak
@LineBreak   
  Ce numéro peut être obtenu avec la fonction 
  @@WindowID.

@OptionalParameter "X, Y"
  Les coordonnées écran où apparaîtra le menu 
  contextuel, en pixel depuis le coin en haut 
  et à gauche de l'écran primaire.
@LineBreak
@LineBreak
  Si ce paramètre n'est pas spécifié, le menu 
  est affiché à la position de la souris.

@NoReturnValue
  
@Remarks
  Le menu contextuel se ferme automatiquement 
  quand on clique sur un menu ou quand on clique 
  en dehors du menu.

@Example
@Code
  If OpenWindow(0, 200, 200, 220, 120, "Exemple de menu contextuel")
    If CreatePopupMenu(0)        ; La création du menu contextuel commence...
      MenuTitle("Projet")        ; Vous pouvez utiliser toutes les commandes relatives au menu,
        MenuItem(1, "Ouvrir")    ; comme si c'était un menu normal...
        MenuItem(2, "Enregistrer")
        MenuItem(3, "Enregistrer sous")
        MenuItem(4, "Quitter")
        MenuBar()
        OpenSubMenu("Fic&hiers récents")
          MenuItem(5, "PureBasic.exe")
          MenuItem(6, "Test.txt")
        CloseSubMenu()

    EndIf
    Repeat
      Event = WaitWindowEvent()
      Select Event                        ; Examine quel type d'évènement est survenu sur la fenêtre
        Case #PB_Event_RightClick         ; Le bouton droit de la souris a été clické =>
          DisplayPopupMenu(0,WindowID(0)) ; On affiche le menu contextuel
        
        Case #PB_Event_Menu      ; Un élément du menu a été sélectionné
          Select EventMenu()     ; On recupère le numéro de cet élement...
            Case 1 : Debug "Menu : Ouvrir"
            Case 2 : Debug "Menu : Enregistrer"
            Case 3 : Debug "Menu : Enregistrer sous"
            Case 4 : End
            Case 5 : Debug "Menu : PureBasic.exe"
            Case 6 : Debug "Menu : Text.txt"
          EndSelect

      EndSelect
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode
@Image createpopupmenu.png

@SeeAlso
  @@CreatePopupMenu, @@CreatePopupImageMenu
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function DisableMenuItem(#Menu, Element, Etat)

@Description
  Active ou désactive l'élément d'un menu.

@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Element"
  Le numéro du menu à désactiver ou à 
  réactiver.

@Parameter "Etat"
  Le nouvel état d'activation du menu. 
@FixedFont
  @#False: Le menu est activé.
  @#True : Le menu est désactivé.
@EndFixedFont 
  
@NoReturnValue

@Remarks
  Un menu désactivé apparaît généralement en 
  grisé.
  
@Example
@Code
  If OpenWindow(0, 200, 200, 200, 100, "Exemple DisableMenuItem")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
        MenuItem(1, "Ouvrir")
        MenuItem(2, "Enregistrer")
        DisableMenuItem(0,2,1)     ; Désactive le second élément du menu ("Enregistrer")
    EndIf

    Repeat
    Until WaitWindowEvent() = #PB_Event_CloseWindow
  EndIf
@EndCode
@Image disablemenuitem.png

@SeeAlso
  @@MenuItem, @@SetMenuItemState, 
  @@SetMenuItemText

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeMenu(#Menu) 

@Description
  Supprime un menu et libère toutes ses 
  ressources. 
  
@Parameter "#Menu"
  Le menu à supprimer.
@LineBreak  
@LineBreak  
  Si @#PB_All est spécifié, tous les autres 
  menus sont libérés.
   
@NoReturnValue

@Remarks
  Tous les menus restants sont 
  automatiquement supprimés quand 
  le programme se termine. 

@Example
@Code 
   If OpenWindow(0, 200, 200, 300, 100, "Exemple FreeMenu")
    ButtonGadget(0,50,10,190,30,"Supprime le Menu")

    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
      MenuItem(1, "Ouvrir")     
    EndIf
    
    Repeat
      Event = WaitWindowEvent()          
      If Event = #PB_Event_Gadget  
        Select EventGadget()
          Case 0 
            If IsMenu(0)  ; Le menu existe-t-il ?
              FreeMenu(0) ; Si oui alors on le supprime
            EndIf           
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode  
  
@SeeAlso
  @@CreateMenu, @@CreateImageMenu, 
  @@CreatePopupMenu, 
  @@CreatePopupImageMenu
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = GetMenuItemState(#Menu, Element)

@Description
  Renvoie l'état coché d'un élément d'un menu.
  
@Parameter "#Menu"
  Le menu à utiliser.
  
@Parameter "Element"
  Le numéro de l'élément.

@ReturnValue
  Renvoie une valeur non nulle si l'élément 
  est coché (checké), zéro sinon.

@Remarks
  La coche peut être affichée ou enlevée 
  grâce à la commande @@SetMenuItemState.

@Example
@Code
  If OpenWindow(0, 200, 200, 300, 100, "Exemple GetMenuItemState")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
        MenuItem(1, "Changé")
        SetMenuItemState(0,1,1)    ; Affiche l'élément du menu comme étant coché.
    EndIf
    Repeat
      Evenement = WaitWindowEvent()          ; Attente d'un évenement
      If Evenement = #PB_Event_Menu          ; Evenement de type 'Menu'
        If EventMenu() = 1             ; Le premier élément du menu a été sélectionné
          If GetMenuItemState(0,1) = 1   ; Etat actuel de l'élément = coché
            SetMenuItemState(0,1,0)      ; On le décoche
          Else                           ; Etat actuel de l'élément = décoché
            SetMenuItemState(0,1,1)      ; On le coche
          EndIf
        EndIf
      EndIf
    Until Evenement = #PB_Event_CloseWindow
  EndIf
@EndCode
@Image setmenuitemstate.png

@SeeAlso
  @@SetMenuItemState, @@GetMenuItemText, 
  @@MenuItem

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = GetMenuItemText(#Menu, Element)

@Description
  Renvoie le texte d'un menu.
  
@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Element"
  L'élément du menu.

@ReturnValue
  Renvoie le texte du menu déroulant.
 
@Example
@Code 
  If OpenWindow(0, 200, 200, 300, 100, "Exemple GetMenuItemText")
  If CreateMenu(0, WindowID(0))
    MenuTitle("Projet")
    MenuItem(1, "Nouveau")
    MenuItem(2, "Ouvrir") 
  EndIf
  
  Repeat
    Event = WaitWindowEvent()          
    If Event = #PB_Event_Menu          ; un menu a été cliqué
      Select EventMenu()              
        Case 1
          ShowDebugOutput()
          Debug " le 1er menu a été cliqué dont le texte est : " + GetMenuItemText(0,1)   
        Case 2
          ShowDebugOutput()
          Debug " le 2ième menu a été cliqué dont le texte est : " + GetMenuItemText(0,2)
      EndSelect
    EndIf
  Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode
 
@SeeAlso
  @@SetMenuItemText, @@MenuItem

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = GetMenuTitleText(#Menu, Titre)

@Description
  Renvoie le texte d'un titre d'un menu.
  
@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Titre"
  L'index du titre du menu.

@ReturnValue
  Renvoie le texte de l'en-tête du menu.
 
@Example
@Code 
  If OpenWindow(0, 200, 200, 300, 100, "Exemple GetMenuItemText")
  If CreateMenu(0, WindowID(0))
    MenuTitle("Projet")
    MenuItem(1, "Nouveau")
    MenuItem(2, "Ouvrir") 
  EndIf
  
  Repeat
    Event = WaitWindowEvent()          
    If Event = #PB_Event_Menu          ; un menu a été cliqué
      Select EventMenu()              
        Case 1
          ShowDebugOutput()
          Debug " le 1er menu a été cliqué qui appartient à : " + GetMenuTitleText(0,0)   
        Case 2
          ShowDebugOutput()
          Debug " le 2ième menu a été cliqué qui appartient à : " + GetMenuTitleText(0,0)
      EndSelect
    EndIf
  Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@MenuTitle, @@SetMenuTitleText
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function HideMenu(#Menu, Etat)

@Description
  Cache ou affiche un menu. 
  
@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Etat"
@FixedFont
  @#True   : Le menu est caché
  @#False  : Le menu est affiché
@EndFixedFont 

@NoReturnValue

@Example Cache un Menu
@Code 
  If OpenWindow(0, 200, 200, 300, 100, "Exemple HideMenu")
  ButtonGadget(10,70,10,150,30,"Cacher le menu")
  If CreateMenu(0, WindowID(0))
    MenuTitle("Projet")
    MenuItem(1, "Nouveau")
    MenuItem(2, "Ouvrir") 
  EndIf
  
  Repeat
    Event = WaitWindowEvent()          
    If Event = #PB_Event_Gadget  
      Select EventGadget()
        Case 10 
          HideMenu(0,#True) ; cache le menu
      EndSelect
      
    EndIf
  Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode  

@Example Affiche un Menu
@Code 
If OpenWindow(0, 200, 200, 300, 100, "Exemple HideMenu")
  ButtonGadget(0,70,10,150,30,"Affiche le menu")
  If CreateMenu(0, WindowID(0))
    MenuTitle("Projet")
    MenuItem(1, "Nouveau")
    MenuItem(2, "Ouvrir") 
  EndIf
  
  HideMenu(0,#True) ; Cache le menu
  
  Repeat
    Event = WaitWindowEvent()          
    If Event = #PB_Event_Gadget  
      Select EventGadget()
        Case 0 
        HideMenu(0,#False) ; Affiche le menu  
      EndSelect
      
    EndIf
  Until Event = #PB_Event_CloseWindow
EndIf
@EndCode 

@Example Change de Menu
@Code 
  If OpenWindow(0, 200, 200, 300, 100, "Exemple HideMenu")
  ButtonGadget(0,70,10,150,30,"Change de menu")
  If CreateMenu(0, WindowID(0))
    MenuTitle("Projet")
    MenuItem(1, "Nouveau")
    MenuItem(2, "Ouvrir") 
  EndIf
  If CreateMenu(1, WindowID(0))
    MenuTitle("Menu")
    MenuItem(1, "Enregistrer")
    MenuItem(2, "Quitter") 
  EndIf
  
  HideMenu(0,#False) ; Affiche le menu "Projet" 
  Repeat
    Event = WaitWindowEvent()          
    If Event = #PB_Event_Gadget  
      Select EventGadget()
        Case 0 
          HideMenu(1,#False) ; Affiche le menu "Menu" 
      EndSelect
      
    EndIf
  Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode 

@SeeAlso
  @@CreateMenu, @@CreateImageMenu

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = IsMenu(#Menu)

@Description
  Teste si un menu est correctement initialisé. 
   
@Parameter "#Menu"
    Le menu à utiliser.

@ReturnValue
  Renvoie une valeur non nulle le le menu est 
  valide, zéro sinon.

@Remarks
  Cette fonction a été créée pour pouvoir passer 
  n'importe quelle valeur en paramètre sans 
  qu'il ne puisse y avoir de plantage.

@Example
@Code 
   If OpenWindow(0, 200, 200, 300, 100, "Exemple FreeMenu")
    ButtonGadget(0,50,10,190,30,"Supprime le Menu")

    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
      MenuItem(1, "Ouvrir")     
    EndIf
    
    Repeat
      Event = WaitWindowEvent()          
      If Event = #PB_Event_Gadget  
        Select EventGadget()
          Case 0 
            If IsMenu(0)  ; Le menu existe-t-il ?
              FreeMenu(0) ; Si oui alors on le supprime
            EndIf           
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode  

@SeeAlso
  @@CreateMenu, @@CreatePopupMenu, 
  @@CreateImageMenu, 
  @@CreatePopupImageMenu
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function MenuBar() 

@Description
  Crée une barre de séparation horizontale dans 
  un menu déroulant.
  
@NoParameters

@NoReturnValue

@Example
@Code
  If OpenWindow(0, 200, 200, 200, 100, "Exemple MenuBar")
    If CreateMenu(0, WindowID(0))  ; la création du menu commence ici....
      MenuTitle("Projet")
        MenuItem(1, "Ouvrir")
        MenuBar()                 ; la barre de séparation sera insérée ici
        MenuItem(4, "Fermer")
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@Image menubar.png

@SeeAlso
  @@MenuTitle, @@MenuItem, @@OpenSubMenu, 
  @@CreateMenu, @@CreatePopupMenu

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = MenuHeight() 

@Description
  Renvoie la hauteur de la barre de menu.
 
@NoParameters

@ReturnValue
  Renvoie la hauteur, en pixels, de la barre de 
  menu. 

@Remarks
  Utile pour calculer la hauteur de la zone 
  d'affichage (zone client) d'une fenêtre.
@LineBreak
@LineBreak 
  @Bold "Linux & MacOS": Cette commande renverra 
  toujours 0, car la barre de menu ne fait pas 
  partie intégrante de la fenêtre (elle est 
  toujours située dans la barre principale tout 
  en haut de l'écran). Ainsi MenuHeight() peut 
  être utilisé sous tous les OS pour ajuster la 
  taille de la fenêtre en fonction de la hauteur 
  de son menu.

@Example
@Code
  If OpenWindow(0, 200, 200, 300, 100, "Exemple  MenuHeight")
    ButtonGadget(0,50,10,190,30,"Affiche la hauteur du Menu")

    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
      MenuItem(1, "Ouvrir")     
    EndIf
    
    Repeat
      Event = WaitWindowEvent()          
      If Event = #PB_Event_Gadget  
        Select EventGadget()
          Case 0 
            ShowDebugOutput()
            Debug MenuHeight()
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function MenuItem(ElementID, Texte$ [, ImageID]) 

@Description
  Crée une nouvelle entrée dans un menu.
 
@Parameter "ElementID"
  Le numéro d'identification de la nouvelle 
  entrée du menu.
@LineBreak
@LineBreak 
  Ce numéro sera utilisé dans les évènements Menu 
  et renvoyé par @@EventMenu, utilisé aussi dans 
  certaines commande comme @@SetMenuItemState. 
@LineBreak
@LineBreak 
  Cette valeur doit être entre 0 et 65535.

@Parameter "Texte$"
  Le texte de l'élément.
@OS Windows
@LineBreak
@LineBreak 
  Sous Windows, vous pouvez utiliser le caractère 
 '&' pour souligner une lettre :
@LineBreak
@LineBreak
  "&Fichier" s'affichera ainsi : @underline "F"ichier.
@EndOS

@OptionalParameter "ImageID"
  L'image qui sera affichée pour cet élément.@LineBreak 
  Le menu doit avoir été créé avec 
  @@CreateImageMenu ou @@CreatePopupImageMenu.
@LineBreak
@LineBreak  
  'ImageID' peut être facilement obtenu avec 
  @@ImageID. 

@NoReturnValue

@Remarks
  Les dimensions des images sont de 16x16 pixels.
@LineBreak
@LineBreak 
  Si vous désirez associer un raccourci clavier 
  (qui sera créé avec la commande 
  @@AddKeyboardShortcut, sauf sous MacOS) 
  aligné sur le côté droit du menu (par exemple, 
  "Sauvegarder    Ctrl+S") alors vous pouvez 
  utiliser le caractère 'tabulation' pour donner 
  l'espacement correct. Le caractère 'Tabulation' 
  a le code ASCII 9, donc il faudra utiliser la 
  commande Chr(9) comme indiqué ci-dessous:
@Code
  MenuItem(1, "&Ouvrir" + Chr(9) + "Ctrl+O")
@EndCode

  Les raccourcis supportés sont:
@Code
  - "Ctrl"  : touche 'Contrôle'
  - "Shift" : touche 'Majuscule'
  - "Alt"   : touche 'Alt'
  - "Cmd"   : touche 'Commande/Pomme' (MacOS seulement)
@EndCode

  Ils peuvent être combinés entre eux à l'aide 
  du caractère "+": "Enregistrer sous" + Chr(9) 
  + "Ctrl+Shift+S". @LineBreak
  Sous MacOS, quand un raccourci est défini dans 
  le menu, il n'est pas nécessaire de le 
  redéclarer à l'aide de la fonction 
  @@AddKeyboardShortcut.
@LineBreak
@LineBreak
  @Bold "MacOS" : les éléments 'Quitter', 
  'Préférences' et 'A propos' sont considérés 
  comme spéciaux et doivent être placés dans le 
  menu 'Application' pour avoir l'apparence et 
  le comportement des applications MacOS. 
  PureBasic fournit les constantes 
  @#PB_Menu_Quit, @#PB_Menu_Preferences et 
  @#PB_Menu_About pour gérer ce genre d'éléments 
  de menu. 
  Lorsqu'une de ces constantes est détectée, 
  l'élément n'est pas inséré à la place courante, 
  mais dans le menu 'Application'. Si un 
  raccourci a été associé, il est simplement 
  ignoré et remplacé par le raccourci standard. 
  Ces 3 constantes ne sont pas définies sur les 
  autres systèmes d'exploitation, afin de 
  permettre une numérotation flexible sur ces OS.

@Example
@Code
  ;Note : Sous Windows Vista et suivant, pour que le trait souligné apparaisse en permanence, 
  ;décochez l'option : 'Masquer les lettres soulignées pour la navigation au clavier jusqu'à ce que j'appuie sur la touche Alt'
  ;dans les propriétés du bureau puis affichage / Apparence / Effets.

  If OpenWindow(0, 200, 200, 200, 100, "Exemple MenuItem")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
        MenuItem(1, "Ouvrir")        ; Elément normal
        MenuItem(2, "&Enregistrer")  ; Elément avec une lettre soulignée.
                                     ; Le trait souligné n'apparaîtra que si le menu est appelé avec F10 ou ALT.
        MenuItem(3, "Quitter"+Chr(9)+"ECHAP")  ; Elément avec un raccourci clavier affiché sur la droite.
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode

@Image menuitem.png

@SeeAlso
  @@MenuTitle, @@MenuBar, @@OpenSubMenu

@SupportedOS

;--------------------------------------------------------------------------------------------------------
@Function Resultat = MenuID(#Menu)

@Description
  Renvoie l'identifiant système d'un menu. 

@Parameter "#Menu"
  Le menu à utiliser.
  
@ReturnValue
  Renvoie le numéro du menu. 
  
@Remarks
  L'identifiant est parfois appelé 'Handle'. 
  Pour plus d'informations consultez le chapitre 
  @ReferenceLink "handles" "Numéros et Identifiants (Handles)".

@Example
@Code  
    If OpenWindow(0, 200, 200, 300, 100, "Exemple  MenuID")
    ButtonGadget(0,70,10,150,30,"Affiche le MenuID")

    hMenu= CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
      MenuItem(1, "Ouvrir")     

    Repeat
      Event = WaitWindowEvent()          
      If Event = #PB_Event_Gadget  
        Select EventGadget()
          Case 0 
            ShowDebugOutput()
            Debug MenuID(0) 
            Debug hMenu
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode 
  
@SeeAlso
  @@CreateMenu, @@CreatePopupMenu, 
  @@CreateImageMenu, @@CreatePopupImageMenu

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function MenuTitle(Titre$)

@Description
  Crée un nouveau titre de menu.
  
@Parameter "Titre$"
  Le texte du nouveau titre de menu.
@OS Windows
@LineBreak
@LineBreak
  Sous Windows, vous pouvez utiliser le caractère & pour
  souligner une lettre si le thème graphique le permet, ainsi :
@LineBreak
@LineBreak
  "&Fichier" affichera une ligne de menu 
  @Underline "F"ichier .
  
@Remarks
  @@MenuTitle ne peut pas être utilisés dans les @Link "createpopupmenu" "menus popup",
  car ils sont dépourvus d'en-têtes de menus.
  
@Example
@Code
  ;Note : Sous Windows Vista et suivant, pour que le trait souligné apparaisse en permanence, 
  ;décochez l'option : 'Masquer les lettres soulignées pour la navigation au clavier jusqu'à ce que j'appuie sur la touche Alt'
  ;dans les propriétés du bureau puis affichage / Apparence / Effets.
  If OpenWindow(0, 200, 200, 200, 100, "Exemple MenuTitle")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")     ; Titre normal
        MenuItem(1, "Ouvrir")  
        MenuItem(2, "Fermer")
      MenuTitle("&Edition")       ; Titre avec une lettre soulignée. Le trait souligné n'apparaîtra que
                                  ; si le menu est appelé avec F10 ou ALT.
        MenuItem(3, "Défaire")
        MenuItem(4, "Refaire")
      MenuTitle("About")       ; Titre seul
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@Image menutitle.png

@SupportedOS
  
;--------------------------------------------------------------------------------------------------------

@Function OpenSubMenu(Texte$ [, ImageID])

@Description
  Crée un sous menu.
  
@Parameter "Texte$"
  Le texte du nouveau sous menu.
@OS Windows
@LineBreak
@LineBreak
  Vous pouvez utiliser le caractère & pour
  souligner une lettre, ainsi :
@LineBreak
  "&Fichier" affichera une ligne de menu 
  @Underline "F"ichier avec le F souligné.
  
@OptionalParameter "ImageID"
  L'image affichée pour cet élément.@LineBreak 
  Le menu doit avoir été créé avec 
  @@CreateImageMenu ou @@CreatePopupImageMenu.
@LineBreak
@LineBreak  
  'ImageID' peut être facilement obtenu avec 
  @@ImageID. 

@Remarks
  Il n'est pas possible de renommer un OpenSubMenu aisément, sauf sous Windows qui lui, 
  renvoie un numéro de menu.@LineBreak 
  Ex:@LineBreak 
  SubMenu = OpenSubMenu("Nouveau")@LineBreak 
  SetMenuItemText(0, SubMenu, "Ouvrir")@LineBreak 
  Sous Linux et MacOS vous devrez jongler entre plusieurs menus ou détruire et recréer le 
  menu à convenance.
  
@Example
@Code
  If OpenWindow(0, 200, 200, 220, 100, "Exemple SubMenu")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet") 
        MenuItem(1, "Ouvrir")  
        MenuItem(2, "Fermer")
        MenuBar()
        OpenSubMenu("Fichiers Récents...") ; Crée un sous-menu
          MenuItem( 3, "C:\Autoexec.bat")
          MenuItem( 4, "D:\Teste.txt")
        CloseSubMenu()                     ; Termine la création du sous-menu
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode

@Image opensubmenu.png

@SeeAlso
  @@CloseSubMenu, @@MenuTitle, 
  @@MenuItem, @@MenuBar

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetMenuItemState(#Menu, Element, Etat)

@Description
  Change l'état coché d'un élément d'un menu. 
  
@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Element"
  Le menu qui sera coché.

@Parameter "Etat"
@FixedFont
  @#False : La coche n'apparait pas. 
  @#True  : La coche apparait.
@EndFixedFont

@NoReturnValue

@Remarks  
  @@GetMenuItemState peut être utilisé pour 
  récupérer l'état actuel de l'élément du menu.

@Example
@Code
  If OpenWindow(0, 200, 200, 200, 100, "Exemple SetMenuItemState")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
        MenuItem(1, "Changé")
        SetMenuItemState(0,1,1)    ; Coche l'élément 1 du menu.
    EndIf
    Repeat : Until WaitWindowEvent()=#PB_Event_CloseWindow
  EndIf
@EndCode
@Image setmenuitemstate.png

@SeeAlso
  @@GetMenuItemState

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetMenuItemText(#Menu, Element, Texte$)

@Description
  Change le texte d'un élément d'un menu.
  
@Parameter "#Menu"
  Le menu à utiliser.
  
@Parameter "Element"
  Le numéro de l'élément.
  
@Parameter "Texte$"
  Le nouveau texte. 
  
@NoReturnValue

@Example
@Code
  If OpenWindow(0, 200, 200, 300, 100, "Exemple  SetMenuItemText")
    ButtonGadget(0,70,10,150,30,"Changer le menu Ouvrir")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
      MenuItem(1, "Ouvrir")     
    EndIf
    
    Repeat
      Event = WaitWindowEvent()          
      If Event = #PB_Event_Gadget  
        Select EventGadget()
          Case 0 
           SetMenuItemText(0,1,"Nouveau") ; Change le menu "Ouvrir" par "Nouveau" 
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode  
  
@SeeAlso
  @@GetMenuItemText, @@MenuItem

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function SetMenuTitleText(#Menu, Titre, Texte$)

@Description
  Change le texte d'un titre d'un menu.
  
@Parameter "#Menu"
  Le menu à utiliser.
  
@Parameter "Titre"
  Le numéro du titre du menu.
  
@Parameter "Texte$"
  Le nouveau texte. 
  
@NoReturnValue

@Example
@Code
  If OpenWindow(0, 200, 200, 300, 100, "Exemple SetMenuTitleText")
    ButtonGadget(0,70,10,150,30,"Changer le menu Projet")
    If CreateMenu(0, WindowID(0))
      MenuTitle("Projet")
      MenuItem(1, "Ouvrir")     
    EndIf
    
    Repeat
      Event = WaitWindowEvent()          
      If Event = #PB_Event_Gadget  
        Select EventGadget()
          Case 0 
           SetMenuTitleText(0,0,"Fichier") ; Change le menu "Projet" par "Fichier" 
        EndSelect
      EndIf
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@GetMenuTitleText, @@MenuTitle

@SupportedOS


;--------------------------------------------------------------------------------------------------------

@Function BindMenuEvent(#Menu, Element, @Callback())

@Description
  Ajoute un événement du menu grâce à une 
  procédure dite de 'callback'. 
  
@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Element"
  L'élément de menu.

@Parameter "@Callback()"
  La procédure à appeler lorsque 
  l'événement se produit. Elle doit être 
  déclarée comme ceci:
@Code
  Procedure EventHandler()
    ; Du code ici...
  EndProcedure
@EndCode
  Les fonction de PureBasic comme 
  @@EventGadget, @@EventWindow, 
  @@EventMenu, @@EventType et @@EventData 
  sont disponibles pour obtenir plus 
  d'informations sur l'événement.
@LineBreak
@LineBreak   
  Note: @@WindowEvent et @@WaitWindowEvent ne 
  devraient jamais être appelées à l'intérieur 
  du Callback(), car ça peut verrouiller  un 
  programme ou occasionner un comportement erroné.

@NoReturnValue

@Remarks
  C'est un moyen supplémentaire pour 
  gérer les événements dans PureBasic, 
  qui fonctionne sans problème avec les 
  habituelles commandes @@WindowEvent et 
  @@WaitWindowEvent. @LineBreak
  Cet évènement peut être supprimé avec 
  @@UnbindMenuEvent.

@Example
@Code
  Procedure TestHandler()
    Debug "Evènement : Menu -Test-"
  EndProcedure
  
  Procedure QuitHandler()
    Debug "Evènement : Menu -Quitter-"
    End
  EndProcedure
  
  OpenWindow(0, 100, 100, 200, 50, "Test Clic", #PB_Window_SystemMenu)
  
  CreateMenu(0, WindowID(0))
    MenuTitle("Fichier")
      MenuItem(0, "Test")
      MenuItem(1, "Quitter")
  
  BindMenuEvent(0, 0, @TestHandler())
  BindMenuEvent(0, 1, @QuitHandler())
  
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso 
  @@BindGadgetEvent, 
  @@BindMenuEvent, @@UnbindEvent, 
  @@WindowEvent, @@WaitWindowEvent

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function UnbindMenuEvent(#Menu, Element, @Callback())

@Description
  Supprime un événement d'un menu 
  provenant d'une procédure dite 
  de 'callback'
@LineBreak
@LineBreak
  Si l'événement correspondant n'est 
  pas trouvé, cette commande n'a 
  aucun effet.
 
@Parameter "#Menu"
  Le menu à utiliser.

@Parameter "Element"
  L'élément de menu.
  
@Parameter "@Callback()"
  La procédure de 'Callback' à supprimer.
  
@NoReturnValue

@Example
@Code
  Procedure TestHandler()
    Debug "Evènement : Menu -Test-"
  EndProcedure
  
  Procedure QuitHandler()
    Debug "Evènement : Menu -Quitter-"
    End
  EndProcedure
  
  OpenWindow(0, 100, 100, 200, 50, "Test Clic", #PB_Window_SystemMenu)
  
  CreateMenu(0, WindowID(0))
    MenuTitle("Fichier")
      MenuItem(0, "Test")
      MenuItem(1, "Quitter")
  
  BindMenuEvent(0, 0, @TestHandler())
  BindMenuEvent(0, 1, @QuitHandler())
  
  UnbindMenuEvent(0, 1, @QuitHandler()) ; Supprime l'évènement -Quitter- 
    
  Repeat
    Event = WaitWindowEvent()
  Until Event = #PB_Event_CloseWindow
@EndCode

@SeeAlso 
  @@BindEvent, @@BindGadgetEvent, 
  @@BindMenuEvent, @@WindowEvent, 
  @@WaitWindowEvent

@SupportedOS
