;
; Text3D library documentation
;
; (c) Fantaisie Software
;

@Library Text3D

@Overview

La bibliothèque Text3D est destinée à faciliter 
l'affichage du texte dans le monde de la 3D. 
Il est possible d'utiliser n'importe quelle police, 
le texte peut être déplacé ou sa taille peut changer 
en fonction de l'objet à suivre.
@LineBreak
@LineBreak
@@InitEngine3D doit être appelé avec succès avant 
d'utiliser ces fonctions.

@CommandList

@ExampleFile All Text3D.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = CreateText3D(#Texte3D, Texte$ [, Police$, Hauteur, Couleur])

@Description
  Crée un nouveau texte 3D. 

@Parameter "#Texte3D"
  Le numéro du nouveau texte 3D. 
@LineBreak
@LineBreak
  @ReferenceLink "purebasic_objects" "#PB_Any" 
  peut être utilisé pour générer 
  automatiquement ce numéro.
  
@Parameter "Texte$"
  Le texte à afficher. 
@LineBreak
@LineBreak  
  Il peut être modifié avec @@Text3DCaption.
  
@OptionalParameter "Police$"
  Le nom de la police à utiliser.
  @LineBreak
  La police doit être présente dans le chemin @@Add3DArchive et doit être définie 
  dans le fichier 'proper-definitions.fontdef'.

@OptionalParameter "Hauteur"
  La hauteur de la police à utiliser.

@OptionalParameter "Couleur"
  La couleur RGBA à utiliser.
@LineBreak
@LineBreak  
  Pour obtenir une couleur valide, utiliser @@RGBA. 
  @LineBreak
  La couleur peut être changée avec @@Text3DColor.

@ReturnValue
  Renvoie une valeur non nulle si le texte a été 
  créé avec succès ou zéro en cas d'erreur.
  @LineBreak  
  Si @#PB_Any a été utilisé pour le paramètre 
  #Texte3D alors le nouveau numéro généré 
  est renvoyé en cas de succès.
   
@Remarks
  Pour être affiché, le texte doit être relié à un LibraryLink "node" "noeud" or an @LibraryLink "entity" "entité".
  
@Example
@Code
  ; Initialisation du monde 3D
InitEngine3D()
InitSprite()
InitKeyboard()
InitMouse()
Add3DArchive(#PB_Compiler_Home + "examples/3d/Data/Textures", #PB_3DArchive_FileSystem)
Add3DArchive(#PB_Compiler_Home + "examples/3d/Data/fonts", #PB_3DArchive_FileSystem)
Parse3DScripts()

  ; Ouverture de la fenêtre
OpenWindow(0,0,0,1000,1000,"Texte 3D",#PB_Window_ScreenCentered|#PB_Window_SystemMenu)
OpenWindowedScreen(WindowID(0),0,0,1000,1000,1,0,0)

  ; Création du monde 3D    
CreateSphere(0, 2)
CreateMaterial(0, LoadTexture(0, "clouds.jpg"))
CreateEntity(0, MeshID(0), MaterialID(0))
CreateCamera(0, 0, 0, 100, 100)
MoveCamera(0, 0, 0, 10, #PB_Absolute)    

  ; Création d'un texte 3D
CreateText3D(0, FormatDate("%hh:%ii:%ss", Date()))  ; Création du texte 3D
Text3DColor(0, RGBA(255, 0, 0, 255))                ; Couleur et transparence
Text3DAlignment(0, #PB_Text3D_HorizontallyCentered) ; Alignement du texte
AttachEntityObject(0, "", Text3DID(0))              ; Il est obligatoire de lier un texte 3D à une entité (ou un noeud)
MoveText3D(0, 0.5, 1, 2)                            ; Position du texte 3D
ScaleText3D(0,0.8,0.2,0.5,#PB_Absolute)             ; Dimension du texte 3D


  ; Gestion de la fenêtre, du clavier et de la souris   
 Repeat
  Repeat 
    Event  = WindowEvent() 
    Select Event 
      Case #PB_Event_CloseWindow 
    End 
    EndSelect 
  Until Event = 0
  
  ExamineKeyboard()
  ExamineMouse()
  
  If MouseDeltaX()>0
    MoveEntity(noeud,0.5,0,0)
  ElseIf MouseDeltaX()<0
    MoveEntity(noeud,-0.5,0,0)
  EndIf
  If MouseDeltaY()>0
    MoveEntity(noeud,0,-0.5,0)
  ElseIf MouseDeltaY()<0
    MoveEntity(noeud,0,0.5,0)
  EndIf 
  If MouseButton(#PB_MouseButton_Left) <>0
    End
  EndIf
  If MouseButton( #PB_MouseButton_Right) <>0
    MoveEntity(noeud,0,0,0,#PB_Absolute)
  EndIf
  tiks = MouseWheel()
  If tiks > 0
    MoveEntity(noeud,0,0,1)
    
  EndIf
  If tiks < 0
    MoveEntity(noeud,0,0,-1)
  EndIf 
  If KeyboardPushed(#PB_Key_Escape)
    quitter + 1
  EndIf
  
  If KeyboardPushed(#PB_Key_Space)
    If rotation=1
      rotation=0
    Else 
      rotation=1
    EndIf
  EndIf
  
  ; Barre espace = ON/OFF rotation de l'entité avec le texte 3d attaché à elle
  If rotation =1
    RotateEntity(0, 1, 1, 1, #PB_Relative)
  EndIf
  
  ; Mise à jour de l'heure
  Text3DCaption(0, FormatDate("%hh:%ii:%ss", Date()))
  
  ; Affichage de la scène
  StartDrawing(WindowOutput(0))
  DrawText(0,5,"Souris et Clavier: Espace et Molette souris")  
  DrawText(0,30,".: Echap ou clic gauche pour quitter :.")
  StopDrawing()
  
  RenderWorld()
  
  FlipBuffers()
  
Until KeyboardPushed(#PB_Key_Escape) Or Quitter = 1

End
@EndCode
  
@SeeAlso
  @@FreeText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function FreeText3D(#Texte3D)

@Description
  Libère un texte 3D.

@Parameter "#Texte3D"
  Le texte 3D à libérer. 
@LineBreak
@LineBreak
  Si @#PB_All est spécifié, tous les textes 
  3D restants sont libérés.

@NoReturnValue

@Remarks
  Une fois que le texte est libéré, il ne peut 
  plus être utilisé.
@LineBreak
@LineBreak
  Tout les textes restants sont automatiquement 
  libérés lorsque le programme se termine.

@SeeAlso
  @@CreateText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Text3DID(#Texte3D)

@Description
  Renvoie l'identifiant système unique d'un texte 3D.

@Parameter "#Texte3D"
  Le texte 3D à utiliser.

@ReturnValue
  Renvoie l'identifiant système unique du texte 3D.

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = IsText3D(#Texte3D)

@Description
  Teste si le nombre donné est un texte 3D 
  valide et correctement initialisé. 

@Parameter "#Texte3D"
  Le texte 3D à tester.

@ReturnValue
  Renvoie une valeur non nulle si #Texte3D 
  est un texte valide ou zéro sinon.

@Remarks
  Cette fonction est robuste et peut être 
  utilisée avec n'importe quelle valeur. 
  C'est une bonne façon de s'assurer que 
  le texte est prêt à être utilisé.

@SeeAlso
  @@CreateText3D

@SupportedOS
;--------------------------------------------------------------------------------------------------------

@Function MoveText3D(#Texte3D, X.f, Y.f, Z.f [, Mode])

@Description
  Déplace un texte 3D.

@Parameter "#Texte3D"
  Le texte 3D à utiliser.

@Parameter "X.f, Y.f, Z.f"  
  La nouvelle position du texte.

@OptionalParameter "Mode"
  Le mode de déplacement. Peut être une 
  des valeurs suivantes:
@FixedFont
  @#PB_Relative: Déplacement relatif, à partir de la position courante du texte (par défaut).
  @#PB_Absolute: Déplacement absolu vers la position spécifiée.
@EndFixedFont
 Combiné à l'une des valeurs suivantes:
@FixedFont
  @#PB_Local : Déplacement local.
  @#PB_Parent: Déplacement par rapport à la position du parent.
  @#PB_World : Déplacement par rapport au monde.
@EndFixedFont

@NoReturnValue  

@Example
  Voir @@CreateText3D
  
@SeeAlso
  @@ScaleText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function ScaleText3D(#Texte3D, X.f, Y.f, Z.f [,Mode])

@Description
  Change la taille d'un texte 3D suivant 
  les 3 directions de l'espace. 

@Parameter "#Texte3D"
  Le texte 3D à utiliser.
 
@Parameter "X.f, Y.f, Z.f"
  Les facteurs d'échelle (agrandissement ou 
  rapetissement) en X, Y et Z.

@OptionalParameter "Mode"
 Le mode du changement de taille. Peut être 
 une des valeurs suivantes:
@FixedFont
  @#PB_Relative: Changement relatif, sur la base de la taille initiale (par défaut). Une valeur de 1.0 ne change pas la taille.
  @#PB_Absolute: Changement absolu, dans l'unité du monde.
@EndFixedFont

@NoReturnValue

@Remarks
  Avec le mode @#PB_Relative, la taille sera 
  multipliée par la valeur donnée.
  
@Example
  Voir @@CreateText3D
  
@SeeAlso
  @@MoveText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Text3DCaption(#Texte3D, Texte$)

@Description
  Modifie le texte affiché d'un texte 3D.

@Parameter "#Texte3D"
  Le texte 3D à utiliser.
 
@Parameter "Texte$"
  Le nouveau texte à afficher.

@NoReturnValue
  
@Example
  Voir @@CreateText3D
  
@SeeAlso
  @@CreateText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Text3DColor(#Texte3D, Couleur)

@Description
  Change la couleur d'un texte 3D.

@Parameter "#Texte3D"
  Le texte 3D à utiliser.
 
@Parameter "Couleur"
  La nouvelle couleur @@RGBA et transparence du texte. 

@NoReturnValue
  
@Example
  Voir @@CreateText3D
  
@SeeAlso
  @@CreateText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Text3DAlignment(#Texte3D, Alignement)

@Description
  Modifie l'alignement d'un texte 3D.

@Parameter "#Texte3D"
  Le texte 3D à utiliser.
 
@Parameter "Alignement"
  L'alignement du texte. Peut être une 
  combinaison des valeurs suivantes:
@FixedFont
  @#PB_Text3D_Left  : Le texte sera aligné à gauche
  @#PB_Text3D_Top   : Le texte sera aligné en haut
  @#PB_Text3D_Bottom: Le texte sera aligné en bas
  @#PB_Text3D_HorizontallyCentered: Le texte sera centré horizontalement
  @#PB_Text3D_VerticallyCentered  : Le texte sera centré verticalement
@EndFixedFont

@NoReturnValue
  
@Example
  Voir @@CreateText3D
  
@SeeAlso
  @@CreateText3D

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Text3DX(#Texte3D)

@Description
  Renvoie la position absolue 'x' du texte dans le monde.

@Parameter "#Text3D"
  Le texte 3D à utiliser.

@ReturnValue
  Renvoie la position absolue 'x' du texte.

@SeeAlso
  @@Text3DY, @@Text3DZ, @@MoveText3D
    
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Text3DY(#Text3D)

@Description
  Renvoie la position absolue 'y' du texte dans le monde.

@Parameter "#Text3D"
  Le texte 3D à utiliser.

@ReturnValue
  Renvoie la position absolue 'y' du texte.

@SeeAlso
  @@Text3DX, @@Text3DZ, @@MoveText3D
    
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = Text3DZ(#Text3D)

@Description
  Renvoie la position absolue 'z' du texte dans le monde.

@Parameter "#Text3D"
  Le texte 3D à utiliser.
  
@ReturnValue
 Renvoie la position absolue 'z' du texte.

@SeeAlso
  @@Text3DX, @@Text3DY, @@MoveText3D
    
@SupportedOS