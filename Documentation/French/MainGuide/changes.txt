@Title Changements

@Bold "Changements bibliothèques de v3.94 à v4.00"

@Section Image

@Red "Supprimé": UseImage() - changez UseImage(#Image) par ImageID(#Image) quand l'ID est nécessaire. @LineBreak
@LineBreak
@Green "Ajouté": CreateImage(#Image, Largeur, Hauteur [, Profondeur]) - nouveau paramètre @LineBreak
@Green "Ajouté": LoadImage(#Image, FichierImage$ [, Options])         - nouveau paramètre @LineBreak
@Green "Ajouté": CatchImage(#Image, AdresseMemoire [, Options]))      - nouveau paramètres @LineBreak
@LineBreak
@Orange "Changé": ImageDepth(#Image)  - nouveau paramètre @LineBreak
@Orange "Changé": ImageHeight(#Image) - nouveau paramètre @LineBreak
@Orange "Changé": ImageWidth(#Image)  - nouveau paramètre @LineBreak
@Orange "Changé": ImageID(#Image)     - nouveau paramètre @LineBreak
@Orange "Changé": ImageOutput(#Image) - nouveau paramètre @LineBreak


@Section String

@Green "Ajouté": StrD(Valeur.d [, NombreDeDecimales]) @LineBreak
@Green "Ajouté": StrQ(Valeur.q) @LineBreak
@Green "Ajouté": HexQ(Valeur.q) @LineBreak
@Green "Ajouté": BinQ(Valeur.q) @LineBreak
@Green "Ajouté": StrU(Valeur, Type): Ajout de l'option #PB_Quad @LineBreak
@Green "Ajouté": ValD(String$), ValQ(String$) @LineBreak
@Green "Ajouté": StringByteLength(Chaine$ [, Format]) - Renvoie le nombre d'octets de la chaîne de caractères en fonction du 'Format' spécifié. 


@Section Math

@Green "Ajouté": IntQ(valeur.d)


@Section Thread

@Green "Ajouté": IsThread(Thread)    - teste si le thread existe. @LineBreak
@Green "Ajouté": CreateMutex()       - Crée un nouveau mutex. @LineBreak
@Green "Ajouté": FreeMutex(Mutex)    - Supprime le 'Mutex' et sa mémoire associée. @LineBreak
@Green "Ajouté": LockMutex(Mutex)    - Demande le verrouillage d'un mutex @LineBreak
@Green "Ajouté": TryLockMutex(Mutex) - Essaye de verrouiller le 'Mutex' spécifié, sinon renvoie 0 immédiatement @LineBreak
@Green "Ajouté": UnlockMutex(Mutex)  - Déverrouille le mutex , les autres threads peuvent le verrouiller @LineBreak


@Section Process (Nouveau)

@Green "Ajouté": GetEnvironmentVariable(Nom$)            - Renvoie le contenu de la Variable d'environnement spécifiée @LineBreak
@Green "Ajouté": SetEnvironmentVariable(Nom$, Valeur$)   - Crée une nouvelle variable d'environnement avec le 'Nom$' et la 'Valeur$' specifiés. @LineBreak
@Green "Ajouté": RemoveEnvironmentVariable(Nom$)         - Supprime la Variable d'environnement spécifiée @LineBreak
@Green "Ajouté": ExamineEnvironmentVariables()           - Initialise l'énumération des variables d'environnement disponibles @LineBreak
@Green "Ajouté": NextEnvironmentVariable()               - Passe à la variable d'environnement suivante @LineBreak
@Green "Ajouté": EnvironmentVariableName()               - Renvoie le nom de la variable d'environnement @LineBreak
@Green "Ajouté": EnvironmentVariableValue()              - Renvoie la valeur de la variable d'environnement @LineBreak
@Green "Ajouté": ProgramFileName()                       - Renvoie le chemin complet et le nom du programme @LineBreak
@Green "Ajouté": CountProgramParameters()                - Renvoie le nombre de paramètres qui ont été passés @LineBreak
@Green "Ajouté": IsProgram(Programme)                    - Teste si le 'Programme' préalablement lancé avec RunProgram() est correctement initialisé @LineBreak
@Green "Ajouté": ProgramID(Programme)                    - Renvoie l'identifiant système unique du 'Programme'. @LineBreak
@Green "Ajouté": ProgramRunning(Programme)               - Teste si le 'Programme' est toujours en cours d'exécution.@LineBreak
@Green "Ajouté": WaitProgram(Programme [, Minuteur])     - Attend que le 'Programme' spécifié se termine, ou que le minuteur expire @LineBreak
@Green "Ajouté": KillProgram(Programme)                  - Termine immédiatement l'exécution du programme spécifié @LineBreak
@Green "Ajouté": ProgramExitCode(Programme)                - Renvoie le code de retour du 'Programme' quand il s'est terminé @LineBreak
@Green "Ajouté": CloseProgram(Programme)                   - Termine toutes les connexions avec le 'Programme' spécifié @LineBreak
@Green "Ajouté": AvailableProgramOutput(Programme)         - Renvoie le nombre d'octets qui sont disponibles pour la lecture. @LineBreak
@Green "Ajouté": ReadProgramString(Programme)              - Lit une ligne texte provenant de la sortie standard (stdout) du 'Programme' @LineBreak
@Green "Ajouté": ReadProgramData(Programme, *Buffer, Taille) - Lit les données provenant de la sortie standard (stdout) du 'Programme' @LineBreak
@Green "Ajouté": ReadProgramError(Programme)               - Lit une ligne texte provenant de la sortie erreur (stderr) du 'Programme'. @LineBreak
@Green "Ajouté": WriteProgramString(Programme, Texte$)     - Ecrit le Texte$ dans l'entrée standard (stdin) du 'Programme' @LineBreak
@Green "Ajouté": WriteProgramData(Programme, *Buffer, Taille)- Ecrit les données dans l'entrée standard (stdin) du 'Programme'. @LineBreak
@LineBreak
@Orange "Changé": ProgramParameter([Index])   - Renvoie le paramètre suivant @LineBreak
@Orange "Changé": RunProgram() utilise de nouvelles options:
@FixedFont
  #PB_Program_Open    - Ouvre des canaux de communication entre le programme lancé et le programme PureBasic
  #PB_Program_Read    - Lecture possible sur la sortie standard (stdout)
  #PB_Program_Write   - Ecriture possible sur l'entrée standard (stdin)
  #PB_Program_Error   - Lecture possible sur la sortie d'erreur(stderr)
  #PB_Program_Connect - Connecte la sortie d'un autre programme à l'entrée du programme PureBasic
@EndFixedFont



@Section File

@Green "Ajouté": FileBuffersSize(#Fichier, Taille) - Change la taille des caches de lecture/écriture pour le #Fichier spécifié. @LineBreak
@Green "Ajouté": FileID(#Fichier)                  - Renvoie l'identifiant unique du #Fichier dans le système d'exploitation. @LineBreak
@Green "Ajouté": FlushFileBuffers(#Fichier)        - Ecrit immédiatement le contenu du cache dans le #Fichier. @LineBreak
@Green "Ajouté": ReadChar(#Fichier) @LineBreak
@Green "Ajouté": ReadQuad(#Fichier) @LineBreak
@Green "Ajouté": ReadDouble(#Fichier) @LineBreak
@Green "Ajouté": WriteCharacter(#Fichier, Valeur) @LineBreak
@Green "Ajouté": WriteQuad(#Fichier, Valeur) @LineBreak
@Green "Ajouté": WriteDouble(#Fichier, Valeur) @LineBreak
@Green "Ajouté": ReadStringFormat(#Fichier) @LineBreak
@Green "Ajouté": WriteStringFormat(#Fichier, Format) @LineBreak

@LineBreak
@Orange "Changé": FileSeek(#Fichier, NouvellePosition)  - nouveau paramètre @LineBreak
@Orange "Changé": WriteData(#Fichier)                   - nouveau paramètre @LineBreak
@Orange "Changé": ReadData(#Fichier)                    - nouveau paramètre @LineBreak
@Orange "Changé": Lof(#Fichier)                         - nouveau paramètre @LineBreak
@Orange "Changé": Loc(#Fichier)                         - nouveau paramètre @LineBreak
@Orange "Changé": ReadByte(#Fichier)                    - nouveau paramètre @LineBreak
@Orange "Changé": ReadWord(#Fichier)                    - nouveau paramètre @LineBreak
@Orange "Changé": ReadLong(#Fichier)                    - nouveau paramètre @LineBreak
@Orange "Changé": ReadFloat(#Fichier)                   - nouveau paramètre @LineBreak
@Orange "Changé": ReadString(#Fichier [,Format])        - nouveau paramètre @LineBreak
@Orange "Changé": ReadData(#Fichier)                    - nouveau paramètre @LineBreak
@Orange "Changé": WriteByte(#Fichier, Data)             - nouveau paramètre @LineBreak
@Orange "Changé": WriteWord(#Fichier, Data)             - nouveau paramètre @LineBreak
@Orange "Changé": WriteLong(#Fichier, Data)             - nouveau paramètre @LineBreak
@Orange "Changé": WriteFloat(#Fichier, Data)            - nouveau paramètre @LineBreak
@Orange "Changé": WriteString(#Fichier, Data [,Format]) - nouveau paramètre @LineBreak
@Orange "Changé": WriteStringN(#Fichier, Data [,Format])- nouveau paramètre @LineBreak
@Orange "Changé": WriteData(#Fichier, Data, Length)     - nouveau paramètre @LineBreak
@LineBreak
@Red "Supprimé": UseFile() - changez UseFile(#Fichier) par FileID(#Fichier) quand l'ID est nécessaire. @LineBreak


@Section 2DDrawing

@Green "Ajouté": DrawAlphaImage() @LineBreak
@Green "Ajouté": TextHeight(Texte$) - Retourne la hauteur de la chaîne Texte$ en fonction de la surface et de la police en cours@LineBreak
@Green "Ajouté": FillArea(x, y, CouleurBord [, Couleur]) - Si 'Couleur' est -1, alors la zone sera remplie par la couleur trouvée en (x,y).@LineBreak
@LineBreak
@Orange "Changé": FrontColor(Couleur) - Remplacement de Rouge, Vert, Bleu, par un seul paramètre couleur.(Utilisez RGB() pour une mise à jour rapide) @LineBreak
@Orange "Changé": BackColor(Couleur) - Remplacement de Rouge, Vert, Bleu, par un seul paramètre couleur. @LineBreak
@Orange "Changé": NewX = DrawText(x, y, Texte$ [, FrontColor [, BackColor]]) - Ajout des coordonnées x/y et des couleurs optionnelles @LineBreak
@Orange "Changé": TextLength(Text$) en TextWidth(Text$) @LineBreak
@LineBreak
@Red "Supprimé": Locate(x, y) - plus utile (Voir DrawText()).


@Section Palette

@Red "Supprimé": UsePalette() @LineBreak

@LineBreak
@Orange "Changé": GetPaletteColor(#Palette, Index)            - nouveau paramètre @LineBreak
@Orange "Changé": SetPaletteColor(#Palette, Index, Color)     - nouveau paramètre


@Section Module

@Orange "Changé": SetModulePosition(#Module, Position)        - nouveau paramètre @LineBreak
@Orange "Changé": GetModulePosition(#Module)                  - nouveau paramètre @LineBreak
@Orange "Changé": GetModuleRow(#Module)                       - nouveau paramètre @LineBreak
@Orange "Changé": StopModule(#Module)                         - nouveau paramètre et -1 = stop tous les modules


@Section Database

@Orange "Changé": FirstDatabaseRow((#BaseDeDonnees)           - nouveau paramètre @LineBreak
@Orange "Changé": PreviousDatabaseRow((#BaseDeDonnees)        - nouveau paramètre @LineBreak
@Orange "Changé": NextDatabaseRow((#BaseDeDonnees)            - nouveau paramètre @LineBreak
@Orange "Changé": GetDatabaseLong((#BaseDeDonnees)            - nouveau paramètre @LineBreak
@Orange "Changé": GetDatabaseFloat((#BaseDeDonnees)           - nouveau paramètre @LineBreak
@Orange "Changé": GetDatabaseString((#BaseDeDonnees)          - nouveau paramètre @LineBreak
@Orange "Changé": DatabaseUpdate((#BaseDeDonnees, Requete$)   - nouveau paramètre @LineBreak
@Orange "Changé": DatabaseQuery((#BaseDeDonnees, Requete$)    - nouveau paramètre @LineBreak
@Orange "Changé": DatabaseColumnType((#BaseDeDonnees, Colonne)- nouveau paramètre @LineBreak
@Orange "Changé": DatabaseColumns((#BaseDeDonnees)            - nouveau paramètre @LineBreak
@Orange "Changé": DatabaseColumnName((#BaseDeDonnees, Colonne)- nouveau paramètre @LineBreak
@LineBreak
@Red "Supprimé": UseDatabase() @LineBreak


@Section Movie

@Orange "Changé": MovieAudio(#Film)                           - nouveau paramètre @LineBreak
@Orange "Changé": MovieHeight(#Film)                          - nouveau paramètre @LineBreak
@Orange "Changé": MovieWidth(#Film)                           - nouveau paramètre @LineBreak
@Orange "Changé": MovieInfo(#Film)                            - nouveau paramètre @LineBreak
@Orange "Changé": MovieLength(#Film)                          - nouveau paramètre @LineBreak
@Orange "Changé": RenderMovieFrame(#Film)                     - nouveau paramètre @LineBreak
@Orange "Changé": ResizeMovie(#Film, x, y, largeur, Hauteur)  - nouveau paramètre @LineBreak
@Orange "Changé": ResumeMovie(#Film)                          - nouveau paramètre @LineBreak
@Orange "Changé": PauseMovie(#Film)                           - nouveau paramètre @LineBreak
@Orange "Changé": StopMovie(#Film)                            - nouveau paramètre @LineBreak
@Orange "Changé": MovieSeek(#Film, Position)                  - nouveau paramètre @LineBreak
@Orange "Changé": MovieStatus(#Film)                          - nouveau paramètre @LineBreak
@LineBreak
@Red "Supprimé": UseMovie()



@Section FileSystem

@Green "Ajouté": FinishDirectory(#Repertoire) @LineBreak
@Green "Ajouté": DirectoryEntryType(#Repertoire) @LineBreak
@Green "Ajouté": DirectoryEntryDate(#Repertoire, TypeDate)    - #PB_Date_Created, #PB_Date_Accessed, #PB_Date_Modified @LineBreak
@Green "Ajouté": GetFileDate(NomFichier$, TypeDate) @LineBreak
@Green "Ajouté": SetFileDate(NomFichier$, TypeDate) @LineBreak
@LineBreak
@Orange "Changé": NextDirectoryEntry(#Repertoire)             - nouveau paramètre @LineBreak
@Orange "Changé": DirectoryEntryName(#Repertoire)             - nouveau paramètre @LineBreak
@Orange "Changé": DirectoryEntryAttributes(#Repertoire)       - nouveau paramètre @LineBreak
@Orange "Changé": DirectoryEntrySize(#Repertoire)             - nouveau paramètre @LineBreak
@LineBreak
@blue "Renommé": IsFilename() en CheckFilename()            - Le nom de la fonction a changé @LineBreak
@LineBreak
@Red "Supprimé": UseDirectory() @LineBreak
@LineBreak
Notes importantes: 
NextDirectoryEntry() ne renvoie plus le type d'entrée (fichier/Sous-répertoire). 
NextDirectoryEntry() renvoie seulement 0 ou 1 (0 signifie qu'il n'y plus d'objets), 
ceci pour être cohérent avec les autres commandes Examine...()/Next..() de PB. 
Utilisez DirectoryEntryType() pour connaître le type d'entrée comme vous faisiez avant avec le résultat de NextDirectoryEntry().  
FinishDirectory () doit être appelé après chaque ExamineDirectory(). 


@Section Menu

@Green "Ajouté": GetMenuItemText(#Menu, ItemID) @LineBreak
@Green "Ajouté": GetMenuTitleText(#Menu, ItemID) @LineBreak
@Green "Ajouté": SetMenuItemText(#Menu, ItemID, Text$) @LineBreak
@Green "Ajouté": SetMenuTitleText(#Menu, ItemID, Text$) @LineBreak
@LineBreak
@Orange "Changé": DisableMenuItem(#Menu, ItemID, State)  - nouveau paramètre @LineBreak
@Orange "Changé": MenuID(#Menu)  - nouveau paramètre


@Section Console

@Green "Ajouté": EnableGraphicalConsole(State) @LineBreak
@Green "Ajouté": RawKey() @LineBreak
@Green "Ajouté": Redirection et support des sorties standards @LineBreak
@LineBreak
@Orange "Changé": Inkey() - Désormais, renvoie seulement un caractère ou rien (à la place de 2), utilisez RawKey() pour le caractère supplémentaire @LineBreak
@LineBreak
Note: Avec l'ancienne bibliothèque les consoles étaient en mode graphique, et les redirections (pipes) ne fonctionnaient pas correctement.  
(vous ne pouviez pas l'appeler avec une ligne de commande comme : myprogram.exe > test.txt)  
Maintenant vous avez le choix avec EnableGraphicalConsole(Etat), 
et si vous n'activez pas explicitement le mode graphique, les redirections devraient se faire correctement vers stdout
pour permettre l'écriture de meilleurs outils en mode console.
Ceci s'applique également à stdin et aux commandes d'entrée. 


@Section AudioCD

@Orange "Changé": Remplacement de 'CDAudio' par 'AudioCD' dans le nom de toutes les fonctions (moins franco-anglais)


@Section Toolbar

@Green "Ajouté": ToolBarHeight(#BarreOutils) @LineBreak
@Green "Ajouté": ToolBarID(#BarreOutils) @LineBreak
@LineBreak
@Orange "Changé": ToolBarTooltip(#BarreOutils, Bouton, Texte$)     - nouveau paramètre @LineBreak
@Orange "Changé": DisableToolBarButton(#BarreOutils, Bouton, Etat) - nouveau paramètre


@Section Statusbar

@Green "Ajouté": StatusBarHeight(#BarreEtat) @LineBreak
@Green "Ajouté": StatusBarID(#BarreEtat)


@Section Font

@Orange "Changé": FontID(#Font) - nouveau paramètre @LineBreak
@Orange "Changé": CloseFont() en FreeFont() @LineBreak
@LineBreak
@Red "Supprimé": UseFont()

@Section Preferences

@Green "Ajouté": possibilité d'ajouter/changer/effacer des clefs dans les fichiers préférences existants. @LineBreak
@Green "Ajouté": RemovePreferenceKey(Name$) @LineBreak
@Green "Ajouté": RemovePreferenceGroup(Name$) @LineBreak
@Green "Ajouté": ExaminePreferenceGroups()            - Commence l'énumération de tous les groupes trouvés dans le fichier @LineBreak
@Green "Ajouté": NextPreferenceGroup()                - Renvoie les informations concernant le groupe suivant. @LineBreak
@Green "Ajouté": PreferenceGroupName()                - Renvoie le nom du groupe.  @LineBreak
@Green "Ajouté": ExaminePreferenceKeys()              - Commence l'énumération de toutes les clefs du groupe courant @LineBreak
@Green "Ajouté": NextPreferenceKey()                  - Renvoie les informations concernant la clef suivante. @LineBreak
@Green "Ajouté": PreferenceKeyName()                  - Renvoie le nom de la clef courante @LineBreak
@Green "Ajouté": ReadPreferenceQuad(Key$, Default) @LineBreak
@Green "Ajouté": ReadPreferenceDouble(Key$, Default) @LineBreak
@Green "Ajouté": WritePreferenceQuad(Key$, Value) @LineBreak
@Green "Ajouté": WritePreferenceDouble(Key$, Value)


@Section Sprite

@Green "Ajouté": SpriteID(#Sprite) @LineBreak
@Green "Ajouté": FlipBuffer() - Ajout d'une option, pour avoir une synchronisation verticale optimisée dans le mode plein écran @LineBreak
@LineBreak
@blue "Renommé": DisplayTranslucideSprite() en DisplayTranslucentSprite() @LineBreak
@LineBreak
@Orange "Changé": TransparentSpriteColor(#Sprite, R, G, B) en TransparentSpriteColor(#Sprite, Couleur) @LineBreak
@Orange "Changé": ClearScreen(R, G, B) en ClearScreen(Couleur)


@Section Library

@blue "Renommé": IsFunction() -> GetFunction()



@Section Network

@Green "Ajouté": Option #PB_Network_UDP et #PB_Network_TCP @LineBreak
@Green "Ajouté": GetClientIP() @LineBreak
@Green "Ajouté": GetClientPort() @LineBreak
@Green "Ajouté": EventServerNumber() @LineBreak
@LineBreak
@blue "Renommé": NetworkClientID() en EventClient()


@Section Keyboard

@Green "Ajouté": Les constantes #PB_Keyboard_International et #PB_Keyboard_AllowSystemKeys pour KeyboardMode()


@Section Clipboard

@Orange "Changé": GetClipboardData(Type) en GetClipboardImage(#Image) @LineBreak
@Orange "Changé": SetClipboardData(Type, Data) en SetClipboardImage(#Image)


@Section Memory

@Green "Ajouté": Support de la conversion Unicode avec PeekS() et PokeS() entre ascii, UTF8 et UTF16 @LineBreak
@Green "Ajouté": PeekC(), PeekD(), PeekQ() @LineBreak
@Green "Ajouté": PokeC(), PokeD(), PokeQ() @LineBreak
@Green "Ajouté": MemorySize() - Renvoie la longueur totale (en octets) de la zone de mémoire @LineBreak
@Green "Ajouté": MoveMemory() @LineBreak
@Green "Ajouté": CompareMemoryString(*Text1, *Test2 [Mode [, MaxLength [, Flags]]]) - Nouveaux paramètres pour les comparaisons en UTF16/UTF8/Ascii @LineBreak
@Green "Ajouté": MemoryStringLength() - Nouveaux paramètres pour UTF16/UTF8/Ascii @LineBreak
@LineBreak
Note: Les commandes  PeekS, PokeS, CompareMemoryString et MemoryStringLength ont maintenant un paramètre pour indiquer le format du texte.
Les options possibles sont : #PB_Ascii, #PB_Unicode ou #PB_UTF8. 
Ceci vous permet de travailler avec des chaînes en mémoire indépendamment du mode dans lequel l'exécutable sera compilé (unicode ou non). 


@Section Engine3D

@Orange "Changé": CreateMesh(#Mesh,TailleMaximum)   - nouveau paramètre @LineBreak
@Orange "Changé": MaterialAmbientColor(#Matrix1,-1) - -1 nouveau paramètre @LineBreak
@LineBreak
@Green "Ajouté": EntityRenderMode() @LineBreak
@Green "Ajouté": WorldShadows(#PB_Shadow_Additive)  @LineBreak
@Green "Ajouté": ParticleEmitterDirection() @LineBreak
@Green "Ajouté": GetEntityMass @LineBreak
@Green "Ajouté": SetEntityMass @LineBreak
@Green "Ajouté": GetEntityFriction @LineBreak
@Green "Ajouté": SetEntityFriction @LineBreak
@Green "Ajouté": EntityPhysicBody @LineBreak
@Green "Ajouté": ExamineWorldCollisions @LineBreak
@Green "Ajouté": NextWorldCollision @LineBreak
@Green "Ajouté": CheckWorldCollisionEntity @LineBreak
@Green "Ajouté": FirstWorldCollisionEntity @LineBreak
@Green "Ajouté": SecondWorldCollisionEntity @LineBreak
@Green "Ajouté": WorldGravity @LineBreak
@Green "Ajouté": EnableWorldCollision @LineBreak
@Green "Ajouté": EnableWorldPhysics @LineBreak
@Green "Ajouté": Parse3DScripts @LineBreak
@LineBreak
@Red "Supprimé": RotateParticleEmitter() @LineBreak


@Section Window

@Green "Ajouté": GetActiveWindow()                    - Renvoie le numéro de la fenêtre qui a le 'focus'. @LineBreak
@Green "Ajouté": DisableWindow(#Fenetre, Etat)        - Active ou désactive les interactions avec l'utilisateur. @LineBreak
@Green "Ajouté": GetWindowState(#Fenetre)             - Détermine si la #Fenetre est maximisée, minimisée ou affichée normalement. @LineBreak
@Green "Ajouté": SetWindowState(#Fenetre, Etat)       - Change l'état minimisé ou maximisé de la #Fenetre @LineBreak
@Green "Ajouté": StickyWindow(#Fenetre, Etat)         - Affiche la #Fenetre toujours au premier plan même si elle n'est pas active. @LineBreak
@Green "Ajouté": SetWindowColor(#Fenetre, Couleur)    - Change la couleur de fond de la fenêtre @LineBreak
@Green "Ajouté": GetWindowColor(#Fenetre)             - Renvoie la couleur de fond de la fenêtre @LineBreak
@Green "Ajouté": SmartWindowRefresh(#Fenetre, Etat)   - Active ou désactive le rafraichissement intelligent @LineBreak
@LineBreak
@Orange "Changé": OpenWindow(#Fenetre, x, y, Largeur, Hauteur, Titre$ [, Options [, ParentID]]) - Les options sont à la fin et optionnelles @LineBreak
@Orange "Changé": WaitWindowEvent([Timeout]) - Ajout d'un timeout optionnel @LineBreak
@Orange "Changé": ResizeWindow(#Fenetre, x, y, Largeur, Hauteur) - Les paramètres à '-1' doivent être remplacés par #PB_Ignore @LineBreak
@Orange "Changé": SetWindowCallback(@Procedure() [, #Fenetre]) - Ajout du paramètre optionnel #Fenetre (Affecte callback seulement à une fenêtre) @LineBreak
@Orange "Changé": ResizeWindow(#Fenetre, x, y, largeur, Hauteur) - Maintenant c'est identique à ResizeGadget() @LineBreak
@Orange "Changé": WindowID(#Fenetre)       - le paramètre n'est plus optionnel @LineBreak
@Orange "Changé": WindowHeight(#Fenetre)   - nouveau paramètre @LineBreak
@Orange "Changé": WindowWidth(#Fenetre)    - nouveau paramètre @LineBreak
@Orange "Changé": WindowX(#Fenetre)        - nouveau paramètre @LineBreak
@Orange "Changé": WindowY(#Fenetre)        - nouveau paramètre @LineBreak
@Orange "Changé": WindowMouseX(#Fenetre)   - nouveau paramètre @LineBreak
@Orange "Changé": WindowMouseY(#Fenetre)   - nouveau paramètre @LineBreak
@Orange "Changé": WindowOutput(#Fenetre)   - nouveau paramètre @LineBreak
@LineBreak
@blue "Renommé": EventWindowID() en EventWindow() @LineBreak
@blue "Renommé": EventGadgetID() en EventGadget() @LineBreak
@blue "Renommé": EventMenuID()   en EventMenu() @LineBreak
@blue "Renommé": ActivateWindow() en SetActiveWindow(#Fenetre) @LineBreak
@LineBreak
@Red "Supprimé": MoveWindow() @LineBreak
@Red "Supprimé": DetachMenu() @LineBreak
@Red "Supprimé": UseWindow() @LineBreak
@Red "Supprimé": Les constantes de compatibilité (Par exemple, remplacez #PB_EventCloseWindow par la constante documentée #PB_Event_CloseWindow) @LineBreak


@Section Gadget

@Green "Ajouté": GetActiveGadget()   - Renvoie le numéro du #Gadget qui a actuellement le 'focus' @LineBreak
@Green "Ajouté": GadgetType(#Gadget) - Renvoie le type du #Gadget spécifié. @LineBreak
@Green "Ajouté": SetGadgetData(#Gadget, Valeur) - Associe la 'Valeur' spécifiée au #Gadget (fonctionne avec tous les gadgets). @LineBreak
@Green "Ajouté": GetGadgetData(#Gadget) - Renvoie la valeur associée @LineBreak
@Green "Ajouté": SetGadgetItemData(#Gadget, Element, Valeur) - Associe la 'Valeur' spécifiée avec l'Element du #Gadget (Pour quelques gadgets seulement) @LineBreak
@Green "Ajouté": GetGadgetItemData(#Gadget, Element) @LineBreak
@Green "Ajouté": SetGadgetColor(#Gadget, TypeCouleur, Couleur) @LineBreak
@Green "Ajouté": GetGadgetColor(#Gadget, TypeCouleur) @LineBreak
@Green "Ajouté": SetGadgetItemColor(#Gadget, Element, TypeCouleur, couleur [, Colonne]) @LineBreak
@Green "Ajouté": GetGadgetItemColor(#Gadget, Element, TypeCouleur [, Colonne]) @LineBreak
@LineBreak
@Orange "Changé": ActivateGadget(#Gadget) devient SetActiveGadget(#Gadget) @LineBreak
@Orange "Changé": ResizeGadget(#Gadget, x, y, Largeur, Hauteur), Remplacez -1 par #PB_Ignore @LineBreak
@LineBreak
@Red "Supprimé": #PB_String_MultiLine
@LineBreak
@LineBreak


@Section Changements pour chaque gadget: 

@Bold "CalendarGadget()" @LineBreak
 - supporte SetGadgetColor() avec les options suivantes: @LineBreak
 @Indent
   #PB_Gadget_BackColor       - couleur du fond @LineBreak
   #PB_Gadget_FrontColor      - couleur du texte pour les jours affichés @LineBreak
   #PB_Gadget_TitleBackColor  - couleur du fond du titre du mois @LineBreak
   #PB_Gadget_TitleFrontColor - couleur du texte du titre du mois @LineBreak
   #PB_Gadget_GreyTextColor   - couleur du texte pour les jours n'appartenant pas au mois courant @LineBreak
 @EndIndent
@LineBreak

@Bold "ComboBoxGadget()" @LineBreak
 - Supporte SetGadgetItemData() @LineBreak
@LineBreak

@Bold "ContainerGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond @LineBreak
@LineBreak

@Bold "DateGadget()" @LineBreak
 - supporte SetGadgetColor() avec les mêmes options que CalendarGadget @LineBreak
 - la zone de saisie ne peut pas encore être colorée à ce jour @LineBreak
@LineBreak

@Bold "EditorGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte @LineBreak
 - nouvelle option: #PB_Editor_ReadOnly  @LineBreak
 - supporte SetGadgetrAttribute() avec #PB_Editor_ReadOnly pour renvoyer/changer l'option ReadOnly @LineBreak
@LineBreak

@Bold "ExplorerListGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte et #PB_Gadget_LineColor @LineBreak
 - Supporte GetGadgetItemAttribute(#Gadget, 0, #PB_Explorer_ColumnWidth, 2) ; renvoie la largeur de la colonne 2 @LineBreak
 - Supporte SetGadgetItemAttribute(#Gadget, 0, #PB_Explorer_ColumnWidth, 100, 2) ; fixe la largeur de la colonne 2 à 100 @LineBreak
 - Supporte GetGadgetItemText(#Gadget, -1, 2)             ; renvoie le titre de la colonne 2 @LineBreak
 - Supporte SetGadgetItemText(#Gadget, -1, "Nouveau Texte", 2) ; change le titre de la colonne 2 @LineBreak
@LineBreak

@Bold "ExplorerTreeGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte et #PB_Gadget_LineColor @LineBreak
@LineBreak

@Bold "HyperLinkGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur du texte (la couleur de fond est toujours transparente) @LineBreak
 - nouvelle option: #PB_Hyperlink_Underline - Affiche une ligne en dessous du texte sans avoir à utiliser une police soulignée. @LineBreak
@LineBreak

@Bold "ListIconGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte et #PB_Gadget_LineColor (Pour #PB_ListIcon_GridLines) @LineBreak
 - Supporte SetGadgetItemColor() pour la couleur de fond et du texte de l'élément (Peut être utilisé pour chaque élément) @LineBreak
 - Supporte SetGadgetItemData() @LineBreak
 - L'évènement pour détecter si une case à cocher a changé d'état est maintenant #PB_EventType_Change @LineBreak
 - Supporte GetGadgetItemAttribute(#Gadget, 0, #PB_ListIcon_ColumnWidth, 2) ; renvoie la largeur de la colonne 2 @LineBreak
 - Supporte SetGadgetItemAttribute(#Gadget, 0, #PB_ListIcon_ColumnWidth, 100, 2) ; fixe la largeur de la colonne 2 à 100 @LineBreak
 - Supporte GetGadgetItemText(#Gadget, -1, 2)             ; renvoie le titre de la colonne 2 @LineBreak
 - Supporte SetGadgetItemText(#Gadget, -1, "Nouveau Texte", 2) ; change le titre de la colonne 2 @LineBreak
@LineBreak

@Bold "ListViewGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte (Pas pour les différents éléments) @LineBreak
 - Supporte SetGadgetItemData() @LineBreak
 - Nouvelles options: @LineBreak
 @Indent
   #PB_ListView_Multiselect - Permet la sélection de plusieurs éléments. @LineBreak
   #PB_ListView_ClickSelect - Permet la sélection de plusieurs éléments. Clicker sur un élément le sélectionne ou le désélectionne. @LineBreak
 @EndIndent
@LineBreak

@Bold "MDIGadget()" @LineBreak
 - Les fenêtres filles des MDIGadget ne sont plus des "GadgetItems", mais de vraies fenêtres PB.
   Ce qui signifie que vous pouvez employer n'importe quelle commande de la bibliothèque Windows (à l'exception de StickyWindow()). 
   Ce qui rend quelques fonctions pour le MDIGadget obsolètes, et implique quelques changements: @LineBreak    
 - Le gadget n'envoie plus d'événement : les événements close, resize, activate sont reçus comme des événements de fenêtre @LineBreak
 - GetGadgetAttribute(), Get/SetGadgetItemAttribute, Get/SetGadgetItemState(), Get/SetGadgetItemText
   ne sont plus supportés. Toutes ces commandes peuvent être remplacées facilement à l'aide des commandes de la bibliothèque Window. @LineBreak
 - RemoveGadgetItem() n'est plus supporté... utilisez CloseWindow() @LineBreak
@LineBreak
Les commandes utilisables avec un MDIGadget sont maintenant celles-ci: (plus l'ensemble des commandes de la bibliothèque window !) @LineBreak
 - ClearGadgetItemList() : ferme toutes les fenêtres filles @LineBreak
 - CountGadgetItems()    : renvoie le nombre de fenêtres filles @LineBreak
 - GetGadgetState()      : renvoie l'identifiant de la fenêtre fille active.  @LineBreak
 - SetGadgetState()      : Change la fenêtre fille active ou ré-arrange la disposition des fenêtres filles @LineBreak
 - AddGadgetItem()       : Crée une nouvelle fenêtre fille. fonctionne de la façon suivante: @LineBreak
@FixedFont
   AddGadgetItem(#MDI, #Fenetre, Titre$ [, ImageID [, Options]])
     - #Fenetre - Numéro de la nouvelle fenêtre (vous pouvez utiliser #PB_Any!)
     - Titre$   - titre de la nouvelle fenêtre
     - ImageID  - Icône pour la fenêtre (optionnel)
     - Options  - Supporte la plupart des options pour OpenWindow,
                  si rien n'est indiqué, les options par défaut d'une fenêtre MDI sont utilisées. 
   Les options suivantes ne sont pas supportées: #PB_Window_Borderless, #PB_Window_ScreenCentered, #PB_Window_WindowCentered
@EndFixedFont
   Note: Désormais vous devez appeler CreateGadgetList() pour ajouter des éléments à la fenêtre MDI fille, de la même façon que pour une fenêtre normale. @LineBreak
@LineBreak
 - SetGadgetColor()     peut être utilisé avec #PB_Gadget_BackColor pour définir la couleur de fond du MDI @LineBreak
 - SetGadgetAttribute() peut être utilisé avec #PB_MDI_Image pour appliquer une image de fond, #PB_MDI_TileImage applique l'image de fond en mosaïque@LineBreak
@LineBreak
@LineBreak

@Bold "PanelGadget()" @LineBreak
 - Ajouté GetGadgetAttribute() avec #PB_Panel_ItemWidth, #PB_Panel_ItemHeight (en lecture seulement) 
   (il doit y avoir au moins un élément dans le PanelGadget()) @LineBreak
@LineBreak

@Bold "ProgressBarGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte (Ne fonctionne pas avec les thèmes de bureau activés) @LineBreak
 - supporte SetGadgetAttribute() avec #PB_ProgressBar_Minimum, #PB_ProgressBar_Maximum @LineBreak
@LineBreak

@Bold "ScrollAreaGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond @LineBreak
 - nouvelle option: #PB_ScrollArea_Center - La zone interne est automatiquement centrée si sa taille est plus petite que le cadre extérieur @LineBreak
 - nouvelles options pour SetGadgetAttribute() #PB_ScrollArea_X/#PB_ScrollArea_Y pour modifier/renvoyer la position actuelle de l'ascenseur. @LineBreak
 - Maintenant un évènement est généré quand les ascenseurs sont déplacés @LineBreak
@LineBreak

@Bold "ScrollBarGadget()" @LineBreak
 - Supporte SetGadgetAttribute() avec #PB_ScrollBar_Minimum, #PB_ScrollBar_Maximum, #PB_ScrollBar_PageLength @LineBreak
@LineBreak

@Bold "SpinGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte (pour colorer la zone d'édition) @LineBreak
 - supporte SetGadgetAttribute() avec #PB_Spin_Minimum, #PB_Spin_Maximum @LineBreak
 - Nouvelles options: @LineBreak
   @Indent
   #PB_Spin_ReadOnly - Le gadget n'est pas éditable, sa valeur ne peut être changée que par les flèches. @LineBreak
   #PB_Spin_Numeric  - Le gadget met à jour automatiquement le texte affiché par rapport à sa valeur interne, SetGadgetText() n'est pas nécessaire. @LineBreak
   @EndIndent
 - Valeurs pour EventType : @LineBreak
   @Indent
                    1 - Le bouton 'Haut' a été pressé @LineBreak
                   -1 - Le bouton 'Bas' a été pressé @LineBreak
 #PB_EventType_Change - Le texte dans la zone d'édition a changé @LineBreak
   @EndIndent
@LineBreak

@Bold "SplitterGadget()" @LineBreak
 - nouvelles options pour Get/SetGadgetAttribute(): #PB_Splitter_FirstGadget, #PB_Splitter_SecondGadget
   avec GetGadgetAttribute(), renvoie le numéro du gadget associé
   avec SetGadgetAttribute(), associe un nouveau gadget au SplitterGadget. @LineBreak
@LineBreak
   Note: quand un gadget est remplacé à l'aide de SetGadgetAttribute(), l'ancien gadget n'est pas automatiquement supprimé. 
   Il sera remis sur la fenêtre qui contient le splitter, pour permettre de permuter les gadgets entre différents splitters sans avoir à les recréer.
   Si l'ancien gadget doit être supprimé, son numéro peut être recupéré avec GetGadgetAttribute() puis supprimé par FreeGadget() après son remplacement.@LineBreak 
@LineBreak
   Note: Un gadget ne peut pas être dans deux splitters à la fois.
   Aussi pour déplacer un gadget d'un splitter à un autre, commencez par le remplacer dans le premier splitter, 
   puis placez le dans le second splitter. @LineBreak
@LineBreak

@Bold "StringGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte @LineBreak
@LineBreak

@Bold "TextGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte @LineBreak
@LineBreak

@Bold "TrackBarGadget()" @LineBreak
 - supporte SetGadgetAttribute() avec #PB_TrackBar_Minimum, #PB_TrackBar_Maximum @LineBreak
@LineBreak

@Bold "TreeGadget()" @LineBreak
 - supporte SetGadgetColor() pour la couleur de fond et la couleur du texte et #PB_Gadget_LineColor @LineBreak
 - Supporte SetGadgetItemColor() pour la couleur de fond et du texte de l'élément @LineBreak
 - Changement complet de la gestion des éléments. Il n'y a plus aucun noeud, 
   juste une liste continue où chaque élément a un « sous-niveau ». Les sous-niveaux 
   de tous les éléments définissent la structure arborescente comme ceci:
@FixedFont
   + sublevel 0
   +-+ sublevel 1
   | | sublevel 1
   | +-+ sublevel 2
   | | sublevel 1
   | sublevel 0              
@EndFixedFont
 - nouveau paramètre à AddGadgetItem: AddGadgetItem(#Gadget, Position, Texte$ [, ImageID [, Options]])
   Le paramètre 'Options' est  toujours requis pour le TReeGadget et indique le niveau du nouvel élément. @LineBreak
@LineBreak   
   Pour créer l'arbre précédent, faites comme ceci:
@Code
   AddGadgetItem(#TreeGadget, -1, "sublevel 0", 0, 0)
   AddGadgetItem(#TreeGadget, -1, "sublevel 1", 0, 1)
   AddGadgetItem(#TreeGadget, -1, "sublevel 1", 0, 1)
   AddGadgetItem(#TreeGadget, -1, "sublevel 2", 0, 2)
   AddGadgetItem(#TreeGadget, -1, "sublevel 1", 0, 1)
   AddGadgetItem(#TreeGadget, -1, "sublevel 0", 0, 0)    
@EndCode
 - nouveau GetGadgetItemAttribute() avec #PB_Tree_SubLevel (readonly) Renvoie le niveau actuel de l'élément dans l'arbre. @LineBreak
 - @Red "Supprimé": OpenTreeGadgetNode() @LineBreak
 - @Red "Supprimé": CloseTreeGadgetNode() @LineBreak
 - @Red "Supprimé": TreeGadgetItemNumber()     - peut être émulé facilement avec GadgetItemID() @LineBreak
 - @Red "Supprimé": CountTreeGadgetNodeItems() - peut être émulé facilement en comparant le niveau des éléments @LineBreak
@LineBreak


@MainGuideLink "history" "Retour vers l'historique"
