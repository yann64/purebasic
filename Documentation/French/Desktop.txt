;
; Desktop library documentation
;
; (c) Fantaisie Software
;

@Library Desktop

@Overview

La bibliothèque desktop permet d'obtenir des 
informations sur l'environnement de travail 
de l'utilisateur: Le bureau.@LineBreak
Ces informations sont les dimensions du bureau, 
sa résolution, la position du curseur 
de la souris, etc.
@LineBreak
@LineBreak
Il est intéressant de signaler que vous avez la 
possibilité d'utiliser plusieurs écrans 
(moniteurs) simultanément.

@CommandList

@ExampleFile All Desktop.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = ExamineDesktops()

@Description
  Examine les caractéristiques des bureaux 
  que l'utilisateur a à sa disposition. 
  
@NoParameters

@ReturnValue
  Renvoie le nombre de bureaux détectés, 
  zéro sinon.

@Remarks
  Cette commande doit être appelée avant 
  d'utiliser les fonctions suivantes: 
  @@DesktopDepth, @@DesktopFrequency, @@DesktopHeight, @@DesktopName et 
  @@DesktopWidth.
@LineBreak
@LineBreak
  En règle générale, un utilisateur n'en 
  utilise qu'un seul, mais il est possible 
  d'en avoir plusieurs en cas de 
  double-écrans par exemple.
  
@Example 
@Code
  MessageRequester("Information bureau", "Vous avez "+Str(ExamineDesktops())+" bureau(x)")
@EndCode

@SeeAlso
  @@DesktopDepth, @@DesktopFrequency,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopDepth(#Bureau)

@Description
  Renvoie la profondeur de couleur d'un bureau. 
  
@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.

@ReturnValue
  Renvoie l'une des valeurs suivantes, en bits 
  par pixels: 1, 2, 4, 8, 15, 16, 24 ou 32. 
  
@Remarks
  @@ExamineDesktops doit être appelée avant cette 
  commande pour mettre à jour les informations 
  concernant les bureaux.
 
@Example 
@Code
  ExamineDesktops()
  MessageRequester("Information d'affichage", "Résolution = "+Str(DesktopWidth(0))+"x"+Str(DesktopHeight(0))+"x"+Str(DesktopDepth(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopFrequency,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.d = DesktopResolutionX()

@Description
  Renvoie le facteur de résolution DPI horizontal du bureau. 

@NoParameters

@ReturnValue
  Renvoie le facteur de résolution DPI du bureau sur l'axe 'x'.@LineBreak 
  Si la valeur est '1', aucun facteur DPI n'a été appliqué sur l'axe 'x'.@LineBreak
  Si la valeur est '1.25', un facteur de 125% a été appliqué sur l'axe 'x'.
   
@Remarks
  L'application doit être compilée avec le commutateur @ReferenceLink "ide_compiler" "'DPI'" pour que cette commande 
  renvoie le facteur de résolution DPI réel. Sinon, le résultat sera toujours '1'.

@Example
@Code
  Debug "DPI du bureau: Facteur d'échelle d'affichage horizontal : " + DesktopResolutionX()
@EndCode

@SeeAlso
  @@DesktopResolutionY, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat.d = DesktopResolutionY()

@Description
  Renvoie le facteur de résolution DPI vertical du bureau. 

@NoParameters

@ReturnValue
  Renvoie le facteur de résolution DPI du bureau sur l'axe 'y'.@LineBreak 
  Si la valeur est '1', aucun facteur DPI n'a été appliqué sur l'axe 'y'.@LineBreak
  Si la valeur est '1.25', un facteur de 125% a été appliqué sur l'axe 'y'.
   
@Remarks
  L'application doit être compilée avec le commutateur @ReferenceLink "ide_compiler" "'DPI'" pour que cette commande 
  renvoie le facteur de résolution DPI réel. Sinon, le résultat sera toujours '1'.

@Example
@Code
  Debug "DPI du bureau: Facteur d'échelle d'affichage vertical : " + DesktopResolutionY()
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopScaledX(Valeur)

@Description
  Renvoie une valeur après mise à l'échelle, en fonction du DPI horizontal. 

@Parameter "Valeur"
  La valeur avec un DPI de 1.

@ReturnValue
  Renvoie la valeur mise à l'échelle en fonction de l'affichage actuel du DPI sur l'axe 'x'.@LineBreak 
  Par exemple, sur un affichage avec une résolution de 125%, une valeur de 100 correspond à 125.
  
@Remarks
  Ceci est surtout utile pour calculer la position réelle du pixel indépendamment du DPI 
  d'affichage.
  @LineBreak 
  @LineBreak 
  L'application doit être compilée avec le commutateur @ReferenceLink "ide_compiler" "'DPI'" pour que cette commande 
  renvoie le facteur de résolution DPI réel. Sinon, le résultat sera toujours le même 
  que celui du paramètre 'Valeur'.

@Example
@Code
  Debug "DPI horizontal du bureau, valeur mise à l'échelle de 100: " + DesktopScaledX(100)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledY, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopScaledY(Valeur)

@Description
  Renvoie une valeur après mise à l'échelle, en fonction du DPI vertical. 

@Parameter "Valeur"
  La valeur avec un DPI de 1.

@ReturnValue
  Renvoie la valeur mise à l'échelle en fonction de l'affichage actuel du DPI sur l'axe 'y'.@LineBreak 
  Par exemple, sur un affichage avec une résolution de 125%, une valeur de 100 correspond à 125.
  
@Remarks
  Ceci est surtout utile pour calculer la position réelle du pixel indépendamment du DPI 
  d'affichage.
  @LineBreak 
  @LineBreak 
  L'application doit être compilée avec le commutateur @ReferenceLink "ide_compiler" "'DPI'" pour que cette commande 
  renvoie le facteur de résolution DPI réel. Sinon, le résultat sera toujours le même 
  que celui du paramètre 'Valeur'.

@Example
@Code
  Debug "DPI vertical du bureau, valeur mise à l'échelle de 100: " + DesktopScaledY(100)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledX, @@DesktopUnscaledX, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopUnscaledX(Valeur)

@Description
  Renvoie une valeur non mise à l'échelle en fonction du DPI horizontal en cours.

@Parameter "Valeur"
  La valeur avec le DPI en cours.

@ReturnValue
  Renvoie la valeur non mise à l'échelle en fonction du DPI actuel sur l'axe 'x'.@LineBreak 
  Par exemple, sur un affichage avec une résolution de 125%, une valeur de 125 correspond à 100.
  
@Remarks
  Ceci est surtout utile pour calculer la position réelle du pixel indépendamment du DPI d'affichage.
@LineBreak
@LineBreak
  L'application doit être compilée avec le commutateur @ReferenceLink "ide_compiler" "'DPI'" pour que cette commande 
  renvoie la valeur redimensionnée. Sinon, le résultat sera toujours le même que celui 
  du paramètre "Valeur".

@Example
@Code
  Debug "DPI horizontal du bureau, valeur non mise à l'échelle de 125: " + DesktopUnscaledX(125)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopUnscaledY(Valeur)

@Description
  Renvoie une valeur non mise à l'échelle en fonction du DPI vertical en cours.

@Parameter "Valeur"
  La valeur avec le DPI en cours.

@ReturnValue
  Renvoie la valeur non mise à l'échelle en fonction du DPI actuel sur l'axe 'y'.@LineBreak 
  Par exemple, sur un affichage avec une résolution de 125%, une valeur de 125 correspond à 100.
  
@Remarks
  Ceci est surtout utile pour calculer la position réelle du pixel indépendamment du DPI d'affichage.
@LineBreak
@LineBreak
  L'application doit être compilée avec le commutateur @ReferenceLink "ide_compiler" "'DPI'" pour que cette commande 
  renvoie la valeur redimensionnée. Sinon, le résultat sera toujours le même que celui 
  du paramètre "Valeur".

@Example
@Code
  Debug "DPI vertical du bureau, valeur non mise à l'échelle de 125: " + DesktopUnscaledY(125)
@EndCode

@SeeAlso
  @@DesktopResolutionX, @@DesktopResolutionY, @@DesktopScaledX, @@DesktopScaledY, @@DesktopUnscaledX 

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopFrequency(#Bureau)

@Description
  Renvoie le taux de rafraîchissement d'un bureau. 
  
@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.
  
@ReturnValue
  Renvoie le taux de rafraîchissement en Hertz 
  du bureau.
@LineBreak
@LineBreak
  Si Taux vaut 0 alors la fréquence matérielle par 
  défaut est utilisée, ou la fréquence réelle n'a 
  pu être déterminée.
  
@Remarks
  @@ExamineDesktops doit être appelée avant cette 
  commande pour mettre à jour les informations 
  concernant les bureaux.
@LineBreak
@LineBreak
  @Bold "Note:" sous Linux, cette fonction renvoie 
  toujours 0.
  
@Example 
@Code
  ExamineDesktops()
  Frequency = DesktopFrequency(0)
  If Frequency = 0
    MessageRequester("Information d'affichage", "Il n'y a aucun réglage utilisateur, le taux de rafraîchissement par défaut du matériel est utilisé.")
  Else
    MessageRequester("Information d'affichage", "taux de rafraîchissement du bureau: "+Str(Frequency)+" Hz.")
  EndIf
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopHeight(#Bureau)

@Description
  Renvoie la hauteur d'un bureau.
  
@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.
  
@ReturnValue
  Renvoie la hauteur en pixels du bureau.

@Remarks
  @@ExamineDesktops doit être appelée avant cette 
  commande pour mettre à jour les informations 
  concernant les bureaux.

@Example   
@Code
  ExamineDesktops()
  MessageRequester("Information d'affichage", "Résolution = "+Str(DesktopWidth(0))+"x"+Str(DesktopHeight(0))+"x"+Str(DesktopDepth(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, @@DesktopY, 
  @@DesktopWidth
  
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopX(#Bureau)

@Description
  Renvoie la position 'X' d'un bureau. 
  
@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.
  
@ReturnValue
  Renvoie la position 'X' en pixels, à partir 
  du coin supérieur gauche du bureau.
@LineBreak
@LineBreak
  La coordonnée est relative au coin supérieur 
  gauche de l'écran principal. @LineBreak
  Elle est négative si le bureau est indiqué 
  à gauche de l'écran principal.
  
@Remarks
  @@ExamineDesktops doit être appelée avant 
  cette commande pour mettre à jour les 
  informations concernant les bureaux.  
  
@Example   
@Code
  ExamineDesktops()
  MessageRequester("Position du bureau principal", "Position en X = "+Str(DesktopX(0)) + #LF$ + "Position en Y = "+Str(DesktopY(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopY, 
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopY(#Bureau)

@Description
  Renvoie la position 'Y' d'un bureau. 
  

@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.
  
@ReturnValue
  Renvoie la position 'Y' en pixels, à partir 
  du coin supérieur gauche du bureau.
@LineBreak
@LineBreak
  La coordonnée est relative au coin supérieur 
  gauche de l'écran principal. @LineBreak
  Elle est négative si le bureau est indiqué 
  au dessus de l'écran principal.

@Remarks
  @@ExamineDesktops doit être appelée avant 
  cette commande pour mettre à jour les 
  informations concernant les bureaux.    
  
@Example   
@Code
  ExamineDesktops()
  MessageRequester("Position du bureau principal", "Position en X = "+Str(DesktopX(0)) + #LF$ + "Position en Y = "+Str(DesktopY(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, 
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopMouseX()

@Description
  Renvoie la position absolue en X de la 
  souris sur le bureau.
  
@NoParameters

@ReturnValue
  Renvoie la position absolue en X en pixels 
  de la souris à partir du coin supérieur 
  gauche du moniteur principal.
@LineBreak
@LineBreak
  La coordonnée est négative si la souris est 
  sur un moniteur à gauche de l'écran principal.

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 30, "Position de la souris sur le bureau", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10, 6, 200, 20, "")
    
    Repeat
      Event = WindowEvent()
      
      If Event = 0 ; Il n'y a plus d'événement dans la file d'attente, libère le processeur quelques millisecondes pour le multi-tâches
        SetGadgetText(0, "Coordonnées : "+Str(DesktopMouseX())+","+Str(DesktopMouseY()))
        Delay(20)
      EndIf
       
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@DesktopMouseY, @@DesktopX, @@DesktopWidth, 
  @@WindowMouseX
 
@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopMouseY()

@Description
  Renvoie la position absolue en Y de la 
  souris sur le bureau.
  
@NoParameters

@ReturnValue
  Renvoie la position absolue en Y en pixels 
  de la souris à partir du coin supérieur 
  gauche du moniteur principal.
@LineBreak
@LineBreak
  La coordonnée est négative si la souris est 
  sur un moniteur au dessus de l'écran principal.

@Example 
@Code
  If OpenWindow(0, 0, 0, 300, 30, "Position de la souris sur le bureau", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10, 6, 200, 20, "")
    
    Repeat
      Event = WindowEvent()
      
      If Event = 0 ; Il n'y a plus d'événement dans la file d'attente, libère le processeur quelques millisecondes pour le multi-tâches
        SetGadgetText(0, "Coordonnées : "+Str(DesktopMouseX())+","+Str(DesktopMouseY()))
        Delay(20)
      EndIf
       
    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@DesktopMouseX, @@DesktopY, @@DesktopHeight, 
  @@WindowMouseY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat$ = DesktopName(#Bureau)

@Description
  Renvoie le nom d'un bureau.
  
@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.
  
@ReturnValue
  Renvoie le nom du bureau , s'il existe, une 
  chaîne vide sinon. 

@Remarks
  @@ExamineDesktops doit être appelée avant cette 
  commande pour mettre à jour les informations 
  concernant les bureaux.

@Example   
@Code
  ExamineDesktops()
  MessageRequester("Information bureau", "Nom du bureau principal = "+DesktopName(0))
@EndCode
  

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopFrequency,
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Resultat = DesktopWidth(#Bureau)

@Description
  Renvoie la largeur d'un bureau.
  
@Parameter "#Bureau"
  Le numéro du bureau à tester.
@LineBreak
@LineBreak
  Le bureau principal a toujours la valeur 0.
  
@ReturnValue
  Renvoie la largeur en pixel du bureau.

@Remarks
  @@ExamineDesktops doit être appelée avant 
  cette commande pour mettre à jour 
  les informations concernant les bureaux.

@Example   
@Code
  ExamineDesktops()
  MessageRequester("Information d'affichage", "Résolution = "+Str(DesktopWidth(0))+"x"+Str(DesktopHeight(0))+"x"+Str(DesktopDepth(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, @@DesktopY, 
  @@DesktopHeight

@SupportedOS

;--------------------------------------------------------------------------------------------------------
